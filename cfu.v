/* Generated by Yosys 0.27+3 (git sha1 c50f64181, x86_64-conda-linux-gnu-cc 11.2.0 -fvisibility-inlines-hidden -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -fdebug-prefix-map=/root/conda-eda/conda-eda/workdir/conda-env/conda-bld/yosys_1678490310925/work=/usr/local/src/conda/yosys-0.27_9_gc50f64181 -fdebug-prefix-map=/home/cx/CFU-Playground/env/conda/envs/cfu-common=/usr/local/src/conda-prefix -fPIC -Os -fno-merge-constants) */

(* \amaranth.hierarchy  = "Cfu" *)
(* top =  1  *)
(* generator = "Amaranth" *)
module Cfu(cmd_ready, cmd_payload_function_id, cmd_payload_inputs_0, cmd_payload_inputs_1, rsp_valid, rsp_ready, rsp_payload_outputs_0, reset, port0_addr, port1_addr, port2_addr, port3_addr, port0_din, port1_din, port2_din, port3_din, clk, rst, cmd_valid);
  reg \$auto$verilog_backend.cc:2097:dump_module$1  = 0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:250" *)
  wire [31:0] \$signal ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:251" *)
  wire \$signal$1 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:250" *)
  wire [31:0] \$signal$10 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:251" *)
  wire \$signal$11 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:252" *)
  reg \$signal$13 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:250" *)
  wire [31:0] \$signal$14 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:251" *)
  wire \$signal$15 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:252" *)
  reg \$signal$17 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:250" *)
  wire [31:0] \$signal$18 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:251" *)
  wire \$signal$19 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:252" *)
  reg \$signal$2 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:252" *)
  reg \$signal$21 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:250" *)
  wire [31:0] \$signal$22 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:251" *)
  wire \$signal$23 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:252" *)
  reg \$signal$25 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:250" *)
  wire [31:0] \$signal$26 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:251" *)
  wire \$signal$27 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:252" *)
  reg \$signal$29 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:250" *)
  wire [31:0] \$signal$3 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:251" *)
  wire \$signal$4 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:252" *)
  reg \$signal$5 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:250" *)
  wire [31:0] \$signal$6 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:251" *)
  wire \$signal$7 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:252" *)
  reg \$signal$9 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:185" *)
  input [9:0] cmd_payload_function_id;
  wire [9:0] cmd_payload_function_id;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:186" *)
  input [31:0] cmd_payload_inputs_0;
  wire [31:0] cmd_payload_inputs_0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:187" *)
  input [31:0] cmd_payload_inputs_1;
  wire [31:0] cmd_payload_inputs_1;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:183" *)
  output cmd_ready;
  reg cmd_ready;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:182" *)
  input cmd_valid;
  wire cmd_valid;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:246" *)
  reg current_function_done;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:245" *)
  reg [2:0] current_function_id;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:53" *)
  wire fallback1_done;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:48" *)
  wire [31:0] fallback1_in0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:49" *)
  wire [31:0] fallback1_in1;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:51" *)
  wire [31:0] fallback1_output;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:53" *)
  wire fallback2_done;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:48" *)
  wire [31:0] fallback2_in0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:49" *)
  wire [31:0] fallback2_in1;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:51" *)
  wire [31:0] fallback2_output;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:53" *)
  wire fallback3_done;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:48" *)
  wire [31:0] fallback3_in0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:49" *)
  wire [31:0] fallback3_in1;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:51" *)
  wire [31:0] fallback3_output;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:53" *)
  wire fallback4_done;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:48" *)
  wire [31:0] fallback4_in0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:49" *)
  wire [31:0] fallback4_in1;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:51" *)
  wire [31:0] fallback4_output;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:53" *)
  wire fallback5_done;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:48" *)
  wire [31:0] fallback5_in0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:49" *)
  wire [31:0] fallback5_in1;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:51" *)
  wire [31:0] fallback5_output;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:53" *)
  wire fallback6_done;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:48" *)
  wire [31:0] fallback6_in0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:49" *)
  wire [31:0] fallback6_in1;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:51" *)
  wire [31:0] fallback6_output;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:53" *)
  wire fallback7_done;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:48" *)
  wire [31:0] fallback7_in0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:49" *)
  wire [31:0] fallback7_in1;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:51" *)
  wire [31:0] fallback7_output;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:53" *)
  wire fn0_done;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:50" *)
  wire [6:0] fn0_funct7;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:48" *)
  wire [31:0] fn0_in0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:49" *)
  wire [31:0] fn0_in1;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:51" *)
  wire [31:0] fn0_output;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:52" *)
  wire fn0_start;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:272" *)
  reg [1:0] fsm_state = 2'h0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:272" *)
  reg [1:0] \fsm_state$next ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:238" *)
  wire [2:0] funct3;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:239" *)
  wire [6:0] funct7;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:50" *)
  wire [6:0] \funct7$30 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:50" *)
  wire [6:0] \funct7$31 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:50" *)
  wire [6:0] \funct7$32 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:50" *)
  wire [6:0] \funct7$33 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:50" *)
  wire [6:0] \funct7$34 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:50" *)
  wire [6:0] \funct7$35 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:50" *)
  wire [6:0] \funct7$36 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:192" *)
  input [31:0] port0_addr;
  wire [31:0] port0_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:193" *)
  input [31:0] port0_din;
  wire [31:0] port0_din;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:192" *)
  input [31:0] port1_addr;
  wire [31:0] port1_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:193" *)
  input [31:0] port1_din;
  wire [31:0] port1_din;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:192" *)
  input [31:0] port2_addr;
  wire [31:0] port2_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:193" *)
  input [31:0] port2_din;
  wire [31:0] port2_din;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:192" *)
  input [31:0] port3_addr;
  wire [31:0] port3_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:193" *)
  input [31:0] port3_din;
  wire [31:0] port3_din;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:191" *)
  input reset;
  wire reset;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:190" *)
  output [31:0] rsp_payload_outputs_0;
  reg [31:0] rsp_payload_outputs_0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:189" *)
  input rsp_ready;
  wire rsp_ready;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:188" *)
  output rsp_valid;
  reg rsp_valid;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  output rst;
  wire rst;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:52" *)
  wire start;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:52" *)
  wire \start$12 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:52" *)
  wire \start$16 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:52" *)
  wire \start$20 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:52" *)
  wire \start$24 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:52" *)
  wire \start$28 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:52" *)
  wire \start$8 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:244" *)
  reg [2:0] stored_function_id = 3'h0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:244" *)
  reg [2:0] \stored_function_id$next ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:247" *)
  reg [31:0] stored_output = 32'd0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:247" *)
  reg [31:0] \stored_output$next ;
  always @(posedge clk)
    stored_function_id <= \stored_function_id$next ;
  always @(posedge clk)
    fsm_state <= \fsm_state$next ;
  always @(posedge clk)
    stored_output <= \stored_output$next ;
  fallback1 fallback1 (
    .done(fallback1_done),
    .in0(fallback1_in0),
    .in1(fallback1_in1),
    .\output (fallback1_output)
  );
  fallback2 fallback2 (
    .done(fallback2_done),
    .in0(fallback2_in0),
    .in1(fallback2_in1),
    .\output (fallback2_output)
  );
  fallback3 fallback3 (
    .done(fallback3_done),
    .in0(fallback3_in0),
    .in1(fallback3_in1),
    .\output (fallback3_output)
  );
  fallback4 fallback4 (
    .done(fallback4_done),
    .in0(fallback4_in0),
    .in1(fallback4_in1),
    .\output (fallback4_output)
  );
  fallback5 fallback5 (
    .done(fallback5_done),
    .in0(fallback5_in0),
    .in1(fallback5_in1),
    .\output (fallback5_output)
  );
  fallback6 fallback6 (
    .done(fallback6_done),
    .in0(fallback6_in0),
    .in1(fallback6_in1),
    .\output (fallback6_output)
  );
  fallback7 fallback7 (
    .done(fallback7_done),
    .in0(fallback7_in0),
    .in1(fallback7_in1),
    .\output (fallback7_output)
  );
  fn0 fn0 (
    .clk(clk),
    .done(fn0_done),
    .funct7(fn0_funct7),
    .in0(fn0_in0),
    .in1(fn0_in1),
    .\output (fn0_output),
    .rst(rst),
    .start(fn0_start)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$1 ) begin end
    current_function_id = 3'h0;
    (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:272" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "WAIT_CMD/0" */
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:273" */
      2'h0:
          current_function_id = funct3;
      /* \amaranth.decoding  = "WAIT_INSTRUCTION/2" */
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:284" */
      2'h2:
          current_function_id = stored_function_id;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$1 ) begin end
    current_function_done = 1'h0;
    (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:272" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "WAIT_CMD/0" */
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:273" */
      2'h0:
          (* full_case = 32'd1 *)
          (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:277" *)
          casez (current_function_id)
            3'h0:
                current_function_done = \$signal$1 ;
            3'h1:
                current_function_done = \$signal$4 ;
            3'h2:
                current_function_done = \$signal$7 ;
            3'h3:
                current_function_done = \$signal$11 ;
            3'h4:
                current_function_done = \$signal$15 ;
            3'h5:
                current_function_done = \$signal$19 ;
            3'h6:
                current_function_done = \$signal$23 ;
            3'h?:
                current_function_done = \$signal$27 ;
          endcase
      /* \amaranth.decoding  = "WAIT_INSTRUCTION/2" */
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:284" */
      2'h2:
          (* full_case = 32'd1 *)
          (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:289" *)
          casez (current_function_id)
            3'h0:
                current_function_done = \$signal$1 ;
            3'h1:
                current_function_done = \$signal$4 ;
            3'h2:
                current_function_done = \$signal$7 ;
            3'h3:
                current_function_done = \$signal$11 ;
            3'h4:
                current_function_done = \$signal$15 ;
            3'h5:
                current_function_done = \$signal$19 ;
            3'h6:
                current_function_done = \$signal$23 ;
            3'h?:
                current_function_done = \$signal$27 ;
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$1 ) begin end
    cmd_ready = 1'h0;
    (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:272" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "WAIT_CMD/0" */
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:273" */
      2'h0:
          cmd_ready = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$1 ) begin end
    \stored_function_id$next  = stored_function_id;
    (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:272" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "WAIT_CMD/0" */
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:273" */
      2'h0:
          (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:279" *)
          casez (cmd_valid)
            /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:279" */
            1'h1:
                \stored_function_id$next  = cmd_payload_function_id[2:0];
          endcase
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \stored_function_id$next  = 3'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$1 ) begin end
    \$signal$2  = 1'h0;
    \$signal$5  = 1'h0;
    \$signal$9  = 1'h0;
    \$signal$13  = 1'h0;
    \$signal$17  = 1'h0;
    \$signal$21  = 1'h0;
    \$signal$25  = 1'h0;
    \$signal$29  = 1'h0;
    (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:272" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "WAIT_CMD/0" */
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:273" */
      2'h0:
          (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:279" *)
          casez (cmd_valid)
            /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:279" */
            1'h1:
                (* full_case = 32'd1 *)
                (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:282" *)
                casez (current_function_id)
                  3'h0:
                      \$signal$2  = 1'h1;
                  3'h1:
                      \$signal$5  = 1'h1;
                  3'h2:
                      \$signal$9  = 1'h1;
                  3'h3:
                      \$signal$13  = 1'h1;
                  3'h4:
                      \$signal$17  = 1'h1;
                  3'h5:
                      \$signal$21  = 1'h1;
                  3'h6:
                      \$signal$25  = 1'h1;
                  3'h?:
                      \$signal$29  = 1'h1;
                endcase
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$1 ) begin end
    rsp_valid = 1'h0;
    (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:272" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "WAIT_CMD/0" */
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:273" */
      2'h0:
          (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:279" *)
          casez (cmd_valid)
            /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:279" */
            1'h1:
                (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:259" *)
                casez (current_function_done)
                  /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:259" */
                  1'h1:
                      rsp_valid = 1'h1;
                endcase
          endcase
      /* \amaranth.decoding  = "WAIT_INSTRUCTION/2" */
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:284" */
      2'h2:
          (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:259" *)
          casez (current_function_done)
            /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:259" */
            1'h1:
                rsp_valid = 1'h1;
          endcase
      /* \amaranth.decoding  = "WAIT_TRANSFER/1" */
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:291" */
      2'h1:
          rsp_valid = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$1 ) begin end
    rsp_payload_outputs_0 = 32'd0;
    (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:272" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "WAIT_CMD/0" */
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:273" */
      2'h0:
          (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:279" *)
          casez (cmd_valid)
            /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:279" */
            1'h1:
                (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:259" *)
                casez (current_function_done)
                  /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:259" */
                  1'h1:
                      (* full_case = 32'd1 *)
                      (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:262" *)
                      casez (current_function_id)
                        3'h0:
                            rsp_payload_outputs_0 = \$signal ;
                        3'h1:
                            rsp_payload_outputs_0 = \$signal$3 ;
                        3'h2:
                            rsp_payload_outputs_0 = \$signal$6 ;
                        3'h3:
                            rsp_payload_outputs_0 = \$signal$10 ;
                        3'h4:
                            rsp_payload_outputs_0 = \$signal$14 ;
                        3'h5:
                            rsp_payload_outputs_0 = \$signal$18 ;
                        3'h6:
                            rsp_payload_outputs_0 = \$signal$22 ;
                        3'h?:
                            rsp_payload_outputs_0 = \$signal$26 ;
                      endcase
                endcase
          endcase
      /* \amaranth.decoding  = "WAIT_INSTRUCTION/2" */
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:284" */
      2'h2:
          (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:259" *)
          casez (current_function_done)
            /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:259" */
            1'h1:
                (* full_case = 32'd1 *)
                (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:262" *)
                casez (current_function_id)
                  3'h0:
                      rsp_payload_outputs_0 = \$signal ;
                  3'h1:
                      rsp_payload_outputs_0 = \$signal$3 ;
                  3'h2:
                      rsp_payload_outputs_0 = \$signal$6 ;
                  3'h3:
                      rsp_payload_outputs_0 = \$signal$10 ;
                  3'h4:
                      rsp_payload_outputs_0 = \$signal$14 ;
                  3'h5:
                      rsp_payload_outputs_0 = \$signal$18 ;
                  3'h6:
                      rsp_payload_outputs_0 = \$signal$22 ;
                  3'h?:
                      rsp_payload_outputs_0 = \$signal$26 ;
                endcase
          endcase
      /* \amaranth.decoding  = "WAIT_TRANSFER/1" */
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:291" */
      2'h1:
          rsp_payload_outputs_0 = stored_output;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$1 ) begin end
    \fsm_state$next  = fsm_state;
    (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:272" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "WAIT_CMD/0" */
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:273" */
      2'h0:
          (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:279" *)
          casez (cmd_valid)
            /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:279" */
            1'h1:
                (* full_case = 32'd1 *)
                (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:259" *)
                casez (current_function_done)
                  /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:259" */
                  1'h1:
                      (* full_case = 32'd1 *)
                      (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:263" *)
                      casez (rsp_ready)
                        /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:263" */
                        1'h1:
                            \fsm_state$next  = 2'h0;
                        /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:265" */
                        default:
                            \fsm_state$next  = 2'h1;
                      endcase
                  /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:269" */
                  default:
                      \fsm_state$next  = 2'h2;
                endcase
          endcase
      /* \amaranth.decoding  = "WAIT_INSTRUCTION/2" */
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:284" */
      2'h2:
          (* full_case = 32'd1 *)
          (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:259" *)
          casez (current_function_done)
            /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:259" */
            1'h1:
                (* full_case = 32'd1 *)
                (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:263" *)
                casez (rsp_ready)
                  /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:263" */
                  1'h1:
                      \fsm_state$next  = 2'h0;
                  /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:265" */
                  default:
                      \fsm_state$next  = 2'h1;
                endcase
            /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:269" */
            default:
                \fsm_state$next  = 2'h2;
          endcase
      /* \amaranth.decoding  = "WAIT_TRANSFER/1" */
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:291" */
      2'h1:
          (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:296" *)
          casez (rsp_ready)
            /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:296" */
            1'h1:
                \fsm_state$next  = 2'h0;
          endcase
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \fsm_state$next  = 2'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$1 ) begin end
    \stored_output$next  = stored_output;
    (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:272" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "WAIT_CMD/0" */
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:273" */
      2'h0:
          (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:279" *)
          casez (cmd_valid)
            /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:279" */
            1'h1:
                (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:259" *)
                casez (current_function_done)
                  /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:259" */
                  1'h1:
                      (* full_case = 32'd1 *)
                      (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:263" *)
                      casez (rsp_ready)
                        /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:263" */
                        1'h1:
                            /* empty */;
                        /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:265" */
                        default:
                            (* full_case = 32'd1 *)
                            (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:267" *)
                            casez (current_function_id)
                              3'h0:
                                  \stored_output$next  = \$signal ;
                              3'h1:
                                  \stored_output$next  = \$signal$3 ;
                              3'h2:
                                  \stored_output$next  = \$signal$6 ;
                              3'h3:
                                  \stored_output$next  = \$signal$10 ;
                              3'h4:
                                  \stored_output$next  = \$signal$14 ;
                              3'h5:
                                  \stored_output$next  = \$signal$18 ;
                              3'h6:
                                  \stored_output$next  = \$signal$22 ;
                              3'h?:
                                  \stored_output$next  = \$signal$26 ;
                            endcase
                      endcase
                endcase
          endcase
      /* \amaranth.decoding  = "WAIT_INSTRUCTION/2" */
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:284" */
      2'h2:
          (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:259" *)
          casez (current_function_done)
            /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:259" */
            1'h1:
                (* full_case = 32'd1 *)
                (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:263" *)
                casez (rsp_ready)
                  /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:263" */
                  1'h1:
                      /* empty */;
                  /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:265" */
                  default:
                      (* full_case = 32'd1 *)
                      (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:267" *)
                      casez (current_function_id)
                        3'h0:
                            \stored_output$next  = \$signal ;
                        3'h1:
                            \stored_output$next  = \$signal$3 ;
                        3'h2:
                            \stored_output$next  = \$signal$6 ;
                        3'h3:
                            \stored_output$next  = \$signal$10 ;
                        3'h4:
                            \stored_output$next  = \$signal$14 ;
                        3'h5:
                            \stored_output$next  = \$signal$18 ;
                        3'h6:
                            \stored_output$next  = \$signal$22 ;
                        3'h?:
                            \stored_output$next  = \$signal$26 ;
                      endcase
                endcase
          endcase
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \stored_output$next  = 32'd0;
    endcase
  end
  assign rst = reset;
  assign \funct7$36  = funct7;
  assign fallback7_in1 = cmd_payload_inputs_1;
  assign fallback7_in0 = cmd_payload_inputs_0;
  assign \funct7$35  = funct7;
  assign fallback6_in1 = cmd_payload_inputs_1;
  assign fallback6_in0 = cmd_payload_inputs_0;
  assign \funct7$34  = funct7;
  assign fallback5_in1 = cmd_payload_inputs_1;
  assign fallback5_in0 = cmd_payload_inputs_0;
  assign \funct7$33  = funct7;
  assign fallback4_in1 = cmd_payload_inputs_1;
  assign fallback4_in0 = cmd_payload_inputs_0;
  assign \funct7$32  = funct7;
  assign fallback3_in1 = cmd_payload_inputs_1;
  assign fallback3_in0 = cmd_payload_inputs_0;
  assign \funct7$31  = funct7;
  assign fallback2_in1 = cmd_payload_inputs_1;
  assign fallback2_in0 = cmd_payload_inputs_0;
  assign \funct7$30  = funct7;
  assign fallback1_in1 = cmd_payload_inputs_1;
  assign fallback1_in0 = cmd_payload_inputs_0;
  assign fn0_funct7 = funct7;
  assign fn0_in1 = cmd_payload_inputs_1;
  assign fn0_in0 = cmd_payload_inputs_0;
  assign \start$28  = \$signal$29 ;
  assign \$signal$27  = fallback7_done;
  assign \$signal$26  = fallback7_output;
  assign \start$24  = \$signal$25 ;
  assign \$signal$23  = fallback6_done;
  assign \$signal$22  = fallback6_output;
  assign \start$20  = \$signal$21 ;
  assign \$signal$19  = fallback5_done;
  assign \$signal$18  = fallback5_output;
  assign \start$16  = \$signal$17 ;
  assign \$signal$15  = fallback4_done;
  assign \$signal$14  = fallback4_output;
  assign \start$12  = \$signal$13 ;
  assign \$signal$11  = fallback3_done;
  assign \$signal$10  = fallback3_output;
  assign \start$8  = \$signal$9 ;
  assign \$signal$7  = fallback2_done;
  assign \$signal$6  = fallback2_output;
  assign start = \$signal$5 ;
  assign \$signal$4  = fallback1_done;
  assign \$signal$3  = fallback1_output;
  assign fn0_start = \$signal$2 ;
  assign \$signal$1  = fn0_done;
  assign \$signal  = fn0_output;
  assign funct7 = cmd_payload_function_id[9:3];
  assign funct3 = cmd_payload_function_id[2:0];
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.FIFO" *)
(* generator = "Amaranth" *)
module FIFO(clk, r_data, r_rdy, r_en, w_level, w_en, w_data, rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$2  = 0;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:250" *)
  wire \$1 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:250" *)
  wire \$3 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:250" *)
  wire \$5 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:258" *)
  wire [9:0] \$7 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:226" *)
  wire [9:0] level;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:83" *)
  output [31:0] r_data;
  wire [31:0] r_data;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:85" *)
  input r_en;
  wire r_en;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:86" *)
  wire [9:0] r_level;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:84" *)
  output r_rdy;
  reg r_rdy = 1'h0;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:84" *)
  reg \r_rdy$next ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:122" *)
  wire [8:0] unbuffered_level;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:83" *)
  wire [31:0] unbuffered_r_data;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:85" *)
  wire unbuffered_r_en;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:84" *)
  wire unbuffered_r_rdy;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:78" *)
  wire [31:0] unbuffered_w_data;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:80" *)
  wire unbuffered_w_en;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:79" *)
  wire unbuffered_w_rdy;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:78" *)
  input [31:0] w_data;
  wire [31:0] w_data;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:80" *)
  input w_en;
  wire w_en;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:81" *)
  output [9:0] w_level;
  wire [9:0] w_level;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:79" *)
  wire w_rdy;
  assign \$1  = ~ (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:250" *) r_rdy;
  assign \$3  = \$1  | (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:250" *) r_en;
  assign \$5  = unbuffered_r_rdy & (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:250" *) \$3 ;
  assign \$7  = unbuffered_level + (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:258" *) r_rdy;
  always @(posedge clk)
    r_rdy <= \r_rdy$next ;
  unbuffered unbuffered (
    .clk(clk),
    .level(unbuffered_level),
    .r_data(unbuffered_r_data),
    .r_en(unbuffered_r_en),
    .r_rdy(unbuffered_r_rdy),
    .rst(rst),
    .w_data(unbuffered_w_data),
    .w_en(unbuffered_w_en),
    .w_rdy(unbuffered_w_rdy)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$2 ) begin end
    \r_rdy$next  = r_rdy;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:252" *)
    casez ({ r_en, unbuffered_r_en })
      /* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:252" */
      2'b?1:
          \r_rdy$next  = 1'h1;
      /* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:254" */
      2'b1?:
          \r_rdy$next  = 1'h0;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \r_rdy$next  = 1'h0;
    endcase
  end
  assign r_level = level;
  assign w_level = level;
  assign level = \$7 ;
  assign unbuffered_r_en = \$5 ;
  assign r_data = unbuffered_r_data;
  assign w_rdy = unbuffered_w_rdy;
  assign unbuffered_w_en = w_en;
  assign unbuffered_w_data = w_data;
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.acc" *)
(* generator = "Amaranth" *)
module acc(clk, \$signal , \$signal$1 , \$signal$2 , \$signal$3 , \$signal$4 , \$signal$5 , \$signal$6 , \$signal$7 , \$signal$8 , \$signal$9 , \$signal$10 , \$signal$11 , \$signal$12 , \$signal$13 , \$signal$14 , \$signal$15 , switch_PorD, result_0, result_1, result_2
, result_3, add_en, clear, rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$3  = 0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *)
  wire \$100 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [31:0] \$102 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:156" *)
  wire [24:0] \$103 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [25:0] \$105 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:156" *)
  wire [24:0] \$107 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [25:0] \$109 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [26:0] \$111 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:157" *)
  wire [24:0] \$113 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:157" *)
  wire [24:0] \$115 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [25:0] \$117 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:158" *)
  wire [24:0] \$119 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [25:0] \$121 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [26:0] \$123 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [27:0] \$125 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *)
  wire \$128 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [31:0] \$130 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:159" *)
  wire [24:0] \$131 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [25:0] \$133 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:159" *)
  wire [24:0] \$135 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:159" *)
  wire [24:0] \$137 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [25:0] \$139 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [26:0] \$141 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [24:0] \$143 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:161" *)
  wire [24:0] \$145 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [25:0] \$147 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [26:0] \$149 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [27:0] \$151 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *)
  wire \$154 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:164" *)
  wire [32:0] \$156 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:164" *)
  wire [32:0] \$157 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *)
  wire \$159 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *)
  wire \$16 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:165" *)
  wire [32:0] \$161 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:165" *)
  wire [32:0] \$162 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *)
  wire \$164 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:166" *)
  wire [32:0] \$166 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:166" *)
  wire [32:0] \$167 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *)
  wire \$169 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:167" *)
  wire [32:0] \$171 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:167" *)
  wire [32:0] \$172 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *)
  wire \$174 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:178" *)
  wire [31:0] \$176 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *)
  wire \$178 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [27:0] \$18 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:179" *)
  wire [31:0] \$180 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *)
  wire \$182 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:180" *)
  wire [31:0] \$184 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [24:0] \$19 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [24:0] \$21 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [25:0] \$23 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [24:0] \$25 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [24:0] \$27 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [25:0] \$29 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [26:0] \$31 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *)
  wire \$34 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:115" *)
  wire [32:0] \$36 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:115" *)
  wire [32:0] \$37 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *)
  wire \$39 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:116" *)
  wire [32:0] \$41 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:116" *)
  wire [32:0] \$42 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:177" *)
  wire [31:0] \$44 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *)
  wire \$46 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *)
  wire \$48 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *)
  wire \$50 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *)
  wire \$52 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *)
  wire \$54 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [31:0] \$56 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [24:0] \$57 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [24:0] \$59 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [25:0] \$61 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [24:0] \$63 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [24:0] \$65 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [25:0] \$67 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [26:0] \$69 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *)
  wire \$72 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [31:0] \$74 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [24:0] \$75 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:153" *)
  wire [24:0] \$77 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [25:0] \$79 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [26:0] \$81 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:154" *)
  wire [24:0] \$83 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:154" *)
  wire [24:0] \$85 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [25:0] \$87 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:154" *)
  wire [24:0] \$89 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:155" *)
  wire [24:0] \$91 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [25:0] \$93 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [26:0] \$95 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [27:0] \$97 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:100" *)
  input [23:0] \$signal ;
  wire [23:0] \$signal ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:100" *)
  input [23:0] \$signal$1 ;
  wire [23:0] \$signal$1 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:100" *)
  input [23:0] \$signal$10 ;
  wire [23:0] \$signal$10 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:100" *)
  input [23:0] \$signal$11 ;
  wire [23:0] \$signal$11 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:100" *)
  input [23:0] \$signal$12 ;
  wire [23:0] \$signal$12 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:100" *)
  input [23:0] \$signal$13 ;
  wire [23:0] \$signal$13 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:100" *)
  input [23:0] \$signal$14 ;
  wire [23:0] \$signal$14 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:100" *)
  input [23:0] \$signal$15 ;
  wire [23:0] \$signal$15 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:100" *)
  input [23:0] \$signal$2 ;
  wire [23:0] \$signal$2 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:100" *)
  input [23:0] \$signal$3 ;
  wire [23:0] \$signal$3 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:100" *)
  input [23:0] \$signal$4 ;
  wire [23:0] \$signal$4 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:100" *)
  input [23:0] \$signal$5 ;
  wire [23:0] \$signal$5 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:100" *)
  input [23:0] \$signal$6 ;
  wire [23:0] \$signal$6 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:100" *)
  input [23:0] \$signal$7 ;
  wire [23:0] \$signal$7 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:100" *)
  input [23:0] \$signal$8 ;
  wire [23:0] \$signal$8 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:100" *)
  input [23:0] \$signal$9 ;
  wire [23:0] \$signal$9 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:131" *)
  reg [31:0] Y_0 = 32'd0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:131" *)
  reg [31:0] \Y_0$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:131" *)
  reg [31:0] Y_1 = 32'd0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:131" *)
  reg [31:0] \Y_1$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:131" *)
  reg [31:0] Y_2 = 32'd0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:131" *)
  reg [31:0] \Y_2$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:131" *)
  reg [31:0] Y_3 = 32'd0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:131" *)
  reg [31:0] \Y_3$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:133" *)
  reg [31:0] Y_tmp_0 = 32'd0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:133" *)
  reg [31:0] \Y_tmp_0$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:133" *)
  reg [31:0] Y_tmp_1 = 32'd0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:133" *)
  reg [31:0] \Y_tmp_1$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:133" *)
  reg [31:0] Y_tmp_2 = 32'd0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:133" *)
  reg [31:0] \Y_tmp_2$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:133" *)
  reg [31:0] Y_tmp_3 = 32'd0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:133" *)
  reg [31:0] \Y_tmp_3$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:112" *)
  reg [31:0] accumulator = 32'd0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:112" *)
  reg [31:0] \accumulator$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:99" *)
  input add_en;
  wire add_en;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:109" *)
  reg [27:0] add_sum = 28'h0000000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:109" *)
  reg [27:0] \add_sum$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:102" *)
  input clear;
  wire clear;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:136" *)
  reg [23:0] late_in_values_0 = 24'h000000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:136" *)
  reg [23:0] \late_in_values_0$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:136" *)
  reg [23:0] late_in_values_1 = 24'h000000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:136" *)
  reg [23:0] \late_in_values_1$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:136" *)
  reg [23:0] late_in_values_2 = 24'h000000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:136" *)
  reg [23:0] \late_in_values_2$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:136" *)
  reg [23:0] late_in_values_3 = 24'h000000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:136" *)
  reg [23:0] \late_in_values_3$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:104" *)
  output [31:0] result_0;
  reg [31:0] result_0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:104" *)
  output [31:0] result_1;
  reg [31:0] result_1;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:104" *)
  output [31:0] result_2;
  reg [31:0] result_2;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:104" *)
  output [31:0] result_3;
  reg [31:0] result_3;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:101" *)
  input switch_PorD;
  wire switch_PorD;
  assign \$100  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *) switch_PorD;
  assign \$103  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:156" *) $signed(\$signal$8 );
  assign \$105  = $signed(\$signal$2 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$103 );
  assign \$107  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:156" *) $signed(\$signal$10 );
  assign \$109  = $signed(\$107 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$signal$3 );
  assign \$111  = $signed(\$105 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$109 );
  assign \$113  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:157" *) $signed(\$signal$9 );
  assign \$115  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:157" *) $signed(\$signal$11 );
  assign \$117  = $signed(\$113 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$115 );
  assign \$119  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:158" *) $signed(\$signal$12 );
  assign \$121  = $signed(\$signal$6 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$119 );
  assign \$123  = $signed(\$117 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$121 );
  assign \$125  = $signed(\$111 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$123 );
  assign \$102  = + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$125 );
  assign \$128  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *) switch_PorD;
  assign \$131  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:159" *) $signed(\$signal$9 );
  assign \$133  = $signed(\$signal$3 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$131 );
  assign \$135  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:159" *) $signed(\$signal$11 );
  assign \$137  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:159" *) $signed(\$signal$6 );
  assign \$139  = $signed(\$135 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$137 );
  assign \$141  = $signed(\$133 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$139 );
  assign \$143  = $signed(\$signal$12 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$signal$14 );
  assign \$145  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:161" *) $signed(\$signal$7 );
  assign \$147  = $signed(\$145 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$signal$13 );
  assign \$149  = $signed(\$143 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$147 );
  assign \$151  = $signed(\$141 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$149 );
  assign \$130  = + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$151 );
  assign \$154  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *) switch_PorD;
  assign \$157  = $signed(Y_tmp_0) + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:164" *) $signed(late_in_values_0);
  assign \$159  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *) switch_PorD;
  assign \$162  = $signed(Y_tmp_1) - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:165" *) $signed(late_in_values_1);
  assign \$164  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *) switch_PorD;
  assign \$167  = $signed(Y_tmp_2) - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:166" *) $signed(late_in_values_2);
  assign \$16  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *) switch_PorD;
  assign \$169  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *) switch_PorD;
  assign \$172  = $signed(Y_tmp_3) + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:167" *) $signed(late_in_values_3);
  assign \$174  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *) switch_PorD;
  assign \$178  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *) switch_PorD;
  assign \$182  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *) switch_PorD;
  always @(posedge clk)
    add_sum <= \add_sum$next ;
  always @(posedge clk)
    accumulator <= \accumulator$next ;
  always @(posedge clk)
    late_in_values_0 <= \late_in_values_0$next ;
  always @(posedge clk)
    late_in_values_1 <= \late_in_values_1$next ;
  always @(posedge clk)
    late_in_values_2 <= \late_in_values_2$next ;
  always @(posedge clk)
    late_in_values_3 <= \late_in_values_3$next ;
  always @(posedge clk)
    Y_tmp_0 <= \Y_tmp_0$next ;
  always @(posedge clk)
    Y_tmp_1 <= \Y_tmp_1$next ;
  always @(posedge clk)
    Y_tmp_2 <= \Y_tmp_2$next ;
  always @(posedge clk)
    Y_tmp_3 <= \Y_tmp_3$next ;
  always @(posedge clk)
    Y_0 <= \Y_0$next ;
  always @(posedge clk)
    Y_1 <= \Y_1$next ;
  always @(posedge clk)
    Y_2 <= \Y_2$next ;
  always @(posedge clk)
    Y_3 <= \Y_3$next ;
  assign \$19  = $signed(\$signal ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$signal$1 );
  assign \$21  = $signed(\$signal$2 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$signal$3 );
  assign \$23  = $signed(\$19 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$21 );
  assign \$25  = $signed(\$signal$4 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$signal$5 );
  assign \$27  = $signed(\$signal$6 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$signal$7 );
  assign \$29  = $signed(\$25 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$27 );
  assign \$31  = $signed(\$23 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$29 );
  assign \$18  = + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$31 );
  assign \$34  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *) switch_PorD;
  assign \$37  = $signed(accumulator) + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:115" *) $signed(add_sum);
  assign \$39  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *) switch_PorD;
  assign \$42  = $signed(accumulator) + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:116" *) $signed(add_sum);
  assign \$46  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *) switch_PorD;
  assign \$48  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *) switch_PorD;
  assign \$50  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *) switch_PorD;
  assign \$52  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *) switch_PorD;
  assign \$54  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *) switch_PorD;
  assign \$57  = $signed(\$signal ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$signal$2 );
  assign \$59  = $signed(\$signal$8 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$signal$1 );
  assign \$61  = $signed(\$57 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$59 );
  assign \$63  = $signed(\$signal$3 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$signal$9 );
  assign \$65  = $signed(\$signal$4 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$signal$6 );
  assign \$67  = $signed(\$63 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$65 );
  assign \$69  = $signed(\$61 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$67 );
  assign \$56  = + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$69 );
  assign \$72  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *) switch_PorD;
  assign \$75  = $signed(\$signal$1 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$signal$3 );
  assign \$77  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:153" *) $signed(\$signal$4 );
  assign \$79  = $signed(\$signal$9 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$77 );
  assign \$81  = $signed(\$75 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$79 );
  assign \$83  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:154" *) $signed(\$signal$6 );
  assign \$85  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:154" *) $signed(\$signal$12 );
  assign \$87  = $signed(\$83 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$85 );
  assign \$89  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:154" *) $signed(\$signal$5 );
  assign \$91  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:155" *) $signed(\$signal$7 );
  assign \$93  = $signed(\$89 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$91 );
  assign \$95  = $signed(\$87 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$93 );
  assign \$97  = $signed(\$81 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$95 );
  assign \$74  = + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$97 );
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$3 ) begin end
    \add_sum$next  = add_sum;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *)
    casez (\$16 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" */
      1'h1:
          \add_sum$next  = \$18 ;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \add_sum$next  = 28'h0000000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$3 ) begin end
    \accumulator$next  = accumulator;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *)
    casez (\$34 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" */
      1'h1:
        begin
          (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:114" *)
          casez (add_en)
            /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:114" */
            1'h1:
                \accumulator$next  = \$37 [31:0];
          endcase
          (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:122" *)
          casez (clear)
            /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:122" */
            1'h1:
                \accumulator$next  = 32'd0;
          endcase
        end
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \accumulator$next  = 32'd0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$3 ) begin end
    \Y_tmp_3$next  = Y_tmp_3;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *)
    casez (\$128 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:125" */
      default:
          \Y_tmp_3$next  = \$130 ;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \Y_tmp_3$next  = 32'd0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$3 ) begin end
    \Y_0$next  = Y_0;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *)
    casez (\$154 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:125" */
      default:
          \Y_0$next  = \$157 [31:0];
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \Y_0$next  = 32'd0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$3 ) begin end
    \Y_1$next  = Y_1;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *)
    casez (\$159 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:125" */
      default:
          \Y_1$next  = \$162 [31:0];
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \Y_1$next  = 32'd0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$3 ) begin end
    \Y_2$next  = Y_2;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *)
    casez (\$164 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:125" */
      default:
          \Y_2$next  = \$167 [31:0];
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \Y_2$next  = 32'd0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$3 ) begin end
    \Y_3$next  = Y_3;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *)
    casez (\$169 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:125" */
      default:
          \Y_3$next  = \$172 [31:0];
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \Y_3$next  = 32'd0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$3 ) begin end
    result_1 = 32'd0;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *)
    casez (\$174 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:125" */
      default:
          result_1 = \$176 ;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$3 ) begin end
    result_2 = 32'd0;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *)
    casez (\$178 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:125" */
      default:
          result_2 = \$180 ;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$3 ) begin end
    result_3 = 32'd0;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *)
    casez (\$182 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:125" */
      default:
          result_3 = \$184 ;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$3 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *)
    casez (\$39 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" */
      1'h1:
          (* full_case = 32'd1 *)
          (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:114" *)
          casez (add_en)
            /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:114" */
            1'h1:
                result_0 = \$42 [31:0];
            /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:117" */
            default:
                result_0 = accumulator;
          endcase
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:125" */
      default:
          result_0 = \$44 ;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$3 ) begin end
    \late_in_values_0$next  = late_in_values_0;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *)
    casez (\$46 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:125" */
      default:
          \late_in_values_0$next  = \$signal$12 ;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \late_in_values_0$next  = 24'h000000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$3 ) begin end
    \late_in_values_1$next  = late_in_values_1;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *)
    casez (\$48 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:125" */
      default:
          \late_in_values_1$next  = \$signal$13 ;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \late_in_values_1$next  = 24'h000000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$3 ) begin end
    \late_in_values_2$next  = late_in_values_2;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *)
    casez (\$50 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:125" */
      default:
          \late_in_values_2$next  = \$signal$14 ;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \late_in_values_2$next  = 24'h000000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$3 ) begin end
    \late_in_values_3$next  = late_in_values_3;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *)
    casez (\$52 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:125" */
      default:
          \late_in_values_3$next  = \$signal$15 ;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \late_in_values_3$next  = 24'h000000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$3 ) begin end
    \Y_tmp_0$next  = Y_tmp_0;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *)
    casez (\$54 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:125" */
      default:
          \Y_tmp_0$next  = \$56 ;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \Y_tmp_0$next  = 32'd0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$3 ) begin end
    \Y_tmp_1$next  = Y_tmp_1;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *)
    casez (\$72 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:125" */
      default:
          \Y_tmp_1$next  = \$74 ;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \Y_tmp_1$next  = 32'd0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$3 ) begin end
    \Y_tmp_2$next  = Y_tmp_2;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" *)
    casez (\$100 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:107" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:125" */
      default:
          \Y_tmp_2$next  = \$102 ;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \Y_tmp_2$next  = 32'd0;
    endcase
  end
  assign \$36  = \$37 ;
  assign \$41  = \$42 ;
  assign \$156  = \$157 ;
  assign \$161  = \$162 ;
  assign \$166  = \$167 ;
  assign \$171  = \$172 ;
  assign \$44  = { Y_0[31], Y_0[31], Y_0[31:2] };
  assign \$176  = { Y_1[31], Y_1[31], Y_1[31:2] };
  assign \$180  = { Y_2[31], Y_2[31], Y_2[31:2] };
  assign \$184  = { Y_3[31], Y_3[31], Y_3[31:2] };
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.btw" *)
(* generator = "Amaranth" *)
module btw(clk, in_value, shift_en, result, rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$4  = 0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:211" *)
  reg [31:0] calc;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:202" *)
  input [7:0] in_value;
  wire [7:0] in_value;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:207" *)
  reg [31:0] register = 32'd0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:207" *)
  reg [31:0] \register$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:204" *)
  output [31:0] result;
  reg [31:0] result;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:201" *)
  input shift_en;
  wire shift_en;
  always @(posedge clk)
    register <= \register$next ;
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$4 ) begin end
    result = register;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:210" *)
    casez (shift_en)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:210" */
      1'h1:
          result = calc;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$4 ) begin end
    calc = 32'd0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:210" *)
    casez (shift_en)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:210" */
      1'h1:
          calc = { in_value, register[31:8] };
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$4 ) begin end
    \register$next  = register;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:210" *)
    casez (shift_en)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:210" */
      1'h1:
          \register$next  = calc;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \register$next  = 32'd0;
    endcase
  end
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.seq.depth2_delay" *)
(* generator = "Amaranth" *)
module depth2_delay(clk, cycles, \input , \output , rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$5  = 0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:47" *)
  wire \$1 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:49" *)
  wire \$3 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:51" *)
  wire \$5 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:53" *)
  wire \$7 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:40" *)
  input [3:0] cycles;
  wire [3:0] cycles;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:41" *)
  input \input ;
  wire \input ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:42" *)
  output \output ;
  reg \output ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:45" *)
  reg [5:0] shift_register = 6'h00;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:45" *)
  reg [5:0] \shift_register$next ;
  assign \$1  = cycles == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:47" *) 3'h5;
  assign \$3  = cycles == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:49" *) 3'h4;
  assign \$5  = cycles == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:51" *) 2'h3;
  assign \$7  = cycles == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:53" *) 2'h2;
  always @(posedge clk)
    shift_register <= \shift_register$next ;
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$5 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:47" *)
    casez ({ \$7 , \$5 , \$3 , \$1  })
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:47" */
      4'b???1:
          \output  = shift_register[4];
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:49" */
      4'b??1?:
          \output  = shift_register[3];
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:51" */
      4'b?1??:
          \output  = shift_register[2];
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:53" */
      4'b1???:
          \output  = shift_register[1];
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:55" */
      default:
          \output  = shift_register[0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$5 ) begin end
    \shift_register$next [5:1] = shift_register[4:0];
    \shift_register$next [0] = \input ;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \shift_register$next  = 6'h00;
    endcase
  end
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.ins.dp_0" *)
(* generator = "Amaranth" *)
module dp_0(w_addr, w_data, w_en, r_data, r_addr, clk);
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:215" *)
  wire [9:0] mem_r_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:215" *)
  wire [31:0] mem_r_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:215" *)
  wire mem_r_en;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:214" *)
  wire [9:0] mem_w_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:214" *)
  wire [31:0] mem_w_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:214" *)
  wire mem_w_en;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:209" *)
  input [9:0] r_addr;
  wire [9:0] r_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:210" *)
  output [31:0] r_data;
  wire [31:0] r_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:207" *)
  input [9:0] w_addr;
  wire [9:0] w_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:208" *)
  input [31:0] w_data;
  wire [31:0] w_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:206" *)
  input w_en;
  wire w_en;
  reg [31:0] mem [1023:0];
  initial begin
    mem[0] = 32'd0;
    mem[1] = 32'd0;
    mem[2] = 32'd0;
    mem[3] = 32'd0;
    mem[4] = 32'd0;
    mem[5] = 32'd0;
    mem[6] = 32'd0;
    mem[7] = 32'd0;
    mem[8] = 32'd0;
    mem[9] = 32'd0;
    mem[10] = 32'd0;
    mem[11] = 32'd0;
    mem[12] = 32'd0;
    mem[13] = 32'd0;
    mem[14] = 32'd0;
    mem[15] = 32'd0;
    mem[16] = 32'd0;
    mem[17] = 32'd0;
    mem[18] = 32'd0;
    mem[19] = 32'd0;
    mem[20] = 32'd0;
    mem[21] = 32'd0;
    mem[22] = 32'd0;
    mem[23] = 32'd0;
    mem[24] = 32'd0;
    mem[25] = 32'd0;
    mem[26] = 32'd0;
    mem[27] = 32'd0;
    mem[28] = 32'd0;
    mem[29] = 32'd0;
    mem[30] = 32'd0;
    mem[31] = 32'd0;
    mem[32] = 32'd0;
    mem[33] = 32'd0;
    mem[34] = 32'd0;
    mem[35] = 32'd0;
    mem[36] = 32'd0;
    mem[37] = 32'd0;
    mem[38] = 32'd0;
    mem[39] = 32'd0;
    mem[40] = 32'd0;
    mem[41] = 32'd0;
    mem[42] = 32'd0;
    mem[43] = 32'd0;
    mem[44] = 32'd0;
    mem[45] = 32'd0;
    mem[46] = 32'd0;
    mem[47] = 32'd0;
    mem[48] = 32'd0;
    mem[49] = 32'd0;
    mem[50] = 32'd0;
    mem[51] = 32'd0;
    mem[52] = 32'd0;
    mem[53] = 32'd0;
    mem[54] = 32'd0;
    mem[55] = 32'd0;
    mem[56] = 32'd0;
    mem[57] = 32'd0;
    mem[58] = 32'd0;
    mem[59] = 32'd0;
    mem[60] = 32'd0;
    mem[61] = 32'd0;
    mem[62] = 32'd0;
    mem[63] = 32'd0;
    mem[64] = 32'd0;
    mem[65] = 32'd0;
    mem[66] = 32'd0;
    mem[67] = 32'd0;
    mem[68] = 32'd0;
    mem[69] = 32'd0;
    mem[70] = 32'd0;
    mem[71] = 32'd0;
    mem[72] = 32'd0;
    mem[73] = 32'd0;
    mem[74] = 32'd0;
    mem[75] = 32'd0;
    mem[76] = 32'd0;
    mem[77] = 32'd0;
    mem[78] = 32'd0;
    mem[79] = 32'd0;
    mem[80] = 32'd0;
    mem[81] = 32'd0;
    mem[82] = 32'd0;
    mem[83] = 32'd0;
    mem[84] = 32'd0;
    mem[85] = 32'd0;
    mem[86] = 32'd0;
    mem[87] = 32'd0;
    mem[88] = 32'd0;
    mem[89] = 32'd0;
    mem[90] = 32'd0;
    mem[91] = 32'd0;
    mem[92] = 32'd0;
    mem[93] = 32'd0;
    mem[94] = 32'd0;
    mem[95] = 32'd0;
    mem[96] = 32'd0;
    mem[97] = 32'd0;
    mem[98] = 32'd0;
    mem[99] = 32'd0;
    mem[100] = 32'd0;
    mem[101] = 32'd0;
    mem[102] = 32'd0;
    mem[103] = 32'd0;
    mem[104] = 32'd0;
    mem[105] = 32'd0;
    mem[106] = 32'd0;
    mem[107] = 32'd0;
    mem[108] = 32'd0;
    mem[109] = 32'd0;
    mem[110] = 32'd0;
    mem[111] = 32'd0;
    mem[112] = 32'd0;
    mem[113] = 32'd0;
    mem[114] = 32'd0;
    mem[115] = 32'd0;
    mem[116] = 32'd0;
    mem[117] = 32'd0;
    mem[118] = 32'd0;
    mem[119] = 32'd0;
    mem[120] = 32'd0;
    mem[121] = 32'd0;
    mem[122] = 32'd0;
    mem[123] = 32'd0;
    mem[124] = 32'd0;
    mem[125] = 32'd0;
    mem[126] = 32'd0;
    mem[127] = 32'd0;
    mem[128] = 32'd0;
    mem[129] = 32'd0;
    mem[130] = 32'd0;
    mem[131] = 32'd0;
    mem[132] = 32'd0;
    mem[133] = 32'd0;
    mem[134] = 32'd0;
    mem[135] = 32'd0;
    mem[136] = 32'd0;
    mem[137] = 32'd0;
    mem[138] = 32'd0;
    mem[139] = 32'd0;
    mem[140] = 32'd0;
    mem[141] = 32'd0;
    mem[142] = 32'd0;
    mem[143] = 32'd0;
    mem[144] = 32'd0;
    mem[145] = 32'd0;
    mem[146] = 32'd0;
    mem[147] = 32'd0;
    mem[148] = 32'd0;
    mem[149] = 32'd0;
    mem[150] = 32'd0;
    mem[151] = 32'd0;
    mem[152] = 32'd0;
    mem[153] = 32'd0;
    mem[154] = 32'd0;
    mem[155] = 32'd0;
    mem[156] = 32'd0;
    mem[157] = 32'd0;
    mem[158] = 32'd0;
    mem[159] = 32'd0;
    mem[160] = 32'd0;
    mem[161] = 32'd0;
    mem[162] = 32'd0;
    mem[163] = 32'd0;
    mem[164] = 32'd0;
    mem[165] = 32'd0;
    mem[166] = 32'd0;
    mem[167] = 32'd0;
    mem[168] = 32'd0;
    mem[169] = 32'd0;
    mem[170] = 32'd0;
    mem[171] = 32'd0;
    mem[172] = 32'd0;
    mem[173] = 32'd0;
    mem[174] = 32'd0;
    mem[175] = 32'd0;
    mem[176] = 32'd0;
    mem[177] = 32'd0;
    mem[178] = 32'd0;
    mem[179] = 32'd0;
    mem[180] = 32'd0;
    mem[181] = 32'd0;
    mem[182] = 32'd0;
    mem[183] = 32'd0;
    mem[184] = 32'd0;
    mem[185] = 32'd0;
    mem[186] = 32'd0;
    mem[187] = 32'd0;
    mem[188] = 32'd0;
    mem[189] = 32'd0;
    mem[190] = 32'd0;
    mem[191] = 32'd0;
    mem[192] = 32'd0;
    mem[193] = 32'd0;
    mem[194] = 32'd0;
    mem[195] = 32'd0;
    mem[196] = 32'd0;
    mem[197] = 32'd0;
    mem[198] = 32'd0;
    mem[199] = 32'd0;
    mem[200] = 32'd0;
    mem[201] = 32'd0;
    mem[202] = 32'd0;
    mem[203] = 32'd0;
    mem[204] = 32'd0;
    mem[205] = 32'd0;
    mem[206] = 32'd0;
    mem[207] = 32'd0;
    mem[208] = 32'd0;
    mem[209] = 32'd0;
    mem[210] = 32'd0;
    mem[211] = 32'd0;
    mem[212] = 32'd0;
    mem[213] = 32'd0;
    mem[214] = 32'd0;
    mem[215] = 32'd0;
    mem[216] = 32'd0;
    mem[217] = 32'd0;
    mem[218] = 32'd0;
    mem[219] = 32'd0;
    mem[220] = 32'd0;
    mem[221] = 32'd0;
    mem[222] = 32'd0;
    mem[223] = 32'd0;
    mem[224] = 32'd0;
    mem[225] = 32'd0;
    mem[226] = 32'd0;
    mem[227] = 32'd0;
    mem[228] = 32'd0;
    mem[229] = 32'd0;
    mem[230] = 32'd0;
    mem[231] = 32'd0;
    mem[232] = 32'd0;
    mem[233] = 32'd0;
    mem[234] = 32'd0;
    mem[235] = 32'd0;
    mem[236] = 32'd0;
    mem[237] = 32'd0;
    mem[238] = 32'd0;
    mem[239] = 32'd0;
    mem[240] = 32'd0;
    mem[241] = 32'd0;
    mem[242] = 32'd0;
    mem[243] = 32'd0;
    mem[244] = 32'd0;
    mem[245] = 32'd0;
    mem[246] = 32'd0;
    mem[247] = 32'd0;
    mem[248] = 32'd0;
    mem[249] = 32'd0;
    mem[250] = 32'd0;
    mem[251] = 32'd0;
    mem[252] = 32'd0;
    mem[253] = 32'd0;
    mem[254] = 32'd0;
    mem[255] = 32'd0;
    mem[256] = 32'd0;
    mem[257] = 32'd0;
    mem[258] = 32'd0;
    mem[259] = 32'd0;
    mem[260] = 32'd0;
    mem[261] = 32'd0;
    mem[262] = 32'd0;
    mem[263] = 32'd0;
    mem[264] = 32'd0;
    mem[265] = 32'd0;
    mem[266] = 32'd0;
    mem[267] = 32'd0;
    mem[268] = 32'd0;
    mem[269] = 32'd0;
    mem[270] = 32'd0;
    mem[271] = 32'd0;
    mem[272] = 32'd0;
    mem[273] = 32'd0;
    mem[274] = 32'd0;
    mem[275] = 32'd0;
    mem[276] = 32'd0;
    mem[277] = 32'd0;
    mem[278] = 32'd0;
    mem[279] = 32'd0;
    mem[280] = 32'd0;
    mem[281] = 32'd0;
    mem[282] = 32'd0;
    mem[283] = 32'd0;
    mem[284] = 32'd0;
    mem[285] = 32'd0;
    mem[286] = 32'd0;
    mem[287] = 32'd0;
    mem[288] = 32'd0;
    mem[289] = 32'd0;
    mem[290] = 32'd0;
    mem[291] = 32'd0;
    mem[292] = 32'd0;
    mem[293] = 32'd0;
    mem[294] = 32'd0;
    mem[295] = 32'd0;
    mem[296] = 32'd0;
    mem[297] = 32'd0;
    mem[298] = 32'd0;
    mem[299] = 32'd0;
    mem[300] = 32'd0;
    mem[301] = 32'd0;
    mem[302] = 32'd0;
    mem[303] = 32'd0;
    mem[304] = 32'd0;
    mem[305] = 32'd0;
    mem[306] = 32'd0;
    mem[307] = 32'd0;
    mem[308] = 32'd0;
    mem[309] = 32'd0;
    mem[310] = 32'd0;
    mem[311] = 32'd0;
    mem[312] = 32'd0;
    mem[313] = 32'd0;
    mem[314] = 32'd0;
    mem[315] = 32'd0;
    mem[316] = 32'd0;
    mem[317] = 32'd0;
    mem[318] = 32'd0;
    mem[319] = 32'd0;
    mem[320] = 32'd0;
    mem[321] = 32'd0;
    mem[322] = 32'd0;
    mem[323] = 32'd0;
    mem[324] = 32'd0;
    mem[325] = 32'd0;
    mem[326] = 32'd0;
    mem[327] = 32'd0;
    mem[328] = 32'd0;
    mem[329] = 32'd0;
    mem[330] = 32'd0;
    mem[331] = 32'd0;
    mem[332] = 32'd0;
    mem[333] = 32'd0;
    mem[334] = 32'd0;
    mem[335] = 32'd0;
    mem[336] = 32'd0;
    mem[337] = 32'd0;
    mem[338] = 32'd0;
    mem[339] = 32'd0;
    mem[340] = 32'd0;
    mem[341] = 32'd0;
    mem[342] = 32'd0;
    mem[343] = 32'd0;
    mem[344] = 32'd0;
    mem[345] = 32'd0;
    mem[346] = 32'd0;
    mem[347] = 32'd0;
    mem[348] = 32'd0;
    mem[349] = 32'd0;
    mem[350] = 32'd0;
    mem[351] = 32'd0;
    mem[352] = 32'd0;
    mem[353] = 32'd0;
    mem[354] = 32'd0;
    mem[355] = 32'd0;
    mem[356] = 32'd0;
    mem[357] = 32'd0;
    mem[358] = 32'd0;
    mem[359] = 32'd0;
    mem[360] = 32'd0;
    mem[361] = 32'd0;
    mem[362] = 32'd0;
    mem[363] = 32'd0;
    mem[364] = 32'd0;
    mem[365] = 32'd0;
    mem[366] = 32'd0;
    mem[367] = 32'd0;
    mem[368] = 32'd0;
    mem[369] = 32'd0;
    mem[370] = 32'd0;
    mem[371] = 32'd0;
    mem[372] = 32'd0;
    mem[373] = 32'd0;
    mem[374] = 32'd0;
    mem[375] = 32'd0;
    mem[376] = 32'd0;
    mem[377] = 32'd0;
    mem[378] = 32'd0;
    mem[379] = 32'd0;
    mem[380] = 32'd0;
    mem[381] = 32'd0;
    mem[382] = 32'd0;
    mem[383] = 32'd0;
    mem[384] = 32'd0;
    mem[385] = 32'd0;
    mem[386] = 32'd0;
    mem[387] = 32'd0;
    mem[388] = 32'd0;
    mem[389] = 32'd0;
    mem[390] = 32'd0;
    mem[391] = 32'd0;
    mem[392] = 32'd0;
    mem[393] = 32'd0;
    mem[394] = 32'd0;
    mem[395] = 32'd0;
    mem[396] = 32'd0;
    mem[397] = 32'd0;
    mem[398] = 32'd0;
    mem[399] = 32'd0;
    mem[400] = 32'd0;
    mem[401] = 32'd0;
    mem[402] = 32'd0;
    mem[403] = 32'd0;
    mem[404] = 32'd0;
    mem[405] = 32'd0;
    mem[406] = 32'd0;
    mem[407] = 32'd0;
    mem[408] = 32'd0;
    mem[409] = 32'd0;
    mem[410] = 32'd0;
    mem[411] = 32'd0;
    mem[412] = 32'd0;
    mem[413] = 32'd0;
    mem[414] = 32'd0;
    mem[415] = 32'd0;
    mem[416] = 32'd0;
    mem[417] = 32'd0;
    mem[418] = 32'd0;
    mem[419] = 32'd0;
    mem[420] = 32'd0;
    mem[421] = 32'd0;
    mem[422] = 32'd0;
    mem[423] = 32'd0;
    mem[424] = 32'd0;
    mem[425] = 32'd0;
    mem[426] = 32'd0;
    mem[427] = 32'd0;
    mem[428] = 32'd0;
    mem[429] = 32'd0;
    mem[430] = 32'd0;
    mem[431] = 32'd0;
    mem[432] = 32'd0;
    mem[433] = 32'd0;
    mem[434] = 32'd0;
    mem[435] = 32'd0;
    mem[436] = 32'd0;
    mem[437] = 32'd0;
    mem[438] = 32'd0;
    mem[439] = 32'd0;
    mem[440] = 32'd0;
    mem[441] = 32'd0;
    mem[442] = 32'd0;
    mem[443] = 32'd0;
    mem[444] = 32'd0;
    mem[445] = 32'd0;
    mem[446] = 32'd0;
    mem[447] = 32'd0;
    mem[448] = 32'd0;
    mem[449] = 32'd0;
    mem[450] = 32'd0;
    mem[451] = 32'd0;
    mem[452] = 32'd0;
    mem[453] = 32'd0;
    mem[454] = 32'd0;
    mem[455] = 32'd0;
    mem[456] = 32'd0;
    mem[457] = 32'd0;
    mem[458] = 32'd0;
    mem[459] = 32'd0;
    mem[460] = 32'd0;
    mem[461] = 32'd0;
    mem[462] = 32'd0;
    mem[463] = 32'd0;
    mem[464] = 32'd0;
    mem[465] = 32'd0;
    mem[466] = 32'd0;
    mem[467] = 32'd0;
    mem[468] = 32'd0;
    mem[469] = 32'd0;
    mem[470] = 32'd0;
    mem[471] = 32'd0;
    mem[472] = 32'd0;
    mem[473] = 32'd0;
    mem[474] = 32'd0;
    mem[475] = 32'd0;
    mem[476] = 32'd0;
    mem[477] = 32'd0;
    mem[478] = 32'd0;
    mem[479] = 32'd0;
    mem[480] = 32'd0;
    mem[481] = 32'd0;
    mem[482] = 32'd0;
    mem[483] = 32'd0;
    mem[484] = 32'd0;
    mem[485] = 32'd0;
    mem[486] = 32'd0;
    mem[487] = 32'd0;
    mem[488] = 32'd0;
    mem[489] = 32'd0;
    mem[490] = 32'd0;
    mem[491] = 32'd0;
    mem[492] = 32'd0;
    mem[493] = 32'd0;
    mem[494] = 32'd0;
    mem[495] = 32'd0;
    mem[496] = 32'd0;
    mem[497] = 32'd0;
    mem[498] = 32'd0;
    mem[499] = 32'd0;
    mem[500] = 32'd0;
    mem[501] = 32'd0;
    mem[502] = 32'd0;
    mem[503] = 32'd0;
    mem[504] = 32'd0;
    mem[505] = 32'd0;
    mem[506] = 32'd0;
    mem[507] = 32'd0;
    mem[508] = 32'd0;
    mem[509] = 32'd0;
    mem[510] = 32'd0;
    mem[511] = 32'd0;
    mem[512] = 32'd0;
    mem[513] = 32'd0;
    mem[514] = 32'd0;
    mem[515] = 32'd0;
    mem[516] = 32'd0;
    mem[517] = 32'd0;
    mem[518] = 32'd0;
    mem[519] = 32'd0;
    mem[520] = 32'd0;
    mem[521] = 32'd0;
    mem[522] = 32'd0;
    mem[523] = 32'd0;
    mem[524] = 32'd0;
    mem[525] = 32'd0;
    mem[526] = 32'd0;
    mem[527] = 32'd0;
    mem[528] = 32'd0;
    mem[529] = 32'd0;
    mem[530] = 32'd0;
    mem[531] = 32'd0;
    mem[532] = 32'd0;
    mem[533] = 32'd0;
    mem[534] = 32'd0;
    mem[535] = 32'd0;
    mem[536] = 32'd0;
    mem[537] = 32'd0;
    mem[538] = 32'd0;
    mem[539] = 32'd0;
    mem[540] = 32'd0;
    mem[541] = 32'd0;
    mem[542] = 32'd0;
    mem[543] = 32'd0;
    mem[544] = 32'd0;
    mem[545] = 32'd0;
    mem[546] = 32'd0;
    mem[547] = 32'd0;
    mem[548] = 32'd0;
    mem[549] = 32'd0;
    mem[550] = 32'd0;
    mem[551] = 32'd0;
    mem[552] = 32'd0;
    mem[553] = 32'd0;
    mem[554] = 32'd0;
    mem[555] = 32'd0;
    mem[556] = 32'd0;
    mem[557] = 32'd0;
    mem[558] = 32'd0;
    mem[559] = 32'd0;
    mem[560] = 32'd0;
    mem[561] = 32'd0;
    mem[562] = 32'd0;
    mem[563] = 32'd0;
    mem[564] = 32'd0;
    mem[565] = 32'd0;
    mem[566] = 32'd0;
    mem[567] = 32'd0;
    mem[568] = 32'd0;
    mem[569] = 32'd0;
    mem[570] = 32'd0;
    mem[571] = 32'd0;
    mem[572] = 32'd0;
    mem[573] = 32'd0;
    mem[574] = 32'd0;
    mem[575] = 32'd0;
    mem[576] = 32'd0;
    mem[577] = 32'd0;
    mem[578] = 32'd0;
    mem[579] = 32'd0;
    mem[580] = 32'd0;
    mem[581] = 32'd0;
    mem[582] = 32'd0;
    mem[583] = 32'd0;
    mem[584] = 32'd0;
    mem[585] = 32'd0;
    mem[586] = 32'd0;
    mem[587] = 32'd0;
    mem[588] = 32'd0;
    mem[589] = 32'd0;
    mem[590] = 32'd0;
    mem[591] = 32'd0;
    mem[592] = 32'd0;
    mem[593] = 32'd0;
    mem[594] = 32'd0;
    mem[595] = 32'd0;
    mem[596] = 32'd0;
    mem[597] = 32'd0;
    mem[598] = 32'd0;
    mem[599] = 32'd0;
    mem[600] = 32'd0;
    mem[601] = 32'd0;
    mem[602] = 32'd0;
    mem[603] = 32'd0;
    mem[604] = 32'd0;
    mem[605] = 32'd0;
    mem[606] = 32'd0;
    mem[607] = 32'd0;
    mem[608] = 32'd0;
    mem[609] = 32'd0;
    mem[610] = 32'd0;
    mem[611] = 32'd0;
    mem[612] = 32'd0;
    mem[613] = 32'd0;
    mem[614] = 32'd0;
    mem[615] = 32'd0;
    mem[616] = 32'd0;
    mem[617] = 32'd0;
    mem[618] = 32'd0;
    mem[619] = 32'd0;
    mem[620] = 32'd0;
    mem[621] = 32'd0;
    mem[622] = 32'd0;
    mem[623] = 32'd0;
    mem[624] = 32'd0;
    mem[625] = 32'd0;
    mem[626] = 32'd0;
    mem[627] = 32'd0;
    mem[628] = 32'd0;
    mem[629] = 32'd0;
    mem[630] = 32'd0;
    mem[631] = 32'd0;
    mem[632] = 32'd0;
    mem[633] = 32'd0;
    mem[634] = 32'd0;
    mem[635] = 32'd0;
    mem[636] = 32'd0;
    mem[637] = 32'd0;
    mem[638] = 32'd0;
    mem[639] = 32'd0;
    mem[640] = 32'd0;
    mem[641] = 32'd0;
    mem[642] = 32'd0;
    mem[643] = 32'd0;
    mem[644] = 32'd0;
    mem[645] = 32'd0;
    mem[646] = 32'd0;
    mem[647] = 32'd0;
    mem[648] = 32'd0;
    mem[649] = 32'd0;
    mem[650] = 32'd0;
    mem[651] = 32'd0;
    mem[652] = 32'd0;
    mem[653] = 32'd0;
    mem[654] = 32'd0;
    mem[655] = 32'd0;
    mem[656] = 32'd0;
    mem[657] = 32'd0;
    mem[658] = 32'd0;
    mem[659] = 32'd0;
    mem[660] = 32'd0;
    mem[661] = 32'd0;
    mem[662] = 32'd0;
    mem[663] = 32'd0;
    mem[664] = 32'd0;
    mem[665] = 32'd0;
    mem[666] = 32'd0;
    mem[667] = 32'd0;
    mem[668] = 32'd0;
    mem[669] = 32'd0;
    mem[670] = 32'd0;
    mem[671] = 32'd0;
    mem[672] = 32'd0;
    mem[673] = 32'd0;
    mem[674] = 32'd0;
    mem[675] = 32'd0;
    mem[676] = 32'd0;
    mem[677] = 32'd0;
    mem[678] = 32'd0;
    mem[679] = 32'd0;
    mem[680] = 32'd0;
    mem[681] = 32'd0;
    mem[682] = 32'd0;
    mem[683] = 32'd0;
    mem[684] = 32'd0;
    mem[685] = 32'd0;
    mem[686] = 32'd0;
    mem[687] = 32'd0;
    mem[688] = 32'd0;
    mem[689] = 32'd0;
    mem[690] = 32'd0;
    mem[691] = 32'd0;
    mem[692] = 32'd0;
    mem[693] = 32'd0;
    mem[694] = 32'd0;
    mem[695] = 32'd0;
    mem[696] = 32'd0;
    mem[697] = 32'd0;
    mem[698] = 32'd0;
    mem[699] = 32'd0;
    mem[700] = 32'd0;
    mem[701] = 32'd0;
    mem[702] = 32'd0;
    mem[703] = 32'd0;
    mem[704] = 32'd0;
    mem[705] = 32'd0;
    mem[706] = 32'd0;
    mem[707] = 32'd0;
    mem[708] = 32'd0;
    mem[709] = 32'd0;
    mem[710] = 32'd0;
    mem[711] = 32'd0;
    mem[712] = 32'd0;
    mem[713] = 32'd0;
    mem[714] = 32'd0;
    mem[715] = 32'd0;
    mem[716] = 32'd0;
    mem[717] = 32'd0;
    mem[718] = 32'd0;
    mem[719] = 32'd0;
    mem[720] = 32'd0;
    mem[721] = 32'd0;
    mem[722] = 32'd0;
    mem[723] = 32'd0;
    mem[724] = 32'd0;
    mem[725] = 32'd0;
    mem[726] = 32'd0;
    mem[727] = 32'd0;
    mem[728] = 32'd0;
    mem[729] = 32'd0;
    mem[730] = 32'd0;
    mem[731] = 32'd0;
    mem[732] = 32'd0;
    mem[733] = 32'd0;
    mem[734] = 32'd0;
    mem[735] = 32'd0;
    mem[736] = 32'd0;
    mem[737] = 32'd0;
    mem[738] = 32'd0;
    mem[739] = 32'd0;
    mem[740] = 32'd0;
    mem[741] = 32'd0;
    mem[742] = 32'd0;
    mem[743] = 32'd0;
    mem[744] = 32'd0;
    mem[745] = 32'd0;
    mem[746] = 32'd0;
    mem[747] = 32'd0;
    mem[748] = 32'd0;
    mem[749] = 32'd0;
    mem[750] = 32'd0;
    mem[751] = 32'd0;
    mem[752] = 32'd0;
    mem[753] = 32'd0;
    mem[754] = 32'd0;
    mem[755] = 32'd0;
    mem[756] = 32'd0;
    mem[757] = 32'd0;
    mem[758] = 32'd0;
    mem[759] = 32'd0;
    mem[760] = 32'd0;
    mem[761] = 32'd0;
    mem[762] = 32'd0;
    mem[763] = 32'd0;
    mem[764] = 32'd0;
    mem[765] = 32'd0;
    mem[766] = 32'd0;
    mem[767] = 32'd0;
    mem[768] = 32'd0;
    mem[769] = 32'd0;
    mem[770] = 32'd0;
    mem[771] = 32'd0;
    mem[772] = 32'd0;
    mem[773] = 32'd0;
    mem[774] = 32'd0;
    mem[775] = 32'd0;
    mem[776] = 32'd0;
    mem[777] = 32'd0;
    mem[778] = 32'd0;
    mem[779] = 32'd0;
    mem[780] = 32'd0;
    mem[781] = 32'd0;
    mem[782] = 32'd0;
    mem[783] = 32'd0;
    mem[784] = 32'd0;
    mem[785] = 32'd0;
    mem[786] = 32'd0;
    mem[787] = 32'd0;
    mem[788] = 32'd0;
    mem[789] = 32'd0;
    mem[790] = 32'd0;
    mem[791] = 32'd0;
    mem[792] = 32'd0;
    mem[793] = 32'd0;
    mem[794] = 32'd0;
    mem[795] = 32'd0;
    mem[796] = 32'd0;
    mem[797] = 32'd0;
    mem[798] = 32'd0;
    mem[799] = 32'd0;
    mem[800] = 32'd0;
    mem[801] = 32'd0;
    mem[802] = 32'd0;
    mem[803] = 32'd0;
    mem[804] = 32'd0;
    mem[805] = 32'd0;
    mem[806] = 32'd0;
    mem[807] = 32'd0;
    mem[808] = 32'd0;
    mem[809] = 32'd0;
    mem[810] = 32'd0;
    mem[811] = 32'd0;
    mem[812] = 32'd0;
    mem[813] = 32'd0;
    mem[814] = 32'd0;
    mem[815] = 32'd0;
    mem[816] = 32'd0;
    mem[817] = 32'd0;
    mem[818] = 32'd0;
    mem[819] = 32'd0;
    mem[820] = 32'd0;
    mem[821] = 32'd0;
    mem[822] = 32'd0;
    mem[823] = 32'd0;
    mem[824] = 32'd0;
    mem[825] = 32'd0;
    mem[826] = 32'd0;
    mem[827] = 32'd0;
    mem[828] = 32'd0;
    mem[829] = 32'd0;
    mem[830] = 32'd0;
    mem[831] = 32'd0;
    mem[832] = 32'd0;
    mem[833] = 32'd0;
    mem[834] = 32'd0;
    mem[835] = 32'd0;
    mem[836] = 32'd0;
    mem[837] = 32'd0;
    mem[838] = 32'd0;
    mem[839] = 32'd0;
    mem[840] = 32'd0;
    mem[841] = 32'd0;
    mem[842] = 32'd0;
    mem[843] = 32'd0;
    mem[844] = 32'd0;
    mem[845] = 32'd0;
    mem[846] = 32'd0;
    mem[847] = 32'd0;
    mem[848] = 32'd0;
    mem[849] = 32'd0;
    mem[850] = 32'd0;
    mem[851] = 32'd0;
    mem[852] = 32'd0;
    mem[853] = 32'd0;
    mem[854] = 32'd0;
    mem[855] = 32'd0;
    mem[856] = 32'd0;
    mem[857] = 32'd0;
    mem[858] = 32'd0;
    mem[859] = 32'd0;
    mem[860] = 32'd0;
    mem[861] = 32'd0;
    mem[862] = 32'd0;
    mem[863] = 32'd0;
    mem[864] = 32'd0;
    mem[865] = 32'd0;
    mem[866] = 32'd0;
    mem[867] = 32'd0;
    mem[868] = 32'd0;
    mem[869] = 32'd0;
    mem[870] = 32'd0;
    mem[871] = 32'd0;
    mem[872] = 32'd0;
    mem[873] = 32'd0;
    mem[874] = 32'd0;
    mem[875] = 32'd0;
    mem[876] = 32'd0;
    mem[877] = 32'd0;
    mem[878] = 32'd0;
    mem[879] = 32'd0;
    mem[880] = 32'd0;
    mem[881] = 32'd0;
    mem[882] = 32'd0;
    mem[883] = 32'd0;
    mem[884] = 32'd0;
    mem[885] = 32'd0;
    mem[886] = 32'd0;
    mem[887] = 32'd0;
    mem[888] = 32'd0;
    mem[889] = 32'd0;
    mem[890] = 32'd0;
    mem[891] = 32'd0;
    mem[892] = 32'd0;
    mem[893] = 32'd0;
    mem[894] = 32'd0;
    mem[895] = 32'd0;
    mem[896] = 32'd0;
    mem[897] = 32'd0;
    mem[898] = 32'd0;
    mem[899] = 32'd0;
    mem[900] = 32'd0;
    mem[901] = 32'd0;
    mem[902] = 32'd0;
    mem[903] = 32'd0;
    mem[904] = 32'd0;
    mem[905] = 32'd0;
    mem[906] = 32'd0;
    mem[907] = 32'd0;
    mem[908] = 32'd0;
    mem[909] = 32'd0;
    mem[910] = 32'd0;
    mem[911] = 32'd0;
    mem[912] = 32'd0;
    mem[913] = 32'd0;
    mem[914] = 32'd0;
    mem[915] = 32'd0;
    mem[916] = 32'd0;
    mem[917] = 32'd0;
    mem[918] = 32'd0;
    mem[919] = 32'd0;
    mem[920] = 32'd0;
    mem[921] = 32'd0;
    mem[922] = 32'd0;
    mem[923] = 32'd0;
    mem[924] = 32'd0;
    mem[925] = 32'd0;
    mem[926] = 32'd0;
    mem[927] = 32'd0;
    mem[928] = 32'd0;
    mem[929] = 32'd0;
    mem[930] = 32'd0;
    mem[931] = 32'd0;
    mem[932] = 32'd0;
    mem[933] = 32'd0;
    mem[934] = 32'd0;
    mem[935] = 32'd0;
    mem[936] = 32'd0;
    mem[937] = 32'd0;
    mem[938] = 32'd0;
    mem[939] = 32'd0;
    mem[940] = 32'd0;
    mem[941] = 32'd0;
    mem[942] = 32'd0;
    mem[943] = 32'd0;
    mem[944] = 32'd0;
    mem[945] = 32'd0;
    mem[946] = 32'd0;
    mem[947] = 32'd0;
    mem[948] = 32'd0;
    mem[949] = 32'd0;
    mem[950] = 32'd0;
    mem[951] = 32'd0;
    mem[952] = 32'd0;
    mem[953] = 32'd0;
    mem[954] = 32'd0;
    mem[955] = 32'd0;
    mem[956] = 32'd0;
    mem[957] = 32'd0;
    mem[958] = 32'd0;
    mem[959] = 32'd0;
    mem[960] = 32'd0;
    mem[961] = 32'd0;
    mem[962] = 32'd0;
    mem[963] = 32'd0;
    mem[964] = 32'd0;
    mem[965] = 32'd0;
    mem[966] = 32'd0;
    mem[967] = 32'd0;
    mem[968] = 32'd0;
    mem[969] = 32'd0;
    mem[970] = 32'd0;
    mem[971] = 32'd0;
    mem[972] = 32'd0;
    mem[973] = 32'd0;
    mem[974] = 32'd0;
    mem[975] = 32'd0;
    mem[976] = 32'd0;
    mem[977] = 32'd0;
    mem[978] = 32'd0;
    mem[979] = 32'd0;
    mem[980] = 32'd0;
    mem[981] = 32'd0;
    mem[982] = 32'd0;
    mem[983] = 32'd0;
    mem[984] = 32'd0;
    mem[985] = 32'd0;
    mem[986] = 32'd0;
    mem[987] = 32'd0;
    mem[988] = 32'd0;
    mem[989] = 32'd0;
    mem[990] = 32'd0;
    mem[991] = 32'd0;
    mem[992] = 32'd0;
    mem[993] = 32'd0;
    mem[994] = 32'd0;
    mem[995] = 32'd0;
    mem[996] = 32'd0;
    mem[997] = 32'd0;
    mem[998] = 32'd0;
    mem[999] = 32'd0;
    mem[1000] = 32'd0;
    mem[1001] = 32'd0;
    mem[1002] = 32'd0;
    mem[1003] = 32'd0;
    mem[1004] = 32'd0;
    mem[1005] = 32'd0;
    mem[1006] = 32'd0;
    mem[1007] = 32'd0;
    mem[1008] = 32'd0;
    mem[1009] = 32'd0;
    mem[1010] = 32'd0;
    mem[1011] = 32'd0;
    mem[1012] = 32'd0;
    mem[1013] = 32'd0;
    mem[1014] = 32'd0;
    mem[1015] = 32'd0;
    mem[1016] = 32'd0;
    mem[1017] = 32'd0;
    mem[1018] = 32'd0;
    mem[1019] = 32'd0;
    mem[1020] = 32'd0;
    mem[1021] = 32'd0;
    mem[1022] = 32'd0;
    mem[1023] = 32'd0;
  end
  always @(posedge clk) begin
    if (mem_w_en)
      mem[mem_w_addr] <= mem_w_data;
  end
  reg [31:0] _0_;
  always @(posedge clk) begin
    _0_ <= mem[mem_r_addr];
  end
  assign mem_r_data = _0_;
  assign r_data = mem_r_data;
  assign mem_r_addr = r_addr;
  assign mem_r_en = 1'h1;
  assign mem_w_data = w_data;
  assign mem_w_addr = w_addr;
  assign mem_w_en = w_en;
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.ins.dp_1" *)
(* generator = "Amaranth" *)
module dp_1(w_addr, w_data, w_en, r_data, r_addr, clk);
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:215" *)
  wire [9:0] mem_r_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:215" *)
  wire [31:0] mem_r_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:215" *)
  wire mem_r_en;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:214" *)
  wire [9:0] mem_w_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:214" *)
  wire [31:0] mem_w_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:214" *)
  wire mem_w_en;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:209" *)
  input [9:0] r_addr;
  wire [9:0] r_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:210" *)
  output [31:0] r_data;
  wire [31:0] r_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:207" *)
  input [9:0] w_addr;
  wire [9:0] w_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:208" *)
  input [31:0] w_data;
  wire [31:0] w_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:206" *)
  input w_en;
  wire w_en;
  reg [31:0] mem [1023:0];
  initial begin
    mem[0] = 32'd0;
    mem[1] = 32'd0;
    mem[2] = 32'd0;
    mem[3] = 32'd0;
    mem[4] = 32'd0;
    mem[5] = 32'd0;
    mem[6] = 32'd0;
    mem[7] = 32'd0;
    mem[8] = 32'd0;
    mem[9] = 32'd0;
    mem[10] = 32'd0;
    mem[11] = 32'd0;
    mem[12] = 32'd0;
    mem[13] = 32'd0;
    mem[14] = 32'd0;
    mem[15] = 32'd0;
    mem[16] = 32'd0;
    mem[17] = 32'd0;
    mem[18] = 32'd0;
    mem[19] = 32'd0;
    mem[20] = 32'd0;
    mem[21] = 32'd0;
    mem[22] = 32'd0;
    mem[23] = 32'd0;
    mem[24] = 32'd0;
    mem[25] = 32'd0;
    mem[26] = 32'd0;
    mem[27] = 32'd0;
    mem[28] = 32'd0;
    mem[29] = 32'd0;
    mem[30] = 32'd0;
    mem[31] = 32'd0;
    mem[32] = 32'd0;
    mem[33] = 32'd0;
    mem[34] = 32'd0;
    mem[35] = 32'd0;
    mem[36] = 32'd0;
    mem[37] = 32'd0;
    mem[38] = 32'd0;
    mem[39] = 32'd0;
    mem[40] = 32'd0;
    mem[41] = 32'd0;
    mem[42] = 32'd0;
    mem[43] = 32'd0;
    mem[44] = 32'd0;
    mem[45] = 32'd0;
    mem[46] = 32'd0;
    mem[47] = 32'd0;
    mem[48] = 32'd0;
    mem[49] = 32'd0;
    mem[50] = 32'd0;
    mem[51] = 32'd0;
    mem[52] = 32'd0;
    mem[53] = 32'd0;
    mem[54] = 32'd0;
    mem[55] = 32'd0;
    mem[56] = 32'd0;
    mem[57] = 32'd0;
    mem[58] = 32'd0;
    mem[59] = 32'd0;
    mem[60] = 32'd0;
    mem[61] = 32'd0;
    mem[62] = 32'd0;
    mem[63] = 32'd0;
    mem[64] = 32'd0;
    mem[65] = 32'd0;
    mem[66] = 32'd0;
    mem[67] = 32'd0;
    mem[68] = 32'd0;
    mem[69] = 32'd0;
    mem[70] = 32'd0;
    mem[71] = 32'd0;
    mem[72] = 32'd0;
    mem[73] = 32'd0;
    mem[74] = 32'd0;
    mem[75] = 32'd0;
    mem[76] = 32'd0;
    mem[77] = 32'd0;
    mem[78] = 32'd0;
    mem[79] = 32'd0;
    mem[80] = 32'd0;
    mem[81] = 32'd0;
    mem[82] = 32'd0;
    mem[83] = 32'd0;
    mem[84] = 32'd0;
    mem[85] = 32'd0;
    mem[86] = 32'd0;
    mem[87] = 32'd0;
    mem[88] = 32'd0;
    mem[89] = 32'd0;
    mem[90] = 32'd0;
    mem[91] = 32'd0;
    mem[92] = 32'd0;
    mem[93] = 32'd0;
    mem[94] = 32'd0;
    mem[95] = 32'd0;
    mem[96] = 32'd0;
    mem[97] = 32'd0;
    mem[98] = 32'd0;
    mem[99] = 32'd0;
    mem[100] = 32'd0;
    mem[101] = 32'd0;
    mem[102] = 32'd0;
    mem[103] = 32'd0;
    mem[104] = 32'd0;
    mem[105] = 32'd0;
    mem[106] = 32'd0;
    mem[107] = 32'd0;
    mem[108] = 32'd0;
    mem[109] = 32'd0;
    mem[110] = 32'd0;
    mem[111] = 32'd0;
    mem[112] = 32'd0;
    mem[113] = 32'd0;
    mem[114] = 32'd0;
    mem[115] = 32'd0;
    mem[116] = 32'd0;
    mem[117] = 32'd0;
    mem[118] = 32'd0;
    mem[119] = 32'd0;
    mem[120] = 32'd0;
    mem[121] = 32'd0;
    mem[122] = 32'd0;
    mem[123] = 32'd0;
    mem[124] = 32'd0;
    mem[125] = 32'd0;
    mem[126] = 32'd0;
    mem[127] = 32'd0;
    mem[128] = 32'd0;
    mem[129] = 32'd0;
    mem[130] = 32'd0;
    mem[131] = 32'd0;
    mem[132] = 32'd0;
    mem[133] = 32'd0;
    mem[134] = 32'd0;
    mem[135] = 32'd0;
    mem[136] = 32'd0;
    mem[137] = 32'd0;
    mem[138] = 32'd0;
    mem[139] = 32'd0;
    mem[140] = 32'd0;
    mem[141] = 32'd0;
    mem[142] = 32'd0;
    mem[143] = 32'd0;
    mem[144] = 32'd0;
    mem[145] = 32'd0;
    mem[146] = 32'd0;
    mem[147] = 32'd0;
    mem[148] = 32'd0;
    mem[149] = 32'd0;
    mem[150] = 32'd0;
    mem[151] = 32'd0;
    mem[152] = 32'd0;
    mem[153] = 32'd0;
    mem[154] = 32'd0;
    mem[155] = 32'd0;
    mem[156] = 32'd0;
    mem[157] = 32'd0;
    mem[158] = 32'd0;
    mem[159] = 32'd0;
    mem[160] = 32'd0;
    mem[161] = 32'd0;
    mem[162] = 32'd0;
    mem[163] = 32'd0;
    mem[164] = 32'd0;
    mem[165] = 32'd0;
    mem[166] = 32'd0;
    mem[167] = 32'd0;
    mem[168] = 32'd0;
    mem[169] = 32'd0;
    mem[170] = 32'd0;
    mem[171] = 32'd0;
    mem[172] = 32'd0;
    mem[173] = 32'd0;
    mem[174] = 32'd0;
    mem[175] = 32'd0;
    mem[176] = 32'd0;
    mem[177] = 32'd0;
    mem[178] = 32'd0;
    mem[179] = 32'd0;
    mem[180] = 32'd0;
    mem[181] = 32'd0;
    mem[182] = 32'd0;
    mem[183] = 32'd0;
    mem[184] = 32'd0;
    mem[185] = 32'd0;
    mem[186] = 32'd0;
    mem[187] = 32'd0;
    mem[188] = 32'd0;
    mem[189] = 32'd0;
    mem[190] = 32'd0;
    mem[191] = 32'd0;
    mem[192] = 32'd0;
    mem[193] = 32'd0;
    mem[194] = 32'd0;
    mem[195] = 32'd0;
    mem[196] = 32'd0;
    mem[197] = 32'd0;
    mem[198] = 32'd0;
    mem[199] = 32'd0;
    mem[200] = 32'd0;
    mem[201] = 32'd0;
    mem[202] = 32'd0;
    mem[203] = 32'd0;
    mem[204] = 32'd0;
    mem[205] = 32'd0;
    mem[206] = 32'd0;
    mem[207] = 32'd0;
    mem[208] = 32'd0;
    mem[209] = 32'd0;
    mem[210] = 32'd0;
    mem[211] = 32'd0;
    mem[212] = 32'd0;
    mem[213] = 32'd0;
    mem[214] = 32'd0;
    mem[215] = 32'd0;
    mem[216] = 32'd0;
    mem[217] = 32'd0;
    mem[218] = 32'd0;
    mem[219] = 32'd0;
    mem[220] = 32'd0;
    mem[221] = 32'd0;
    mem[222] = 32'd0;
    mem[223] = 32'd0;
    mem[224] = 32'd0;
    mem[225] = 32'd0;
    mem[226] = 32'd0;
    mem[227] = 32'd0;
    mem[228] = 32'd0;
    mem[229] = 32'd0;
    mem[230] = 32'd0;
    mem[231] = 32'd0;
    mem[232] = 32'd0;
    mem[233] = 32'd0;
    mem[234] = 32'd0;
    mem[235] = 32'd0;
    mem[236] = 32'd0;
    mem[237] = 32'd0;
    mem[238] = 32'd0;
    mem[239] = 32'd0;
    mem[240] = 32'd0;
    mem[241] = 32'd0;
    mem[242] = 32'd0;
    mem[243] = 32'd0;
    mem[244] = 32'd0;
    mem[245] = 32'd0;
    mem[246] = 32'd0;
    mem[247] = 32'd0;
    mem[248] = 32'd0;
    mem[249] = 32'd0;
    mem[250] = 32'd0;
    mem[251] = 32'd0;
    mem[252] = 32'd0;
    mem[253] = 32'd0;
    mem[254] = 32'd0;
    mem[255] = 32'd0;
    mem[256] = 32'd0;
    mem[257] = 32'd0;
    mem[258] = 32'd0;
    mem[259] = 32'd0;
    mem[260] = 32'd0;
    mem[261] = 32'd0;
    mem[262] = 32'd0;
    mem[263] = 32'd0;
    mem[264] = 32'd0;
    mem[265] = 32'd0;
    mem[266] = 32'd0;
    mem[267] = 32'd0;
    mem[268] = 32'd0;
    mem[269] = 32'd0;
    mem[270] = 32'd0;
    mem[271] = 32'd0;
    mem[272] = 32'd0;
    mem[273] = 32'd0;
    mem[274] = 32'd0;
    mem[275] = 32'd0;
    mem[276] = 32'd0;
    mem[277] = 32'd0;
    mem[278] = 32'd0;
    mem[279] = 32'd0;
    mem[280] = 32'd0;
    mem[281] = 32'd0;
    mem[282] = 32'd0;
    mem[283] = 32'd0;
    mem[284] = 32'd0;
    mem[285] = 32'd0;
    mem[286] = 32'd0;
    mem[287] = 32'd0;
    mem[288] = 32'd0;
    mem[289] = 32'd0;
    mem[290] = 32'd0;
    mem[291] = 32'd0;
    mem[292] = 32'd0;
    mem[293] = 32'd0;
    mem[294] = 32'd0;
    mem[295] = 32'd0;
    mem[296] = 32'd0;
    mem[297] = 32'd0;
    mem[298] = 32'd0;
    mem[299] = 32'd0;
    mem[300] = 32'd0;
    mem[301] = 32'd0;
    mem[302] = 32'd0;
    mem[303] = 32'd0;
    mem[304] = 32'd0;
    mem[305] = 32'd0;
    mem[306] = 32'd0;
    mem[307] = 32'd0;
    mem[308] = 32'd0;
    mem[309] = 32'd0;
    mem[310] = 32'd0;
    mem[311] = 32'd0;
    mem[312] = 32'd0;
    mem[313] = 32'd0;
    mem[314] = 32'd0;
    mem[315] = 32'd0;
    mem[316] = 32'd0;
    mem[317] = 32'd0;
    mem[318] = 32'd0;
    mem[319] = 32'd0;
    mem[320] = 32'd0;
    mem[321] = 32'd0;
    mem[322] = 32'd0;
    mem[323] = 32'd0;
    mem[324] = 32'd0;
    mem[325] = 32'd0;
    mem[326] = 32'd0;
    mem[327] = 32'd0;
    mem[328] = 32'd0;
    mem[329] = 32'd0;
    mem[330] = 32'd0;
    mem[331] = 32'd0;
    mem[332] = 32'd0;
    mem[333] = 32'd0;
    mem[334] = 32'd0;
    mem[335] = 32'd0;
    mem[336] = 32'd0;
    mem[337] = 32'd0;
    mem[338] = 32'd0;
    mem[339] = 32'd0;
    mem[340] = 32'd0;
    mem[341] = 32'd0;
    mem[342] = 32'd0;
    mem[343] = 32'd0;
    mem[344] = 32'd0;
    mem[345] = 32'd0;
    mem[346] = 32'd0;
    mem[347] = 32'd0;
    mem[348] = 32'd0;
    mem[349] = 32'd0;
    mem[350] = 32'd0;
    mem[351] = 32'd0;
    mem[352] = 32'd0;
    mem[353] = 32'd0;
    mem[354] = 32'd0;
    mem[355] = 32'd0;
    mem[356] = 32'd0;
    mem[357] = 32'd0;
    mem[358] = 32'd0;
    mem[359] = 32'd0;
    mem[360] = 32'd0;
    mem[361] = 32'd0;
    mem[362] = 32'd0;
    mem[363] = 32'd0;
    mem[364] = 32'd0;
    mem[365] = 32'd0;
    mem[366] = 32'd0;
    mem[367] = 32'd0;
    mem[368] = 32'd0;
    mem[369] = 32'd0;
    mem[370] = 32'd0;
    mem[371] = 32'd0;
    mem[372] = 32'd0;
    mem[373] = 32'd0;
    mem[374] = 32'd0;
    mem[375] = 32'd0;
    mem[376] = 32'd0;
    mem[377] = 32'd0;
    mem[378] = 32'd0;
    mem[379] = 32'd0;
    mem[380] = 32'd0;
    mem[381] = 32'd0;
    mem[382] = 32'd0;
    mem[383] = 32'd0;
    mem[384] = 32'd0;
    mem[385] = 32'd0;
    mem[386] = 32'd0;
    mem[387] = 32'd0;
    mem[388] = 32'd0;
    mem[389] = 32'd0;
    mem[390] = 32'd0;
    mem[391] = 32'd0;
    mem[392] = 32'd0;
    mem[393] = 32'd0;
    mem[394] = 32'd0;
    mem[395] = 32'd0;
    mem[396] = 32'd0;
    mem[397] = 32'd0;
    mem[398] = 32'd0;
    mem[399] = 32'd0;
    mem[400] = 32'd0;
    mem[401] = 32'd0;
    mem[402] = 32'd0;
    mem[403] = 32'd0;
    mem[404] = 32'd0;
    mem[405] = 32'd0;
    mem[406] = 32'd0;
    mem[407] = 32'd0;
    mem[408] = 32'd0;
    mem[409] = 32'd0;
    mem[410] = 32'd0;
    mem[411] = 32'd0;
    mem[412] = 32'd0;
    mem[413] = 32'd0;
    mem[414] = 32'd0;
    mem[415] = 32'd0;
    mem[416] = 32'd0;
    mem[417] = 32'd0;
    mem[418] = 32'd0;
    mem[419] = 32'd0;
    mem[420] = 32'd0;
    mem[421] = 32'd0;
    mem[422] = 32'd0;
    mem[423] = 32'd0;
    mem[424] = 32'd0;
    mem[425] = 32'd0;
    mem[426] = 32'd0;
    mem[427] = 32'd0;
    mem[428] = 32'd0;
    mem[429] = 32'd0;
    mem[430] = 32'd0;
    mem[431] = 32'd0;
    mem[432] = 32'd0;
    mem[433] = 32'd0;
    mem[434] = 32'd0;
    mem[435] = 32'd0;
    mem[436] = 32'd0;
    mem[437] = 32'd0;
    mem[438] = 32'd0;
    mem[439] = 32'd0;
    mem[440] = 32'd0;
    mem[441] = 32'd0;
    mem[442] = 32'd0;
    mem[443] = 32'd0;
    mem[444] = 32'd0;
    mem[445] = 32'd0;
    mem[446] = 32'd0;
    mem[447] = 32'd0;
    mem[448] = 32'd0;
    mem[449] = 32'd0;
    mem[450] = 32'd0;
    mem[451] = 32'd0;
    mem[452] = 32'd0;
    mem[453] = 32'd0;
    mem[454] = 32'd0;
    mem[455] = 32'd0;
    mem[456] = 32'd0;
    mem[457] = 32'd0;
    mem[458] = 32'd0;
    mem[459] = 32'd0;
    mem[460] = 32'd0;
    mem[461] = 32'd0;
    mem[462] = 32'd0;
    mem[463] = 32'd0;
    mem[464] = 32'd0;
    mem[465] = 32'd0;
    mem[466] = 32'd0;
    mem[467] = 32'd0;
    mem[468] = 32'd0;
    mem[469] = 32'd0;
    mem[470] = 32'd0;
    mem[471] = 32'd0;
    mem[472] = 32'd0;
    mem[473] = 32'd0;
    mem[474] = 32'd0;
    mem[475] = 32'd0;
    mem[476] = 32'd0;
    mem[477] = 32'd0;
    mem[478] = 32'd0;
    mem[479] = 32'd0;
    mem[480] = 32'd0;
    mem[481] = 32'd0;
    mem[482] = 32'd0;
    mem[483] = 32'd0;
    mem[484] = 32'd0;
    mem[485] = 32'd0;
    mem[486] = 32'd0;
    mem[487] = 32'd0;
    mem[488] = 32'd0;
    mem[489] = 32'd0;
    mem[490] = 32'd0;
    mem[491] = 32'd0;
    mem[492] = 32'd0;
    mem[493] = 32'd0;
    mem[494] = 32'd0;
    mem[495] = 32'd0;
    mem[496] = 32'd0;
    mem[497] = 32'd0;
    mem[498] = 32'd0;
    mem[499] = 32'd0;
    mem[500] = 32'd0;
    mem[501] = 32'd0;
    mem[502] = 32'd0;
    mem[503] = 32'd0;
    mem[504] = 32'd0;
    mem[505] = 32'd0;
    mem[506] = 32'd0;
    mem[507] = 32'd0;
    mem[508] = 32'd0;
    mem[509] = 32'd0;
    mem[510] = 32'd0;
    mem[511] = 32'd0;
    mem[512] = 32'd0;
    mem[513] = 32'd0;
    mem[514] = 32'd0;
    mem[515] = 32'd0;
    mem[516] = 32'd0;
    mem[517] = 32'd0;
    mem[518] = 32'd0;
    mem[519] = 32'd0;
    mem[520] = 32'd0;
    mem[521] = 32'd0;
    mem[522] = 32'd0;
    mem[523] = 32'd0;
    mem[524] = 32'd0;
    mem[525] = 32'd0;
    mem[526] = 32'd0;
    mem[527] = 32'd0;
    mem[528] = 32'd0;
    mem[529] = 32'd0;
    mem[530] = 32'd0;
    mem[531] = 32'd0;
    mem[532] = 32'd0;
    mem[533] = 32'd0;
    mem[534] = 32'd0;
    mem[535] = 32'd0;
    mem[536] = 32'd0;
    mem[537] = 32'd0;
    mem[538] = 32'd0;
    mem[539] = 32'd0;
    mem[540] = 32'd0;
    mem[541] = 32'd0;
    mem[542] = 32'd0;
    mem[543] = 32'd0;
    mem[544] = 32'd0;
    mem[545] = 32'd0;
    mem[546] = 32'd0;
    mem[547] = 32'd0;
    mem[548] = 32'd0;
    mem[549] = 32'd0;
    mem[550] = 32'd0;
    mem[551] = 32'd0;
    mem[552] = 32'd0;
    mem[553] = 32'd0;
    mem[554] = 32'd0;
    mem[555] = 32'd0;
    mem[556] = 32'd0;
    mem[557] = 32'd0;
    mem[558] = 32'd0;
    mem[559] = 32'd0;
    mem[560] = 32'd0;
    mem[561] = 32'd0;
    mem[562] = 32'd0;
    mem[563] = 32'd0;
    mem[564] = 32'd0;
    mem[565] = 32'd0;
    mem[566] = 32'd0;
    mem[567] = 32'd0;
    mem[568] = 32'd0;
    mem[569] = 32'd0;
    mem[570] = 32'd0;
    mem[571] = 32'd0;
    mem[572] = 32'd0;
    mem[573] = 32'd0;
    mem[574] = 32'd0;
    mem[575] = 32'd0;
    mem[576] = 32'd0;
    mem[577] = 32'd0;
    mem[578] = 32'd0;
    mem[579] = 32'd0;
    mem[580] = 32'd0;
    mem[581] = 32'd0;
    mem[582] = 32'd0;
    mem[583] = 32'd0;
    mem[584] = 32'd0;
    mem[585] = 32'd0;
    mem[586] = 32'd0;
    mem[587] = 32'd0;
    mem[588] = 32'd0;
    mem[589] = 32'd0;
    mem[590] = 32'd0;
    mem[591] = 32'd0;
    mem[592] = 32'd0;
    mem[593] = 32'd0;
    mem[594] = 32'd0;
    mem[595] = 32'd0;
    mem[596] = 32'd0;
    mem[597] = 32'd0;
    mem[598] = 32'd0;
    mem[599] = 32'd0;
    mem[600] = 32'd0;
    mem[601] = 32'd0;
    mem[602] = 32'd0;
    mem[603] = 32'd0;
    mem[604] = 32'd0;
    mem[605] = 32'd0;
    mem[606] = 32'd0;
    mem[607] = 32'd0;
    mem[608] = 32'd0;
    mem[609] = 32'd0;
    mem[610] = 32'd0;
    mem[611] = 32'd0;
    mem[612] = 32'd0;
    mem[613] = 32'd0;
    mem[614] = 32'd0;
    mem[615] = 32'd0;
    mem[616] = 32'd0;
    mem[617] = 32'd0;
    mem[618] = 32'd0;
    mem[619] = 32'd0;
    mem[620] = 32'd0;
    mem[621] = 32'd0;
    mem[622] = 32'd0;
    mem[623] = 32'd0;
    mem[624] = 32'd0;
    mem[625] = 32'd0;
    mem[626] = 32'd0;
    mem[627] = 32'd0;
    mem[628] = 32'd0;
    mem[629] = 32'd0;
    mem[630] = 32'd0;
    mem[631] = 32'd0;
    mem[632] = 32'd0;
    mem[633] = 32'd0;
    mem[634] = 32'd0;
    mem[635] = 32'd0;
    mem[636] = 32'd0;
    mem[637] = 32'd0;
    mem[638] = 32'd0;
    mem[639] = 32'd0;
    mem[640] = 32'd0;
    mem[641] = 32'd0;
    mem[642] = 32'd0;
    mem[643] = 32'd0;
    mem[644] = 32'd0;
    mem[645] = 32'd0;
    mem[646] = 32'd0;
    mem[647] = 32'd0;
    mem[648] = 32'd0;
    mem[649] = 32'd0;
    mem[650] = 32'd0;
    mem[651] = 32'd0;
    mem[652] = 32'd0;
    mem[653] = 32'd0;
    mem[654] = 32'd0;
    mem[655] = 32'd0;
    mem[656] = 32'd0;
    mem[657] = 32'd0;
    mem[658] = 32'd0;
    mem[659] = 32'd0;
    mem[660] = 32'd0;
    mem[661] = 32'd0;
    mem[662] = 32'd0;
    mem[663] = 32'd0;
    mem[664] = 32'd0;
    mem[665] = 32'd0;
    mem[666] = 32'd0;
    mem[667] = 32'd0;
    mem[668] = 32'd0;
    mem[669] = 32'd0;
    mem[670] = 32'd0;
    mem[671] = 32'd0;
    mem[672] = 32'd0;
    mem[673] = 32'd0;
    mem[674] = 32'd0;
    mem[675] = 32'd0;
    mem[676] = 32'd0;
    mem[677] = 32'd0;
    mem[678] = 32'd0;
    mem[679] = 32'd0;
    mem[680] = 32'd0;
    mem[681] = 32'd0;
    mem[682] = 32'd0;
    mem[683] = 32'd0;
    mem[684] = 32'd0;
    mem[685] = 32'd0;
    mem[686] = 32'd0;
    mem[687] = 32'd0;
    mem[688] = 32'd0;
    mem[689] = 32'd0;
    mem[690] = 32'd0;
    mem[691] = 32'd0;
    mem[692] = 32'd0;
    mem[693] = 32'd0;
    mem[694] = 32'd0;
    mem[695] = 32'd0;
    mem[696] = 32'd0;
    mem[697] = 32'd0;
    mem[698] = 32'd0;
    mem[699] = 32'd0;
    mem[700] = 32'd0;
    mem[701] = 32'd0;
    mem[702] = 32'd0;
    mem[703] = 32'd0;
    mem[704] = 32'd0;
    mem[705] = 32'd0;
    mem[706] = 32'd0;
    mem[707] = 32'd0;
    mem[708] = 32'd0;
    mem[709] = 32'd0;
    mem[710] = 32'd0;
    mem[711] = 32'd0;
    mem[712] = 32'd0;
    mem[713] = 32'd0;
    mem[714] = 32'd0;
    mem[715] = 32'd0;
    mem[716] = 32'd0;
    mem[717] = 32'd0;
    mem[718] = 32'd0;
    mem[719] = 32'd0;
    mem[720] = 32'd0;
    mem[721] = 32'd0;
    mem[722] = 32'd0;
    mem[723] = 32'd0;
    mem[724] = 32'd0;
    mem[725] = 32'd0;
    mem[726] = 32'd0;
    mem[727] = 32'd0;
    mem[728] = 32'd0;
    mem[729] = 32'd0;
    mem[730] = 32'd0;
    mem[731] = 32'd0;
    mem[732] = 32'd0;
    mem[733] = 32'd0;
    mem[734] = 32'd0;
    mem[735] = 32'd0;
    mem[736] = 32'd0;
    mem[737] = 32'd0;
    mem[738] = 32'd0;
    mem[739] = 32'd0;
    mem[740] = 32'd0;
    mem[741] = 32'd0;
    mem[742] = 32'd0;
    mem[743] = 32'd0;
    mem[744] = 32'd0;
    mem[745] = 32'd0;
    mem[746] = 32'd0;
    mem[747] = 32'd0;
    mem[748] = 32'd0;
    mem[749] = 32'd0;
    mem[750] = 32'd0;
    mem[751] = 32'd0;
    mem[752] = 32'd0;
    mem[753] = 32'd0;
    mem[754] = 32'd0;
    mem[755] = 32'd0;
    mem[756] = 32'd0;
    mem[757] = 32'd0;
    mem[758] = 32'd0;
    mem[759] = 32'd0;
    mem[760] = 32'd0;
    mem[761] = 32'd0;
    mem[762] = 32'd0;
    mem[763] = 32'd0;
    mem[764] = 32'd0;
    mem[765] = 32'd0;
    mem[766] = 32'd0;
    mem[767] = 32'd0;
    mem[768] = 32'd0;
    mem[769] = 32'd0;
    mem[770] = 32'd0;
    mem[771] = 32'd0;
    mem[772] = 32'd0;
    mem[773] = 32'd0;
    mem[774] = 32'd0;
    mem[775] = 32'd0;
    mem[776] = 32'd0;
    mem[777] = 32'd0;
    mem[778] = 32'd0;
    mem[779] = 32'd0;
    mem[780] = 32'd0;
    mem[781] = 32'd0;
    mem[782] = 32'd0;
    mem[783] = 32'd0;
    mem[784] = 32'd0;
    mem[785] = 32'd0;
    mem[786] = 32'd0;
    mem[787] = 32'd0;
    mem[788] = 32'd0;
    mem[789] = 32'd0;
    mem[790] = 32'd0;
    mem[791] = 32'd0;
    mem[792] = 32'd0;
    mem[793] = 32'd0;
    mem[794] = 32'd0;
    mem[795] = 32'd0;
    mem[796] = 32'd0;
    mem[797] = 32'd0;
    mem[798] = 32'd0;
    mem[799] = 32'd0;
    mem[800] = 32'd0;
    mem[801] = 32'd0;
    mem[802] = 32'd0;
    mem[803] = 32'd0;
    mem[804] = 32'd0;
    mem[805] = 32'd0;
    mem[806] = 32'd0;
    mem[807] = 32'd0;
    mem[808] = 32'd0;
    mem[809] = 32'd0;
    mem[810] = 32'd0;
    mem[811] = 32'd0;
    mem[812] = 32'd0;
    mem[813] = 32'd0;
    mem[814] = 32'd0;
    mem[815] = 32'd0;
    mem[816] = 32'd0;
    mem[817] = 32'd0;
    mem[818] = 32'd0;
    mem[819] = 32'd0;
    mem[820] = 32'd0;
    mem[821] = 32'd0;
    mem[822] = 32'd0;
    mem[823] = 32'd0;
    mem[824] = 32'd0;
    mem[825] = 32'd0;
    mem[826] = 32'd0;
    mem[827] = 32'd0;
    mem[828] = 32'd0;
    mem[829] = 32'd0;
    mem[830] = 32'd0;
    mem[831] = 32'd0;
    mem[832] = 32'd0;
    mem[833] = 32'd0;
    mem[834] = 32'd0;
    mem[835] = 32'd0;
    mem[836] = 32'd0;
    mem[837] = 32'd0;
    mem[838] = 32'd0;
    mem[839] = 32'd0;
    mem[840] = 32'd0;
    mem[841] = 32'd0;
    mem[842] = 32'd0;
    mem[843] = 32'd0;
    mem[844] = 32'd0;
    mem[845] = 32'd0;
    mem[846] = 32'd0;
    mem[847] = 32'd0;
    mem[848] = 32'd0;
    mem[849] = 32'd0;
    mem[850] = 32'd0;
    mem[851] = 32'd0;
    mem[852] = 32'd0;
    mem[853] = 32'd0;
    mem[854] = 32'd0;
    mem[855] = 32'd0;
    mem[856] = 32'd0;
    mem[857] = 32'd0;
    mem[858] = 32'd0;
    mem[859] = 32'd0;
    mem[860] = 32'd0;
    mem[861] = 32'd0;
    mem[862] = 32'd0;
    mem[863] = 32'd0;
    mem[864] = 32'd0;
    mem[865] = 32'd0;
    mem[866] = 32'd0;
    mem[867] = 32'd0;
    mem[868] = 32'd0;
    mem[869] = 32'd0;
    mem[870] = 32'd0;
    mem[871] = 32'd0;
    mem[872] = 32'd0;
    mem[873] = 32'd0;
    mem[874] = 32'd0;
    mem[875] = 32'd0;
    mem[876] = 32'd0;
    mem[877] = 32'd0;
    mem[878] = 32'd0;
    mem[879] = 32'd0;
    mem[880] = 32'd0;
    mem[881] = 32'd0;
    mem[882] = 32'd0;
    mem[883] = 32'd0;
    mem[884] = 32'd0;
    mem[885] = 32'd0;
    mem[886] = 32'd0;
    mem[887] = 32'd0;
    mem[888] = 32'd0;
    mem[889] = 32'd0;
    mem[890] = 32'd0;
    mem[891] = 32'd0;
    mem[892] = 32'd0;
    mem[893] = 32'd0;
    mem[894] = 32'd0;
    mem[895] = 32'd0;
    mem[896] = 32'd0;
    mem[897] = 32'd0;
    mem[898] = 32'd0;
    mem[899] = 32'd0;
    mem[900] = 32'd0;
    mem[901] = 32'd0;
    mem[902] = 32'd0;
    mem[903] = 32'd0;
    mem[904] = 32'd0;
    mem[905] = 32'd0;
    mem[906] = 32'd0;
    mem[907] = 32'd0;
    mem[908] = 32'd0;
    mem[909] = 32'd0;
    mem[910] = 32'd0;
    mem[911] = 32'd0;
    mem[912] = 32'd0;
    mem[913] = 32'd0;
    mem[914] = 32'd0;
    mem[915] = 32'd0;
    mem[916] = 32'd0;
    mem[917] = 32'd0;
    mem[918] = 32'd0;
    mem[919] = 32'd0;
    mem[920] = 32'd0;
    mem[921] = 32'd0;
    mem[922] = 32'd0;
    mem[923] = 32'd0;
    mem[924] = 32'd0;
    mem[925] = 32'd0;
    mem[926] = 32'd0;
    mem[927] = 32'd0;
    mem[928] = 32'd0;
    mem[929] = 32'd0;
    mem[930] = 32'd0;
    mem[931] = 32'd0;
    mem[932] = 32'd0;
    mem[933] = 32'd0;
    mem[934] = 32'd0;
    mem[935] = 32'd0;
    mem[936] = 32'd0;
    mem[937] = 32'd0;
    mem[938] = 32'd0;
    mem[939] = 32'd0;
    mem[940] = 32'd0;
    mem[941] = 32'd0;
    mem[942] = 32'd0;
    mem[943] = 32'd0;
    mem[944] = 32'd0;
    mem[945] = 32'd0;
    mem[946] = 32'd0;
    mem[947] = 32'd0;
    mem[948] = 32'd0;
    mem[949] = 32'd0;
    mem[950] = 32'd0;
    mem[951] = 32'd0;
    mem[952] = 32'd0;
    mem[953] = 32'd0;
    mem[954] = 32'd0;
    mem[955] = 32'd0;
    mem[956] = 32'd0;
    mem[957] = 32'd0;
    mem[958] = 32'd0;
    mem[959] = 32'd0;
    mem[960] = 32'd0;
    mem[961] = 32'd0;
    mem[962] = 32'd0;
    mem[963] = 32'd0;
    mem[964] = 32'd0;
    mem[965] = 32'd0;
    mem[966] = 32'd0;
    mem[967] = 32'd0;
    mem[968] = 32'd0;
    mem[969] = 32'd0;
    mem[970] = 32'd0;
    mem[971] = 32'd0;
    mem[972] = 32'd0;
    mem[973] = 32'd0;
    mem[974] = 32'd0;
    mem[975] = 32'd0;
    mem[976] = 32'd0;
    mem[977] = 32'd0;
    mem[978] = 32'd0;
    mem[979] = 32'd0;
    mem[980] = 32'd0;
    mem[981] = 32'd0;
    mem[982] = 32'd0;
    mem[983] = 32'd0;
    mem[984] = 32'd0;
    mem[985] = 32'd0;
    mem[986] = 32'd0;
    mem[987] = 32'd0;
    mem[988] = 32'd0;
    mem[989] = 32'd0;
    mem[990] = 32'd0;
    mem[991] = 32'd0;
    mem[992] = 32'd0;
    mem[993] = 32'd0;
    mem[994] = 32'd0;
    mem[995] = 32'd0;
    mem[996] = 32'd0;
    mem[997] = 32'd0;
    mem[998] = 32'd0;
    mem[999] = 32'd0;
    mem[1000] = 32'd0;
    mem[1001] = 32'd0;
    mem[1002] = 32'd0;
    mem[1003] = 32'd0;
    mem[1004] = 32'd0;
    mem[1005] = 32'd0;
    mem[1006] = 32'd0;
    mem[1007] = 32'd0;
    mem[1008] = 32'd0;
    mem[1009] = 32'd0;
    mem[1010] = 32'd0;
    mem[1011] = 32'd0;
    mem[1012] = 32'd0;
    mem[1013] = 32'd0;
    mem[1014] = 32'd0;
    mem[1015] = 32'd0;
    mem[1016] = 32'd0;
    mem[1017] = 32'd0;
    mem[1018] = 32'd0;
    mem[1019] = 32'd0;
    mem[1020] = 32'd0;
    mem[1021] = 32'd0;
    mem[1022] = 32'd0;
    mem[1023] = 32'd0;
  end
  always @(posedge clk) begin
    if (mem_w_en)
      mem[mem_w_addr] <= mem_w_data;
  end
  reg [31:0] _0_;
  always @(posedge clk) begin
    _0_ <= mem[mem_r_addr];
  end
  assign mem_r_data = _0_;
  assign r_data = mem_r_data;
  assign mem_r_addr = r_addr;
  assign mem_r_en = 1'h1;
  assign mem_w_data = w_data;
  assign mem_w_addr = w_addr;
  assign mem_w_en = w_en;
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.ins.dp_2" *)
(* generator = "Amaranth" *)
module dp_2(w_addr, w_data, w_en, r_data, r_addr, clk);
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:215" *)
  wire [9:0] mem_r_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:215" *)
  wire [31:0] mem_r_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:215" *)
  wire mem_r_en;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:214" *)
  wire [9:0] mem_w_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:214" *)
  wire [31:0] mem_w_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:214" *)
  wire mem_w_en;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:209" *)
  input [9:0] r_addr;
  wire [9:0] r_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:210" *)
  output [31:0] r_data;
  wire [31:0] r_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:207" *)
  input [9:0] w_addr;
  wire [9:0] w_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:208" *)
  input [31:0] w_data;
  wire [31:0] w_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:206" *)
  input w_en;
  wire w_en;
  reg [31:0] mem [1023:0];
  initial begin
    mem[0] = 32'd0;
    mem[1] = 32'd0;
    mem[2] = 32'd0;
    mem[3] = 32'd0;
    mem[4] = 32'd0;
    mem[5] = 32'd0;
    mem[6] = 32'd0;
    mem[7] = 32'd0;
    mem[8] = 32'd0;
    mem[9] = 32'd0;
    mem[10] = 32'd0;
    mem[11] = 32'd0;
    mem[12] = 32'd0;
    mem[13] = 32'd0;
    mem[14] = 32'd0;
    mem[15] = 32'd0;
    mem[16] = 32'd0;
    mem[17] = 32'd0;
    mem[18] = 32'd0;
    mem[19] = 32'd0;
    mem[20] = 32'd0;
    mem[21] = 32'd0;
    mem[22] = 32'd0;
    mem[23] = 32'd0;
    mem[24] = 32'd0;
    mem[25] = 32'd0;
    mem[26] = 32'd0;
    mem[27] = 32'd0;
    mem[28] = 32'd0;
    mem[29] = 32'd0;
    mem[30] = 32'd0;
    mem[31] = 32'd0;
    mem[32] = 32'd0;
    mem[33] = 32'd0;
    mem[34] = 32'd0;
    mem[35] = 32'd0;
    mem[36] = 32'd0;
    mem[37] = 32'd0;
    mem[38] = 32'd0;
    mem[39] = 32'd0;
    mem[40] = 32'd0;
    mem[41] = 32'd0;
    mem[42] = 32'd0;
    mem[43] = 32'd0;
    mem[44] = 32'd0;
    mem[45] = 32'd0;
    mem[46] = 32'd0;
    mem[47] = 32'd0;
    mem[48] = 32'd0;
    mem[49] = 32'd0;
    mem[50] = 32'd0;
    mem[51] = 32'd0;
    mem[52] = 32'd0;
    mem[53] = 32'd0;
    mem[54] = 32'd0;
    mem[55] = 32'd0;
    mem[56] = 32'd0;
    mem[57] = 32'd0;
    mem[58] = 32'd0;
    mem[59] = 32'd0;
    mem[60] = 32'd0;
    mem[61] = 32'd0;
    mem[62] = 32'd0;
    mem[63] = 32'd0;
    mem[64] = 32'd0;
    mem[65] = 32'd0;
    mem[66] = 32'd0;
    mem[67] = 32'd0;
    mem[68] = 32'd0;
    mem[69] = 32'd0;
    mem[70] = 32'd0;
    mem[71] = 32'd0;
    mem[72] = 32'd0;
    mem[73] = 32'd0;
    mem[74] = 32'd0;
    mem[75] = 32'd0;
    mem[76] = 32'd0;
    mem[77] = 32'd0;
    mem[78] = 32'd0;
    mem[79] = 32'd0;
    mem[80] = 32'd0;
    mem[81] = 32'd0;
    mem[82] = 32'd0;
    mem[83] = 32'd0;
    mem[84] = 32'd0;
    mem[85] = 32'd0;
    mem[86] = 32'd0;
    mem[87] = 32'd0;
    mem[88] = 32'd0;
    mem[89] = 32'd0;
    mem[90] = 32'd0;
    mem[91] = 32'd0;
    mem[92] = 32'd0;
    mem[93] = 32'd0;
    mem[94] = 32'd0;
    mem[95] = 32'd0;
    mem[96] = 32'd0;
    mem[97] = 32'd0;
    mem[98] = 32'd0;
    mem[99] = 32'd0;
    mem[100] = 32'd0;
    mem[101] = 32'd0;
    mem[102] = 32'd0;
    mem[103] = 32'd0;
    mem[104] = 32'd0;
    mem[105] = 32'd0;
    mem[106] = 32'd0;
    mem[107] = 32'd0;
    mem[108] = 32'd0;
    mem[109] = 32'd0;
    mem[110] = 32'd0;
    mem[111] = 32'd0;
    mem[112] = 32'd0;
    mem[113] = 32'd0;
    mem[114] = 32'd0;
    mem[115] = 32'd0;
    mem[116] = 32'd0;
    mem[117] = 32'd0;
    mem[118] = 32'd0;
    mem[119] = 32'd0;
    mem[120] = 32'd0;
    mem[121] = 32'd0;
    mem[122] = 32'd0;
    mem[123] = 32'd0;
    mem[124] = 32'd0;
    mem[125] = 32'd0;
    mem[126] = 32'd0;
    mem[127] = 32'd0;
    mem[128] = 32'd0;
    mem[129] = 32'd0;
    mem[130] = 32'd0;
    mem[131] = 32'd0;
    mem[132] = 32'd0;
    mem[133] = 32'd0;
    mem[134] = 32'd0;
    mem[135] = 32'd0;
    mem[136] = 32'd0;
    mem[137] = 32'd0;
    mem[138] = 32'd0;
    mem[139] = 32'd0;
    mem[140] = 32'd0;
    mem[141] = 32'd0;
    mem[142] = 32'd0;
    mem[143] = 32'd0;
    mem[144] = 32'd0;
    mem[145] = 32'd0;
    mem[146] = 32'd0;
    mem[147] = 32'd0;
    mem[148] = 32'd0;
    mem[149] = 32'd0;
    mem[150] = 32'd0;
    mem[151] = 32'd0;
    mem[152] = 32'd0;
    mem[153] = 32'd0;
    mem[154] = 32'd0;
    mem[155] = 32'd0;
    mem[156] = 32'd0;
    mem[157] = 32'd0;
    mem[158] = 32'd0;
    mem[159] = 32'd0;
    mem[160] = 32'd0;
    mem[161] = 32'd0;
    mem[162] = 32'd0;
    mem[163] = 32'd0;
    mem[164] = 32'd0;
    mem[165] = 32'd0;
    mem[166] = 32'd0;
    mem[167] = 32'd0;
    mem[168] = 32'd0;
    mem[169] = 32'd0;
    mem[170] = 32'd0;
    mem[171] = 32'd0;
    mem[172] = 32'd0;
    mem[173] = 32'd0;
    mem[174] = 32'd0;
    mem[175] = 32'd0;
    mem[176] = 32'd0;
    mem[177] = 32'd0;
    mem[178] = 32'd0;
    mem[179] = 32'd0;
    mem[180] = 32'd0;
    mem[181] = 32'd0;
    mem[182] = 32'd0;
    mem[183] = 32'd0;
    mem[184] = 32'd0;
    mem[185] = 32'd0;
    mem[186] = 32'd0;
    mem[187] = 32'd0;
    mem[188] = 32'd0;
    mem[189] = 32'd0;
    mem[190] = 32'd0;
    mem[191] = 32'd0;
    mem[192] = 32'd0;
    mem[193] = 32'd0;
    mem[194] = 32'd0;
    mem[195] = 32'd0;
    mem[196] = 32'd0;
    mem[197] = 32'd0;
    mem[198] = 32'd0;
    mem[199] = 32'd0;
    mem[200] = 32'd0;
    mem[201] = 32'd0;
    mem[202] = 32'd0;
    mem[203] = 32'd0;
    mem[204] = 32'd0;
    mem[205] = 32'd0;
    mem[206] = 32'd0;
    mem[207] = 32'd0;
    mem[208] = 32'd0;
    mem[209] = 32'd0;
    mem[210] = 32'd0;
    mem[211] = 32'd0;
    mem[212] = 32'd0;
    mem[213] = 32'd0;
    mem[214] = 32'd0;
    mem[215] = 32'd0;
    mem[216] = 32'd0;
    mem[217] = 32'd0;
    mem[218] = 32'd0;
    mem[219] = 32'd0;
    mem[220] = 32'd0;
    mem[221] = 32'd0;
    mem[222] = 32'd0;
    mem[223] = 32'd0;
    mem[224] = 32'd0;
    mem[225] = 32'd0;
    mem[226] = 32'd0;
    mem[227] = 32'd0;
    mem[228] = 32'd0;
    mem[229] = 32'd0;
    mem[230] = 32'd0;
    mem[231] = 32'd0;
    mem[232] = 32'd0;
    mem[233] = 32'd0;
    mem[234] = 32'd0;
    mem[235] = 32'd0;
    mem[236] = 32'd0;
    mem[237] = 32'd0;
    mem[238] = 32'd0;
    mem[239] = 32'd0;
    mem[240] = 32'd0;
    mem[241] = 32'd0;
    mem[242] = 32'd0;
    mem[243] = 32'd0;
    mem[244] = 32'd0;
    mem[245] = 32'd0;
    mem[246] = 32'd0;
    mem[247] = 32'd0;
    mem[248] = 32'd0;
    mem[249] = 32'd0;
    mem[250] = 32'd0;
    mem[251] = 32'd0;
    mem[252] = 32'd0;
    mem[253] = 32'd0;
    mem[254] = 32'd0;
    mem[255] = 32'd0;
    mem[256] = 32'd0;
    mem[257] = 32'd0;
    mem[258] = 32'd0;
    mem[259] = 32'd0;
    mem[260] = 32'd0;
    mem[261] = 32'd0;
    mem[262] = 32'd0;
    mem[263] = 32'd0;
    mem[264] = 32'd0;
    mem[265] = 32'd0;
    mem[266] = 32'd0;
    mem[267] = 32'd0;
    mem[268] = 32'd0;
    mem[269] = 32'd0;
    mem[270] = 32'd0;
    mem[271] = 32'd0;
    mem[272] = 32'd0;
    mem[273] = 32'd0;
    mem[274] = 32'd0;
    mem[275] = 32'd0;
    mem[276] = 32'd0;
    mem[277] = 32'd0;
    mem[278] = 32'd0;
    mem[279] = 32'd0;
    mem[280] = 32'd0;
    mem[281] = 32'd0;
    mem[282] = 32'd0;
    mem[283] = 32'd0;
    mem[284] = 32'd0;
    mem[285] = 32'd0;
    mem[286] = 32'd0;
    mem[287] = 32'd0;
    mem[288] = 32'd0;
    mem[289] = 32'd0;
    mem[290] = 32'd0;
    mem[291] = 32'd0;
    mem[292] = 32'd0;
    mem[293] = 32'd0;
    mem[294] = 32'd0;
    mem[295] = 32'd0;
    mem[296] = 32'd0;
    mem[297] = 32'd0;
    mem[298] = 32'd0;
    mem[299] = 32'd0;
    mem[300] = 32'd0;
    mem[301] = 32'd0;
    mem[302] = 32'd0;
    mem[303] = 32'd0;
    mem[304] = 32'd0;
    mem[305] = 32'd0;
    mem[306] = 32'd0;
    mem[307] = 32'd0;
    mem[308] = 32'd0;
    mem[309] = 32'd0;
    mem[310] = 32'd0;
    mem[311] = 32'd0;
    mem[312] = 32'd0;
    mem[313] = 32'd0;
    mem[314] = 32'd0;
    mem[315] = 32'd0;
    mem[316] = 32'd0;
    mem[317] = 32'd0;
    mem[318] = 32'd0;
    mem[319] = 32'd0;
    mem[320] = 32'd0;
    mem[321] = 32'd0;
    mem[322] = 32'd0;
    mem[323] = 32'd0;
    mem[324] = 32'd0;
    mem[325] = 32'd0;
    mem[326] = 32'd0;
    mem[327] = 32'd0;
    mem[328] = 32'd0;
    mem[329] = 32'd0;
    mem[330] = 32'd0;
    mem[331] = 32'd0;
    mem[332] = 32'd0;
    mem[333] = 32'd0;
    mem[334] = 32'd0;
    mem[335] = 32'd0;
    mem[336] = 32'd0;
    mem[337] = 32'd0;
    mem[338] = 32'd0;
    mem[339] = 32'd0;
    mem[340] = 32'd0;
    mem[341] = 32'd0;
    mem[342] = 32'd0;
    mem[343] = 32'd0;
    mem[344] = 32'd0;
    mem[345] = 32'd0;
    mem[346] = 32'd0;
    mem[347] = 32'd0;
    mem[348] = 32'd0;
    mem[349] = 32'd0;
    mem[350] = 32'd0;
    mem[351] = 32'd0;
    mem[352] = 32'd0;
    mem[353] = 32'd0;
    mem[354] = 32'd0;
    mem[355] = 32'd0;
    mem[356] = 32'd0;
    mem[357] = 32'd0;
    mem[358] = 32'd0;
    mem[359] = 32'd0;
    mem[360] = 32'd0;
    mem[361] = 32'd0;
    mem[362] = 32'd0;
    mem[363] = 32'd0;
    mem[364] = 32'd0;
    mem[365] = 32'd0;
    mem[366] = 32'd0;
    mem[367] = 32'd0;
    mem[368] = 32'd0;
    mem[369] = 32'd0;
    mem[370] = 32'd0;
    mem[371] = 32'd0;
    mem[372] = 32'd0;
    mem[373] = 32'd0;
    mem[374] = 32'd0;
    mem[375] = 32'd0;
    mem[376] = 32'd0;
    mem[377] = 32'd0;
    mem[378] = 32'd0;
    mem[379] = 32'd0;
    mem[380] = 32'd0;
    mem[381] = 32'd0;
    mem[382] = 32'd0;
    mem[383] = 32'd0;
    mem[384] = 32'd0;
    mem[385] = 32'd0;
    mem[386] = 32'd0;
    mem[387] = 32'd0;
    mem[388] = 32'd0;
    mem[389] = 32'd0;
    mem[390] = 32'd0;
    mem[391] = 32'd0;
    mem[392] = 32'd0;
    mem[393] = 32'd0;
    mem[394] = 32'd0;
    mem[395] = 32'd0;
    mem[396] = 32'd0;
    mem[397] = 32'd0;
    mem[398] = 32'd0;
    mem[399] = 32'd0;
    mem[400] = 32'd0;
    mem[401] = 32'd0;
    mem[402] = 32'd0;
    mem[403] = 32'd0;
    mem[404] = 32'd0;
    mem[405] = 32'd0;
    mem[406] = 32'd0;
    mem[407] = 32'd0;
    mem[408] = 32'd0;
    mem[409] = 32'd0;
    mem[410] = 32'd0;
    mem[411] = 32'd0;
    mem[412] = 32'd0;
    mem[413] = 32'd0;
    mem[414] = 32'd0;
    mem[415] = 32'd0;
    mem[416] = 32'd0;
    mem[417] = 32'd0;
    mem[418] = 32'd0;
    mem[419] = 32'd0;
    mem[420] = 32'd0;
    mem[421] = 32'd0;
    mem[422] = 32'd0;
    mem[423] = 32'd0;
    mem[424] = 32'd0;
    mem[425] = 32'd0;
    mem[426] = 32'd0;
    mem[427] = 32'd0;
    mem[428] = 32'd0;
    mem[429] = 32'd0;
    mem[430] = 32'd0;
    mem[431] = 32'd0;
    mem[432] = 32'd0;
    mem[433] = 32'd0;
    mem[434] = 32'd0;
    mem[435] = 32'd0;
    mem[436] = 32'd0;
    mem[437] = 32'd0;
    mem[438] = 32'd0;
    mem[439] = 32'd0;
    mem[440] = 32'd0;
    mem[441] = 32'd0;
    mem[442] = 32'd0;
    mem[443] = 32'd0;
    mem[444] = 32'd0;
    mem[445] = 32'd0;
    mem[446] = 32'd0;
    mem[447] = 32'd0;
    mem[448] = 32'd0;
    mem[449] = 32'd0;
    mem[450] = 32'd0;
    mem[451] = 32'd0;
    mem[452] = 32'd0;
    mem[453] = 32'd0;
    mem[454] = 32'd0;
    mem[455] = 32'd0;
    mem[456] = 32'd0;
    mem[457] = 32'd0;
    mem[458] = 32'd0;
    mem[459] = 32'd0;
    mem[460] = 32'd0;
    mem[461] = 32'd0;
    mem[462] = 32'd0;
    mem[463] = 32'd0;
    mem[464] = 32'd0;
    mem[465] = 32'd0;
    mem[466] = 32'd0;
    mem[467] = 32'd0;
    mem[468] = 32'd0;
    mem[469] = 32'd0;
    mem[470] = 32'd0;
    mem[471] = 32'd0;
    mem[472] = 32'd0;
    mem[473] = 32'd0;
    mem[474] = 32'd0;
    mem[475] = 32'd0;
    mem[476] = 32'd0;
    mem[477] = 32'd0;
    mem[478] = 32'd0;
    mem[479] = 32'd0;
    mem[480] = 32'd0;
    mem[481] = 32'd0;
    mem[482] = 32'd0;
    mem[483] = 32'd0;
    mem[484] = 32'd0;
    mem[485] = 32'd0;
    mem[486] = 32'd0;
    mem[487] = 32'd0;
    mem[488] = 32'd0;
    mem[489] = 32'd0;
    mem[490] = 32'd0;
    mem[491] = 32'd0;
    mem[492] = 32'd0;
    mem[493] = 32'd0;
    mem[494] = 32'd0;
    mem[495] = 32'd0;
    mem[496] = 32'd0;
    mem[497] = 32'd0;
    mem[498] = 32'd0;
    mem[499] = 32'd0;
    mem[500] = 32'd0;
    mem[501] = 32'd0;
    mem[502] = 32'd0;
    mem[503] = 32'd0;
    mem[504] = 32'd0;
    mem[505] = 32'd0;
    mem[506] = 32'd0;
    mem[507] = 32'd0;
    mem[508] = 32'd0;
    mem[509] = 32'd0;
    mem[510] = 32'd0;
    mem[511] = 32'd0;
    mem[512] = 32'd0;
    mem[513] = 32'd0;
    mem[514] = 32'd0;
    mem[515] = 32'd0;
    mem[516] = 32'd0;
    mem[517] = 32'd0;
    mem[518] = 32'd0;
    mem[519] = 32'd0;
    mem[520] = 32'd0;
    mem[521] = 32'd0;
    mem[522] = 32'd0;
    mem[523] = 32'd0;
    mem[524] = 32'd0;
    mem[525] = 32'd0;
    mem[526] = 32'd0;
    mem[527] = 32'd0;
    mem[528] = 32'd0;
    mem[529] = 32'd0;
    mem[530] = 32'd0;
    mem[531] = 32'd0;
    mem[532] = 32'd0;
    mem[533] = 32'd0;
    mem[534] = 32'd0;
    mem[535] = 32'd0;
    mem[536] = 32'd0;
    mem[537] = 32'd0;
    mem[538] = 32'd0;
    mem[539] = 32'd0;
    mem[540] = 32'd0;
    mem[541] = 32'd0;
    mem[542] = 32'd0;
    mem[543] = 32'd0;
    mem[544] = 32'd0;
    mem[545] = 32'd0;
    mem[546] = 32'd0;
    mem[547] = 32'd0;
    mem[548] = 32'd0;
    mem[549] = 32'd0;
    mem[550] = 32'd0;
    mem[551] = 32'd0;
    mem[552] = 32'd0;
    mem[553] = 32'd0;
    mem[554] = 32'd0;
    mem[555] = 32'd0;
    mem[556] = 32'd0;
    mem[557] = 32'd0;
    mem[558] = 32'd0;
    mem[559] = 32'd0;
    mem[560] = 32'd0;
    mem[561] = 32'd0;
    mem[562] = 32'd0;
    mem[563] = 32'd0;
    mem[564] = 32'd0;
    mem[565] = 32'd0;
    mem[566] = 32'd0;
    mem[567] = 32'd0;
    mem[568] = 32'd0;
    mem[569] = 32'd0;
    mem[570] = 32'd0;
    mem[571] = 32'd0;
    mem[572] = 32'd0;
    mem[573] = 32'd0;
    mem[574] = 32'd0;
    mem[575] = 32'd0;
    mem[576] = 32'd0;
    mem[577] = 32'd0;
    mem[578] = 32'd0;
    mem[579] = 32'd0;
    mem[580] = 32'd0;
    mem[581] = 32'd0;
    mem[582] = 32'd0;
    mem[583] = 32'd0;
    mem[584] = 32'd0;
    mem[585] = 32'd0;
    mem[586] = 32'd0;
    mem[587] = 32'd0;
    mem[588] = 32'd0;
    mem[589] = 32'd0;
    mem[590] = 32'd0;
    mem[591] = 32'd0;
    mem[592] = 32'd0;
    mem[593] = 32'd0;
    mem[594] = 32'd0;
    mem[595] = 32'd0;
    mem[596] = 32'd0;
    mem[597] = 32'd0;
    mem[598] = 32'd0;
    mem[599] = 32'd0;
    mem[600] = 32'd0;
    mem[601] = 32'd0;
    mem[602] = 32'd0;
    mem[603] = 32'd0;
    mem[604] = 32'd0;
    mem[605] = 32'd0;
    mem[606] = 32'd0;
    mem[607] = 32'd0;
    mem[608] = 32'd0;
    mem[609] = 32'd0;
    mem[610] = 32'd0;
    mem[611] = 32'd0;
    mem[612] = 32'd0;
    mem[613] = 32'd0;
    mem[614] = 32'd0;
    mem[615] = 32'd0;
    mem[616] = 32'd0;
    mem[617] = 32'd0;
    mem[618] = 32'd0;
    mem[619] = 32'd0;
    mem[620] = 32'd0;
    mem[621] = 32'd0;
    mem[622] = 32'd0;
    mem[623] = 32'd0;
    mem[624] = 32'd0;
    mem[625] = 32'd0;
    mem[626] = 32'd0;
    mem[627] = 32'd0;
    mem[628] = 32'd0;
    mem[629] = 32'd0;
    mem[630] = 32'd0;
    mem[631] = 32'd0;
    mem[632] = 32'd0;
    mem[633] = 32'd0;
    mem[634] = 32'd0;
    mem[635] = 32'd0;
    mem[636] = 32'd0;
    mem[637] = 32'd0;
    mem[638] = 32'd0;
    mem[639] = 32'd0;
    mem[640] = 32'd0;
    mem[641] = 32'd0;
    mem[642] = 32'd0;
    mem[643] = 32'd0;
    mem[644] = 32'd0;
    mem[645] = 32'd0;
    mem[646] = 32'd0;
    mem[647] = 32'd0;
    mem[648] = 32'd0;
    mem[649] = 32'd0;
    mem[650] = 32'd0;
    mem[651] = 32'd0;
    mem[652] = 32'd0;
    mem[653] = 32'd0;
    mem[654] = 32'd0;
    mem[655] = 32'd0;
    mem[656] = 32'd0;
    mem[657] = 32'd0;
    mem[658] = 32'd0;
    mem[659] = 32'd0;
    mem[660] = 32'd0;
    mem[661] = 32'd0;
    mem[662] = 32'd0;
    mem[663] = 32'd0;
    mem[664] = 32'd0;
    mem[665] = 32'd0;
    mem[666] = 32'd0;
    mem[667] = 32'd0;
    mem[668] = 32'd0;
    mem[669] = 32'd0;
    mem[670] = 32'd0;
    mem[671] = 32'd0;
    mem[672] = 32'd0;
    mem[673] = 32'd0;
    mem[674] = 32'd0;
    mem[675] = 32'd0;
    mem[676] = 32'd0;
    mem[677] = 32'd0;
    mem[678] = 32'd0;
    mem[679] = 32'd0;
    mem[680] = 32'd0;
    mem[681] = 32'd0;
    mem[682] = 32'd0;
    mem[683] = 32'd0;
    mem[684] = 32'd0;
    mem[685] = 32'd0;
    mem[686] = 32'd0;
    mem[687] = 32'd0;
    mem[688] = 32'd0;
    mem[689] = 32'd0;
    mem[690] = 32'd0;
    mem[691] = 32'd0;
    mem[692] = 32'd0;
    mem[693] = 32'd0;
    mem[694] = 32'd0;
    mem[695] = 32'd0;
    mem[696] = 32'd0;
    mem[697] = 32'd0;
    mem[698] = 32'd0;
    mem[699] = 32'd0;
    mem[700] = 32'd0;
    mem[701] = 32'd0;
    mem[702] = 32'd0;
    mem[703] = 32'd0;
    mem[704] = 32'd0;
    mem[705] = 32'd0;
    mem[706] = 32'd0;
    mem[707] = 32'd0;
    mem[708] = 32'd0;
    mem[709] = 32'd0;
    mem[710] = 32'd0;
    mem[711] = 32'd0;
    mem[712] = 32'd0;
    mem[713] = 32'd0;
    mem[714] = 32'd0;
    mem[715] = 32'd0;
    mem[716] = 32'd0;
    mem[717] = 32'd0;
    mem[718] = 32'd0;
    mem[719] = 32'd0;
    mem[720] = 32'd0;
    mem[721] = 32'd0;
    mem[722] = 32'd0;
    mem[723] = 32'd0;
    mem[724] = 32'd0;
    mem[725] = 32'd0;
    mem[726] = 32'd0;
    mem[727] = 32'd0;
    mem[728] = 32'd0;
    mem[729] = 32'd0;
    mem[730] = 32'd0;
    mem[731] = 32'd0;
    mem[732] = 32'd0;
    mem[733] = 32'd0;
    mem[734] = 32'd0;
    mem[735] = 32'd0;
    mem[736] = 32'd0;
    mem[737] = 32'd0;
    mem[738] = 32'd0;
    mem[739] = 32'd0;
    mem[740] = 32'd0;
    mem[741] = 32'd0;
    mem[742] = 32'd0;
    mem[743] = 32'd0;
    mem[744] = 32'd0;
    mem[745] = 32'd0;
    mem[746] = 32'd0;
    mem[747] = 32'd0;
    mem[748] = 32'd0;
    mem[749] = 32'd0;
    mem[750] = 32'd0;
    mem[751] = 32'd0;
    mem[752] = 32'd0;
    mem[753] = 32'd0;
    mem[754] = 32'd0;
    mem[755] = 32'd0;
    mem[756] = 32'd0;
    mem[757] = 32'd0;
    mem[758] = 32'd0;
    mem[759] = 32'd0;
    mem[760] = 32'd0;
    mem[761] = 32'd0;
    mem[762] = 32'd0;
    mem[763] = 32'd0;
    mem[764] = 32'd0;
    mem[765] = 32'd0;
    mem[766] = 32'd0;
    mem[767] = 32'd0;
    mem[768] = 32'd0;
    mem[769] = 32'd0;
    mem[770] = 32'd0;
    mem[771] = 32'd0;
    mem[772] = 32'd0;
    mem[773] = 32'd0;
    mem[774] = 32'd0;
    mem[775] = 32'd0;
    mem[776] = 32'd0;
    mem[777] = 32'd0;
    mem[778] = 32'd0;
    mem[779] = 32'd0;
    mem[780] = 32'd0;
    mem[781] = 32'd0;
    mem[782] = 32'd0;
    mem[783] = 32'd0;
    mem[784] = 32'd0;
    mem[785] = 32'd0;
    mem[786] = 32'd0;
    mem[787] = 32'd0;
    mem[788] = 32'd0;
    mem[789] = 32'd0;
    mem[790] = 32'd0;
    mem[791] = 32'd0;
    mem[792] = 32'd0;
    mem[793] = 32'd0;
    mem[794] = 32'd0;
    mem[795] = 32'd0;
    mem[796] = 32'd0;
    mem[797] = 32'd0;
    mem[798] = 32'd0;
    mem[799] = 32'd0;
    mem[800] = 32'd0;
    mem[801] = 32'd0;
    mem[802] = 32'd0;
    mem[803] = 32'd0;
    mem[804] = 32'd0;
    mem[805] = 32'd0;
    mem[806] = 32'd0;
    mem[807] = 32'd0;
    mem[808] = 32'd0;
    mem[809] = 32'd0;
    mem[810] = 32'd0;
    mem[811] = 32'd0;
    mem[812] = 32'd0;
    mem[813] = 32'd0;
    mem[814] = 32'd0;
    mem[815] = 32'd0;
    mem[816] = 32'd0;
    mem[817] = 32'd0;
    mem[818] = 32'd0;
    mem[819] = 32'd0;
    mem[820] = 32'd0;
    mem[821] = 32'd0;
    mem[822] = 32'd0;
    mem[823] = 32'd0;
    mem[824] = 32'd0;
    mem[825] = 32'd0;
    mem[826] = 32'd0;
    mem[827] = 32'd0;
    mem[828] = 32'd0;
    mem[829] = 32'd0;
    mem[830] = 32'd0;
    mem[831] = 32'd0;
    mem[832] = 32'd0;
    mem[833] = 32'd0;
    mem[834] = 32'd0;
    mem[835] = 32'd0;
    mem[836] = 32'd0;
    mem[837] = 32'd0;
    mem[838] = 32'd0;
    mem[839] = 32'd0;
    mem[840] = 32'd0;
    mem[841] = 32'd0;
    mem[842] = 32'd0;
    mem[843] = 32'd0;
    mem[844] = 32'd0;
    mem[845] = 32'd0;
    mem[846] = 32'd0;
    mem[847] = 32'd0;
    mem[848] = 32'd0;
    mem[849] = 32'd0;
    mem[850] = 32'd0;
    mem[851] = 32'd0;
    mem[852] = 32'd0;
    mem[853] = 32'd0;
    mem[854] = 32'd0;
    mem[855] = 32'd0;
    mem[856] = 32'd0;
    mem[857] = 32'd0;
    mem[858] = 32'd0;
    mem[859] = 32'd0;
    mem[860] = 32'd0;
    mem[861] = 32'd0;
    mem[862] = 32'd0;
    mem[863] = 32'd0;
    mem[864] = 32'd0;
    mem[865] = 32'd0;
    mem[866] = 32'd0;
    mem[867] = 32'd0;
    mem[868] = 32'd0;
    mem[869] = 32'd0;
    mem[870] = 32'd0;
    mem[871] = 32'd0;
    mem[872] = 32'd0;
    mem[873] = 32'd0;
    mem[874] = 32'd0;
    mem[875] = 32'd0;
    mem[876] = 32'd0;
    mem[877] = 32'd0;
    mem[878] = 32'd0;
    mem[879] = 32'd0;
    mem[880] = 32'd0;
    mem[881] = 32'd0;
    mem[882] = 32'd0;
    mem[883] = 32'd0;
    mem[884] = 32'd0;
    mem[885] = 32'd0;
    mem[886] = 32'd0;
    mem[887] = 32'd0;
    mem[888] = 32'd0;
    mem[889] = 32'd0;
    mem[890] = 32'd0;
    mem[891] = 32'd0;
    mem[892] = 32'd0;
    mem[893] = 32'd0;
    mem[894] = 32'd0;
    mem[895] = 32'd0;
    mem[896] = 32'd0;
    mem[897] = 32'd0;
    mem[898] = 32'd0;
    mem[899] = 32'd0;
    mem[900] = 32'd0;
    mem[901] = 32'd0;
    mem[902] = 32'd0;
    mem[903] = 32'd0;
    mem[904] = 32'd0;
    mem[905] = 32'd0;
    mem[906] = 32'd0;
    mem[907] = 32'd0;
    mem[908] = 32'd0;
    mem[909] = 32'd0;
    mem[910] = 32'd0;
    mem[911] = 32'd0;
    mem[912] = 32'd0;
    mem[913] = 32'd0;
    mem[914] = 32'd0;
    mem[915] = 32'd0;
    mem[916] = 32'd0;
    mem[917] = 32'd0;
    mem[918] = 32'd0;
    mem[919] = 32'd0;
    mem[920] = 32'd0;
    mem[921] = 32'd0;
    mem[922] = 32'd0;
    mem[923] = 32'd0;
    mem[924] = 32'd0;
    mem[925] = 32'd0;
    mem[926] = 32'd0;
    mem[927] = 32'd0;
    mem[928] = 32'd0;
    mem[929] = 32'd0;
    mem[930] = 32'd0;
    mem[931] = 32'd0;
    mem[932] = 32'd0;
    mem[933] = 32'd0;
    mem[934] = 32'd0;
    mem[935] = 32'd0;
    mem[936] = 32'd0;
    mem[937] = 32'd0;
    mem[938] = 32'd0;
    mem[939] = 32'd0;
    mem[940] = 32'd0;
    mem[941] = 32'd0;
    mem[942] = 32'd0;
    mem[943] = 32'd0;
    mem[944] = 32'd0;
    mem[945] = 32'd0;
    mem[946] = 32'd0;
    mem[947] = 32'd0;
    mem[948] = 32'd0;
    mem[949] = 32'd0;
    mem[950] = 32'd0;
    mem[951] = 32'd0;
    mem[952] = 32'd0;
    mem[953] = 32'd0;
    mem[954] = 32'd0;
    mem[955] = 32'd0;
    mem[956] = 32'd0;
    mem[957] = 32'd0;
    mem[958] = 32'd0;
    mem[959] = 32'd0;
    mem[960] = 32'd0;
    mem[961] = 32'd0;
    mem[962] = 32'd0;
    mem[963] = 32'd0;
    mem[964] = 32'd0;
    mem[965] = 32'd0;
    mem[966] = 32'd0;
    mem[967] = 32'd0;
    mem[968] = 32'd0;
    mem[969] = 32'd0;
    mem[970] = 32'd0;
    mem[971] = 32'd0;
    mem[972] = 32'd0;
    mem[973] = 32'd0;
    mem[974] = 32'd0;
    mem[975] = 32'd0;
    mem[976] = 32'd0;
    mem[977] = 32'd0;
    mem[978] = 32'd0;
    mem[979] = 32'd0;
    mem[980] = 32'd0;
    mem[981] = 32'd0;
    mem[982] = 32'd0;
    mem[983] = 32'd0;
    mem[984] = 32'd0;
    mem[985] = 32'd0;
    mem[986] = 32'd0;
    mem[987] = 32'd0;
    mem[988] = 32'd0;
    mem[989] = 32'd0;
    mem[990] = 32'd0;
    mem[991] = 32'd0;
    mem[992] = 32'd0;
    mem[993] = 32'd0;
    mem[994] = 32'd0;
    mem[995] = 32'd0;
    mem[996] = 32'd0;
    mem[997] = 32'd0;
    mem[998] = 32'd0;
    mem[999] = 32'd0;
    mem[1000] = 32'd0;
    mem[1001] = 32'd0;
    mem[1002] = 32'd0;
    mem[1003] = 32'd0;
    mem[1004] = 32'd0;
    mem[1005] = 32'd0;
    mem[1006] = 32'd0;
    mem[1007] = 32'd0;
    mem[1008] = 32'd0;
    mem[1009] = 32'd0;
    mem[1010] = 32'd0;
    mem[1011] = 32'd0;
    mem[1012] = 32'd0;
    mem[1013] = 32'd0;
    mem[1014] = 32'd0;
    mem[1015] = 32'd0;
    mem[1016] = 32'd0;
    mem[1017] = 32'd0;
    mem[1018] = 32'd0;
    mem[1019] = 32'd0;
    mem[1020] = 32'd0;
    mem[1021] = 32'd0;
    mem[1022] = 32'd0;
    mem[1023] = 32'd0;
  end
  always @(posedge clk) begin
    if (mem_w_en)
      mem[mem_w_addr] <= mem_w_data;
  end
  reg [31:0] _0_;
  always @(posedge clk) begin
    _0_ <= mem[mem_r_addr];
  end
  assign mem_r_data = _0_;
  assign r_data = mem_r_data;
  assign mem_r_addr = r_addr;
  assign mem_r_en = 1'h1;
  assign mem_w_data = w_data;
  assign mem_w_addr = w_addr;
  assign mem_w_en = w_en;
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.ins.dp_3" *)
(* generator = "Amaranth" *)
module dp_3(w_addr, w_data, w_en, r_data, r_addr, clk);
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:215" *)
  wire [9:0] mem_r_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:215" *)
  wire [31:0] mem_r_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:215" *)
  wire mem_r_en;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:214" *)
  wire [9:0] mem_w_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:214" *)
  wire [31:0] mem_w_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:214" *)
  wire mem_w_en;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:209" *)
  input [9:0] r_addr;
  wire [9:0] r_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:210" *)
  output [31:0] r_data;
  wire [31:0] r_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:207" *)
  input [9:0] w_addr;
  wire [9:0] w_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:208" *)
  input [31:0] w_data;
  wire [31:0] w_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:206" *)
  input w_en;
  wire w_en;
  reg [31:0] mem [1023:0];
  initial begin
    mem[0] = 32'd0;
    mem[1] = 32'd0;
    mem[2] = 32'd0;
    mem[3] = 32'd0;
    mem[4] = 32'd0;
    mem[5] = 32'd0;
    mem[6] = 32'd0;
    mem[7] = 32'd0;
    mem[8] = 32'd0;
    mem[9] = 32'd0;
    mem[10] = 32'd0;
    mem[11] = 32'd0;
    mem[12] = 32'd0;
    mem[13] = 32'd0;
    mem[14] = 32'd0;
    mem[15] = 32'd0;
    mem[16] = 32'd0;
    mem[17] = 32'd0;
    mem[18] = 32'd0;
    mem[19] = 32'd0;
    mem[20] = 32'd0;
    mem[21] = 32'd0;
    mem[22] = 32'd0;
    mem[23] = 32'd0;
    mem[24] = 32'd0;
    mem[25] = 32'd0;
    mem[26] = 32'd0;
    mem[27] = 32'd0;
    mem[28] = 32'd0;
    mem[29] = 32'd0;
    mem[30] = 32'd0;
    mem[31] = 32'd0;
    mem[32] = 32'd0;
    mem[33] = 32'd0;
    mem[34] = 32'd0;
    mem[35] = 32'd0;
    mem[36] = 32'd0;
    mem[37] = 32'd0;
    mem[38] = 32'd0;
    mem[39] = 32'd0;
    mem[40] = 32'd0;
    mem[41] = 32'd0;
    mem[42] = 32'd0;
    mem[43] = 32'd0;
    mem[44] = 32'd0;
    mem[45] = 32'd0;
    mem[46] = 32'd0;
    mem[47] = 32'd0;
    mem[48] = 32'd0;
    mem[49] = 32'd0;
    mem[50] = 32'd0;
    mem[51] = 32'd0;
    mem[52] = 32'd0;
    mem[53] = 32'd0;
    mem[54] = 32'd0;
    mem[55] = 32'd0;
    mem[56] = 32'd0;
    mem[57] = 32'd0;
    mem[58] = 32'd0;
    mem[59] = 32'd0;
    mem[60] = 32'd0;
    mem[61] = 32'd0;
    mem[62] = 32'd0;
    mem[63] = 32'd0;
    mem[64] = 32'd0;
    mem[65] = 32'd0;
    mem[66] = 32'd0;
    mem[67] = 32'd0;
    mem[68] = 32'd0;
    mem[69] = 32'd0;
    mem[70] = 32'd0;
    mem[71] = 32'd0;
    mem[72] = 32'd0;
    mem[73] = 32'd0;
    mem[74] = 32'd0;
    mem[75] = 32'd0;
    mem[76] = 32'd0;
    mem[77] = 32'd0;
    mem[78] = 32'd0;
    mem[79] = 32'd0;
    mem[80] = 32'd0;
    mem[81] = 32'd0;
    mem[82] = 32'd0;
    mem[83] = 32'd0;
    mem[84] = 32'd0;
    mem[85] = 32'd0;
    mem[86] = 32'd0;
    mem[87] = 32'd0;
    mem[88] = 32'd0;
    mem[89] = 32'd0;
    mem[90] = 32'd0;
    mem[91] = 32'd0;
    mem[92] = 32'd0;
    mem[93] = 32'd0;
    mem[94] = 32'd0;
    mem[95] = 32'd0;
    mem[96] = 32'd0;
    mem[97] = 32'd0;
    mem[98] = 32'd0;
    mem[99] = 32'd0;
    mem[100] = 32'd0;
    mem[101] = 32'd0;
    mem[102] = 32'd0;
    mem[103] = 32'd0;
    mem[104] = 32'd0;
    mem[105] = 32'd0;
    mem[106] = 32'd0;
    mem[107] = 32'd0;
    mem[108] = 32'd0;
    mem[109] = 32'd0;
    mem[110] = 32'd0;
    mem[111] = 32'd0;
    mem[112] = 32'd0;
    mem[113] = 32'd0;
    mem[114] = 32'd0;
    mem[115] = 32'd0;
    mem[116] = 32'd0;
    mem[117] = 32'd0;
    mem[118] = 32'd0;
    mem[119] = 32'd0;
    mem[120] = 32'd0;
    mem[121] = 32'd0;
    mem[122] = 32'd0;
    mem[123] = 32'd0;
    mem[124] = 32'd0;
    mem[125] = 32'd0;
    mem[126] = 32'd0;
    mem[127] = 32'd0;
    mem[128] = 32'd0;
    mem[129] = 32'd0;
    mem[130] = 32'd0;
    mem[131] = 32'd0;
    mem[132] = 32'd0;
    mem[133] = 32'd0;
    mem[134] = 32'd0;
    mem[135] = 32'd0;
    mem[136] = 32'd0;
    mem[137] = 32'd0;
    mem[138] = 32'd0;
    mem[139] = 32'd0;
    mem[140] = 32'd0;
    mem[141] = 32'd0;
    mem[142] = 32'd0;
    mem[143] = 32'd0;
    mem[144] = 32'd0;
    mem[145] = 32'd0;
    mem[146] = 32'd0;
    mem[147] = 32'd0;
    mem[148] = 32'd0;
    mem[149] = 32'd0;
    mem[150] = 32'd0;
    mem[151] = 32'd0;
    mem[152] = 32'd0;
    mem[153] = 32'd0;
    mem[154] = 32'd0;
    mem[155] = 32'd0;
    mem[156] = 32'd0;
    mem[157] = 32'd0;
    mem[158] = 32'd0;
    mem[159] = 32'd0;
    mem[160] = 32'd0;
    mem[161] = 32'd0;
    mem[162] = 32'd0;
    mem[163] = 32'd0;
    mem[164] = 32'd0;
    mem[165] = 32'd0;
    mem[166] = 32'd0;
    mem[167] = 32'd0;
    mem[168] = 32'd0;
    mem[169] = 32'd0;
    mem[170] = 32'd0;
    mem[171] = 32'd0;
    mem[172] = 32'd0;
    mem[173] = 32'd0;
    mem[174] = 32'd0;
    mem[175] = 32'd0;
    mem[176] = 32'd0;
    mem[177] = 32'd0;
    mem[178] = 32'd0;
    mem[179] = 32'd0;
    mem[180] = 32'd0;
    mem[181] = 32'd0;
    mem[182] = 32'd0;
    mem[183] = 32'd0;
    mem[184] = 32'd0;
    mem[185] = 32'd0;
    mem[186] = 32'd0;
    mem[187] = 32'd0;
    mem[188] = 32'd0;
    mem[189] = 32'd0;
    mem[190] = 32'd0;
    mem[191] = 32'd0;
    mem[192] = 32'd0;
    mem[193] = 32'd0;
    mem[194] = 32'd0;
    mem[195] = 32'd0;
    mem[196] = 32'd0;
    mem[197] = 32'd0;
    mem[198] = 32'd0;
    mem[199] = 32'd0;
    mem[200] = 32'd0;
    mem[201] = 32'd0;
    mem[202] = 32'd0;
    mem[203] = 32'd0;
    mem[204] = 32'd0;
    mem[205] = 32'd0;
    mem[206] = 32'd0;
    mem[207] = 32'd0;
    mem[208] = 32'd0;
    mem[209] = 32'd0;
    mem[210] = 32'd0;
    mem[211] = 32'd0;
    mem[212] = 32'd0;
    mem[213] = 32'd0;
    mem[214] = 32'd0;
    mem[215] = 32'd0;
    mem[216] = 32'd0;
    mem[217] = 32'd0;
    mem[218] = 32'd0;
    mem[219] = 32'd0;
    mem[220] = 32'd0;
    mem[221] = 32'd0;
    mem[222] = 32'd0;
    mem[223] = 32'd0;
    mem[224] = 32'd0;
    mem[225] = 32'd0;
    mem[226] = 32'd0;
    mem[227] = 32'd0;
    mem[228] = 32'd0;
    mem[229] = 32'd0;
    mem[230] = 32'd0;
    mem[231] = 32'd0;
    mem[232] = 32'd0;
    mem[233] = 32'd0;
    mem[234] = 32'd0;
    mem[235] = 32'd0;
    mem[236] = 32'd0;
    mem[237] = 32'd0;
    mem[238] = 32'd0;
    mem[239] = 32'd0;
    mem[240] = 32'd0;
    mem[241] = 32'd0;
    mem[242] = 32'd0;
    mem[243] = 32'd0;
    mem[244] = 32'd0;
    mem[245] = 32'd0;
    mem[246] = 32'd0;
    mem[247] = 32'd0;
    mem[248] = 32'd0;
    mem[249] = 32'd0;
    mem[250] = 32'd0;
    mem[251] = 32'd0;
    mem[252] = 32'd0;
    mem[253] = 32'd0;
    mem[254] = 32'd0;
    mem[255] = 32'd0;
    mem[256] = 32'd0;
    mem[257] = 32'd0;
    mem[258] = 32'd0;
    mem[259] = 32'd0;
    mem[260] = 32'd0;
    mem[261] = 32'd0;
    mem[262] = 32'd0;
    mem[263] = 32'd0;
    mem[264] = 32'd0;
    mem[265] = 32'd0;
    mem[266] = 32'd0;
    mem[267] = 32'd0;
    mem[268] = 32'd0;
    mem[269] = 32'd0;
    mem[270] = 32'd0;
    mem[271] = 32'd0;
    mem[272] = 32'd0;
    mem[273] = 32'd0;
    mem[274] = 32'd0;
    mem[275] = 32'd0;
    mem[276] = 32'd0;
    mem[277] = 32'd0;
    mem[278] = 32'd0;
    mem[279] = 32'd0;
    mem[280] = 32'd0;
    mem[281] = 32'd0;
    mem[282] = 32'd0;
    mem[283] = 32'd0;
    mem[284] = 32'd0;
    mem[285] = 32'd0;
    mem[286] = 32'd0;
    mem[287] = 32'd0;
    mem[288] = 32'd0;
    mem[289] = 32'd0;
    mem[290] = 32'd0;
    mem[291] = 32'd0;
    mem[292] = 32'd0;
    mem[293] = 32'd0;
    mem[294] = 32'd0;
    mem[295] = 32'd0;
    mem[296] = 32'd0;
    mem[297] = 32'd0;
    mem[298] = 32'd0;
    mem[299] = 32'd0;
    mem[300] = 32'd0;
    mem[301] = 32'd0;
    mem[302] = 32'd0;
    mem[303] = 32'd0;
    mem[304] = 32'd0;
    mem[305] = 32'd0;
    mem[306] = 32'd0;
    mem[307] = 32'd0;
    mem[308] = 32'd0;
    mem[309] = 32'd0;
    mem[310] = 32'd0;
    mem[311] = 32'd0;
    mem[312] = 32'd0;
    mem[313] = 32'd0;
    mem[314] = 32'd0;
    mem[315] = 32'd0;
    mem[316] = 32'd0;
    mem[317] = 32'd0;
    mem[318] = 32'd0;
    mem[319] = 32'd0;
    mem[320] = 32'd0;
    mem[321] = 32'd0;
    mem[322] = 32'd0;
    mem[323] = 32'd0;
    mem[324] = 32'd0;
    mem[325] = 32'd0;
    mem[326] = 32'd0;
    mem[327] = 32'd0;
    mem[328] = 32'd0;
    mem[329] = 32'd0;
    mem[330] = 32'd0;
    mem[331] = 32'd0;
    mem[332] = 32'd0;
    mem[333] = 32'd0;
    mem[334] = 32'd0;
    mem[335] = 32'd0;
    mem[336] = 32'd0;
    mem[337] = 32'd0;
    mem[338] = 32'd0;
    mem[339] = 32'd0;
    mem[340] = 32'd0;
    mem[341] = 32'd0;
    mem[342] = 32'd0;
    mem[343] = 32'd0;
    mem[344] = 32'd0;
    mem[345] = 32'd0;
    mem[346] = 32'd0;
    mem[347] = 32'd0;
    mem[348] = 32'd0;
    mem[349] = 32'd0;
    mem[350] = 32'd0;
    mem[351] = 32'd0;
    mem[352] = 32'd0;
    mem[353] = 32'd0;
    mem[354] = 32'd0;
    mem[355] = 32'd0;
    mem[356] = 32'd0;
    mem[357] = 32'd0;
    mem[358] = 32'd0;
    mem[359] = 32'd0;
    mem[360] = 32'd0;
    mem[361] = 32'd0;
    mem[362] = 32'd0;
    mem[363] = 32'd0;
    mem[364] = 32'd0;
    mem[365] = 32'd0;
    mem[366] = 32'd0;
    mem[367] = 32'd0;
    mem[368] = 32'd0;
    mem[369] = 32'd0;
    mem[370] = 32'd0;
    mem[371] = 32'd0;
    mem[372] = 32'd0;
    mem[373] = 32'd0;
    mem[374] = 32'd0;
    mem[375] = 32'd0;
    mem[376] = 32'd0;
    mem[377] = 32'd0;
    mem[378] = 32'd0;
    mem[379] = 32'd0;
    mem[380] = 32'd0;
    mem[381] = 32'd0;
    mem[382] = 32'd0;
    mem[383] = 32'd0;
    mem[384] = 32'd0;
    mem[385] = 32'd0;
    mem[386] = 32'd0;
    mem[387] = 32'd0;
    mem[388] = 32'd0;
    mem[389] = 32'd0;
    mem[390] = 32'd0;
    mem[391] = 32'd0;
    mem[392] = 32'd0;
    mem[393] = 32'd0;
    mem[394] = 32'd0;
    mem[395] = 32'd0;
    mem[396] = 32'd0;
    mem[397] = 32'd0;
    mem[398] = 32'd0;
    mem[399] = 32'd0;
    mem[400] = 32'd0;
    mem[401] = 32'd0;
    mem[402] = 32'd0;
    mem[403] = 32'd0;
    mem[404] = 32'd0;
    mem[405] = 32'd0;
    mem[406] = 32'd0;
    mem[407] = 32'd0;
    mem[408] = 32'd0;
    mem[409] = 32'd0;
    mem[410] = 32'd0;
    mem[411] = 32'd0;
    mem[412] = 32'd0;
    mem[413] = 32'd0;
    mem[414] = 32'd0;
    mem[415] = 32'd0;
    mem[416] = 32'd0;
    mem[417] = 32'd0;
    mem[418] = 32'd0;
    mem[419] = 32'd0;
    mem[420] = 32'd0;
    mem[421] = 32'd0;
    mem[422] = 32'd0;
    mem[423] = 32'd0;
    mem[424] = 32'd0;
    mem[425] = 32'd0;
    mem[426] = 32'd0;
    mem[427] = 32'd0;
    mem[428] = 32'd0;
    mem[429] = 32'd0;
    mem[430] = 32'd0;
    mem[431] = 32'd0;
    mem[432] = 32'd0;
    mem[433] = 32'd0;
    mem[434] = 32'd0;
    mem[435] = 32'd0;
    mem[436] = 32'd0;
    mem[437] = 32'd0;
    mem[438] = 32'd0;
    mem[439] = 32'd0;
    mem[440] = 32'd0;
    mem[441] = 32'd0;
    mem[442] = 32'd0;
    mem[443] = 32'd0;
    mem[444] = 32'd0;
    mem[445] = 32'd0;
    mem[446] = 32'd0;
    mem[447] = 32'd0;
    mem[448] = 32'd0;
    mem[449] = 32'd0;
    mem[450] = 32'd0;
    mem[451] = 32'd0;
    mem[452] = 32'd0;
    mem[453] = 32'd0;
    mem[454] = 32'd0;
    mem[455] = 32'd0;
    mem[456] = 32'd0;
    mem[457] = 32'd0;
    mem[458] = 32'd0;
    mem[459] = 32'd0;
    mem[460] = 32'd0;
    mem[461] = 32'd0;
    mem[462] = 32'd0;
    mem[463] = 32'd0;
    mem[464] = 32'd0;
    mem[465] = 32'd0;
    mem[466] = 32'd0;
    mem[467] = 32'd0;
    mem[468] = 32'd0;
    mem[469] = 32'd0;
    mem[470] = 32'd0;
    mem[471] = 32'd0;
    mem[472] = 32'd0;
    mem[473] = 32'd0;
    mem[474] = 32'd0;
    mem[475] = 32'd0;
    mem[476] = 32'd0;
    mem[477] = 32'd0;
    mem[478] = 32'd0;
    mem[479] = 32'd0;
    mem[480] = 32'd0;
    mem[481] = 32'd0;
    mem[482] = 32'd0;
    mem[483] = 32'd0;
    mem[484] = 32'd0;
    mem[485] = 32'd0;
    mem[486] = 32'd0;
    mem[487] = 32'd0;
    mem[488] = 32'd0;
    mem[489] = 32'd0;
    mem[490] = 32'd0;
    mem[491] = 32'd0;
    mem[492] = 32'd0;
    mem[493] = 32'd0;
    mem[494] = 32'd0;
    mem[495] = 32'd0;
    mem[496] = 32'd0;
    mem[497] = 32'd0;
    mem[498] = 32'd0;
    mem[499] = 32'd0;
    mem[500] = 32'd0;
    mem[501] = 32'd0;
    mem[502] = 32'd0;
    mem[503] = 32'd0;
    mem[504] = 32'd0;
    mem[505] = 32'd0;
    mem[506] = 32'd0;
    mem[507] = 32'd0;
    mem[508] = 32'd0;
    mem[509] = 32'd0;
    mem[510] = 32'd0;
    mem[511] = 32'd0;
    mem[512] = 32'd0;
    mem[513] = 32'd0;
    mem[514] = 32'd0;
    mem[515] = 32'd0;
    mem[516] = 32'd0;
    mem[517] = 32'd0;
    mem[518] = 32'd0;
    mem[519] = 32'd0;
    mem[520] = 32'd0;
    mem[521] = 32'd0;
    mem[522] = 32'd0;
    mem[523] = 32'd0;
    mem[524] = 32'd0;
    mem[525] = 32'd0;
    mem[526] = 32'd0;
    mem[527] = 32'd0;
    mem[528] = 32'd0;
    mem[529] = 32'd0;
    mem[530] = 32'd0;
    mem[531] = 32'd0;
    mem[532] = 32'd0;
    mem[533] = 32'd0;
    mem[534] = 32'd0;
    mem[535] = 32'd0;
    mem[536] = 32'd0;
    mem[537] = 32'd0;
    mem[538] = 32'd0;
    mem[539] = 32'd0;
    mem[540] = 32'd0;
    mem[541] = 32'd0;
    mem[542] = 32'd0;
    mem[543] = 32'd0;
    mem[544] = 32'd0;
    mem[545] = 32'd0;
    mem[546] = 32'd0;
    mem[547] = 32'd0;
    mem[548] = 32'd0;
    mem[549] = 32'd0;
    mem[550] = 32'd0;
    mem[551] = 32'd0;
    mem[552] = 32'd0;
    mem[553] = 32'd0;
    mem[554] = 32'd0;
    mem[555] = 32'd0;
    mem[556] = 32'd0;
    mem[557] = 32'd0;
    mem[558] = 32'd0;
    mem[559] = 32'd0;
    mem[560] = 32'd0;
    mem[561] = 32'd0;
    mem[562] = 32'd0;
    mem[563] = 32'd0;
    mem[564] = 32'd0;
    mem[565] = 32'd0;
    mem[566] = 32'd0;
    mem[567] = 32'd0;
    mem[568] = 32'd0;
    mem[569] = 32'd0;
    mem[570] = 32'd0;
    mem[571] = 32'd0;
    mem[572] = 32'd0;
    mem[573] = 32'd0;
    mem[574] = 32'd0;
    mem[575] = 32'd0;
    mem[576] = 32'd0;
    mem[577] = 32'd0;
    mem[578] = 32'd0;
    mem[579] = 32'd0;
    mem[580] = 32'd0;
    mem[581] = 32'd0;
    mem[582] = 32'd0;
    mem[583] = 32'd0;
    mem[584] = 32'd0;
    mem[585] = 32'd0;
    mem[586] = 32'd0;
    mem[587] = 32'd0;
    mem[588] = 32'd0;
    mem[589] = 32'd0;
    mem[590] = 32'd0;
    mem[591] = 32'd0;
    mem[592] = 32'd0;
    mem[593] = 32'd0;
    mem[594] = 32'd0;
    mem[595] = 32'd0;
    mem[596] = 32'd0;
    mem[597] = 32'd0;
    mem[598] = 32'd0;
    mem[599] = 32'd0;
    mem[600] = 32'd0;
    mem[601] = 32'd0;
    mem[602] = 32'd0;
    mem[603] = 32'd0;
    mem[604] = 32'd0;
    mem[605] = 32'd0;
    mem[606] = 32'd0;
    mem[607] = 32'd0;
    mem[608] = 32'd0;
    mem[609] = 32'd0;
    mem[610] = 32'd0;
    mem[611] = 32'd0;
    mem[612] = 32'd0;
    mem[613] = 32'd0;
    mem[614] = 32'd0;
    mem[615] = 32'd0;
    mem[616] = 32'd0;
    mem[617] = 32'd0;
    mem[618] = 32'd0;
    mem[619] = 32'd0;
    mem[620] = 32'd0;
    mem[621] = 32'd0;
    mem[622] = 32'd0;
    mem[623] = 32'd0;
    mem[624] = 32'd0;
    mem[625] = 32'd0;
    mem[626] = 32'd0;
    mem[627] = 32'd0;
    mem[628] = 32'd0;
    mem[629] = 32'd0;
    mem[630] = 32'd0;
    mem[631] = 32'd0;
    mem[632] = 32'd0;
    mem[633] = 32'd0;
    mem[634] = 32'd0;
    mem[635] = 32'd0;
    mem[636] = 32'd0;
    mem[637] = 32'd0;
    mem[638] = 32'd0;
    mem[639] = 32'd0;
    mem[640] = 32'd0;
    mem[641] = 32'd0;
    mem[642] = 32'd0;
    mem[643] = 32'd0;
    mem[644] = 32'd0;
    mem[645] = 32'd0;
    mem[646] = 32'd0;
    mem[647] = 32'd0;
    mem[648] = 32'd0;
    mem[649] = 32'd0;
    mem[650] = 32'd0;
    mem[651] = 32'd0;
    mem[652] = 32'd0;
    mem[653] = 32'd0;
    mem[654] = 32'd0;
    mem[655] = 32'd0;
    mem[656] = 32'd0;
    mem[657] = 32'd0;
    mem[658] = 32'd0;
    mem[659] = 32'd0;
    mem[660] = 32'd0;
    mem[661] = 32'd0;
    mem[662] = 32'd0;
    mem[663] = 32'd0;
    mem[664] = 32'd0;
    mem[665] = 32'd0;
    mem[666] = 32'd0;
    mem[667] = 32'd0;
    mem[668] = 32'd0;
    mem[669] = 32'd0;
    mem[670] = 32'd0;
    mem[671] = 32'd0;
    mem[672] = 32'd0;
    mem[673] = 32'd0;
    mem[674] = 32'd0;
    mem[675] = 32'd0;
    mem[676] = 32'd0;
    mem[677] = 32'd0;
    mem[678] = 32'd0;
    mem[679] = 32'd0;
    mem[680] = 32'd0;
    mem[681] = 32'd0;
    mem[682] = 32'd0;
    mem[683] = 32'd0;
    mem[684] = 32'd0;
    mem[685] = 32'd0;
    mem[686] = 32'd0;
    mem[687] = 32'd0;
    mem[688] = 32'd0;
    mem[689] = 32'd0;
    mem[690] = 32'd0;
    mem[691] = 32'd0;
    mem[692] = 32'd0;
    mem[693] = 32'd0;
    mem[694] = 32'd0;
    mem[695] = 32'd0;
    mem[696] = 32'd0;
    mem[697] = 32'd0;
    mem[698] = 32'd0;
    mem[699] = 32'd0;
    mem[700] = 32'd0;
    mem[701] = 32'd0;
    mem[702] = 32'd0;
    mem[703] = 32'd0;
    mem[704] = 32'd0;
    mem[705] = 32'd0;
    mem[706] = 32'd0;
    mem[707] = 32'd0;
    mem[708] = 32'd0;
    mem[709] = 32'd0;
    mem[710] = 32'd0;
    mem[711] = 32'd0;
    mem[712] = 32'd0;
    mem[713] = 32'd0;
    mem[714] = 32'd0;
    mem[715] = 32'd0;
    mem[716] = 32'd0;
    mem[717] = 32'd0;
    mem[718] = 32'd0;
    mem[719] = 32'd0;
    mem[720] = 32'd0;
    mem[721] = 32'd0;
    mem[722] = 32'd0;
    mem[723] = 32'd0;
    mem[724] = 32'd0;
    mem[725] = 32'd0;
    mem[726] = 32'd0;
    mem[727] = 32'd0;
    mem[728] = 32'd0;
    mem[729] = 32'd0;
    mem[730] = 32'd0;
    mem[731] = 32'd0;
    mem[732] = 32'd0;
    mem[733] = 32'd0;
    mem[734] = 32'd0;
    mem[735] = 32'd0;
    mem[736] = 32'd0;
    mem[737] = 32'd0;
    mem[738] = 32'd0;
    mem[739] = 32'd0;
    mem[740] = 32'd0;
    mem[741] = 32'd0;
    mem[742] = 32'd0;
    mem[743] = 32'd0;
    mem[744] = 32'd0;
    mem[745] = 32'd0;
    mem[746] = 32'd0;
    mem[747] = 32'd0;
    mem[748] = 32'd0;
    mem[749] = 32'd0;
    mem[750] = 32'd0;
    mem[751] = 32'd0;
    mem[752] = 32'd0;
    mem[753] = 32'd0;
    mem[754] = 32'd0;
    mem[755] = 32'd0;
    mem[756] = 32'd0;
    mem[757] = 32'd0;
    mem[758] = 32'd0;
    mem[759] = 32'd0;
    mem[760] = 32'd0;
    mem[761] = 32'd0;
    mem[762] = 32'd0;
    mem[763] = 32'd0;
    mem[764] = 32'd0;
    mem[765] = 32'd0;
    mem[766] = 32'd0;
    mem[767] = 32'd0;
    mem[768] = 32'd0;
    mem[769] = 32'd0;
    mem[770] = 32'd0;
    mem[771] = 32'd0;
    mem[772] = 32'd0;
    mem[773] = 32'd0;
    mem[774] = 32'd0;
    mem[775] = 32'd0;
    mem[776] = 32'd0;
    mem[777] = 32'd0;
    mem[778] = 32'd0;
    mem[779] = 32'd0;
    mem[780] = 32'd0;
    mem[781] = 32'd0;
    mem[782] = 32'd0;
    mem[783] = 32'd0;
    mem[784] = 32'd0;
    mem[785] = 32'd0;
    mem[786] = 32'd0;
    mem[787] = 32'd0;
    mem[788] = 32'd0;
    mem[789] = 32'd0;
    mem[790] = 32'd0;
    mem[791] = 32'd0;
    mem[792] = 32'd0;
    mem[793] = 32'd0;
    mem[794] = 32'd0;
    mem[795] = 32'd0;
    mem[796] = 32'd0;
    mem[797] = 32'd0;
    mem[798] = 32'd0;
    mem[799] = 32'd0;
    mem[800] = 32'd0;
    mem[801] = 32'd0;
    mem[802] = 32'd0;
    mem[803] = 32'd0;
    mem[804] = 32'd0;
    mem[805] = 32'd0;
    mem[806] = 32'd0;
    mem[807] = 32'd0;
    mem[808] = 32'd0;
    mem[809] = 32'd0;
    mem[810] = 32'd0;
    mem[811] = 32'd0;
    mem[812] = 32'd0;
    mem[813] = 32'd0;
    mem[814] = 32'd0;
    mem[815] = 32'd0;
    mem[816] = 32'd0;
    mem[817] = 32'd0;
    mem[818] = 32'd0;
    mem[819] = 32'd0;
    mem[820] = 32'd0;
    mem[821] = 32'd0;
    mem[822] = 32'd0;
    mem[823] = 32'd0;
    mem[824] = 32'd0;
    mem[825] = 32'd0;
    mem[826] = 32'd0;
    mem[827] = 32'd0;
    mem[828] = 32'd0;
    mem[829] = 32'd0;
    mem[830] = 32'd0;
    mem[831] = 32'd0;
    mem[832] = 32'd0;
    mem[833] = 32'd0;
    mem[834] = 32'd0;
    mem[835] = 32'd0;
    mem[836] = 32'd0;
    mem[837] = 32'd0;
    mem[838] = 32'd0;
    mem[839] = 32'd0;
    mem[840] = 32'd0;
    mem[841] = 32'd0;
    mem[842] = 32'd0;
    mem[843] = 32'd0;
    mem[844] = 32'd0;
    mem[845] = 32'd0;
    mem[846] = 32'd0;
    mem[847] = 32'd0;
    mem[848] = 32'd0;
    mem[849] = 32'd0;
    mem[850] = 32'd0;
    mem[851] = 32'd0;
    mem[852] = 32'd0;
    mem[853] = 32'd0;
    mem[854] = 32'd0;
    mem[855] = 32'd0;
    mem[856] = 32'd0;
    mem[857] = 32'd0;
    mem[858] = 32'd0;
    mem[859] = 32'd0;
    mem[860] = 32'd0;
    mem[861] = 32'd0;
    mem[862] = 32'd0;
    mem[863] = 32'd0;
    mem[864] = 32'd0;
    mem[865] = 32'd0;
    mem[866] = 32'd0;
    mem[867] = 32'd0;
    mem[868] = 32'd0;
    mem[869] = 32'd0;
    mem[870] = 32'd0;
    mem[871] = 32'd0;
    mem[872] = 32'd0;
    mem[873] = 32'd0;
    mem[874] = 32'd0;
    mem[875] = 32'd0;
    mem[876] = 32'd0;
    mem[877] = 32'd0;
    mem[878] = 32'd0;
    mem[879] = 32'd0;
    mem[880] = 32'd0;
    mem[881] = 32'd0;
    mem[882] = 32'd0;
    mem[883] = 32'd0;
    mem[884] = 32'd0;
    mem[885] = 32'd0;
    mem[886] = 32'd0;
    mem[887] = 32'd0;
    mem[888] = 32'd0;
    mem[889] = 32'd0;
    mem[890] = 32'd0;
    mem[891] = 32'd0;
    mem[892] = 32'd0;
    mem[893] = 32'd0;
    mem[894] = 32'd0;
    mem[895] = 32'd0;
    mem[896] = 32'd0;
    mem[897] = 32'd0;
    mem[898] = 32'd0;
    mem[899] = 32'd0;
    mem[900] = 32'd0;
    mem[901] = 32'd0;
    mem[902] = 32'd0;
    mem[903] = 32'd0;
    mem[904] = 32'd0;
    mem[905] = 32'd0;
    mem[906] = 32'd0;
    mem[907] = 32'd0;
    mem[908] = 32'd0;
    mem[909] = 32'd0;
    mem[910] = 32'd0;
    mem[911] = 32'd0;
    mem[912] = 32'd0;
    mem[913] = 32'd0;
    mem[914] = 32'd0;
    mem[915] = 32'd0;
    mem[916] = 32'd0;
    mem[917] = 32'd0;
    mem[918] = 32'd0;
    mem[919] = 32'd0;
    mem[920] = 32'd0;
    mem[921] = 32'd0;
    mem[922] = 32'd0;
    mem[923] = 32'd0;
    mem[924] = 32'd0;
    mem[925] = 32'd0;
    mem[926] = 32'd0;
    mem[927] = 32'd0;
    mem[928] = 32'd0;
    mem[929] = 32'd0;
    mem[930] = 32'd0;
    mem[931] = 32'd0;
    mem[932] = 32'd0;
    mem[933] = 32'd0;
    mem[934] = 32'd0;
    mem[935] = 32'd0;
    mem[936] = 32'd0;
    mem[937] = 32'd0;
    mem[938] = 32'd0;
    mem[939] = 32'd0;
    mem[940] = 32'd0;
    mem[941] = 32'd0;
    mem[942] = 32'd0;
    mem[943] = 32'd0;
    mem[944] = 32'd0;
    mem[945] = 32'd0;
    mem[946] = 32'd0;
    mem[947] = 32'd0;
    mem[948] = 32'd0;
    mem[949] = 32'd0;
    mem[950] = 32'd0;
    mem[951] = 32'd0;
    mem[952] = 32'd0;
    mem[953] = 32'd0;
    mem[954] = 32'd0;
    mem[955] = 32'd0;
    mem[956] = 32'd0;
    mem[957] = 32'd0;
    mem[958] = 32'd0;
    mem[959] = 32'd0;
    mem[960] = 32'd0;
    mem[961] = 32'd0;
    mem[962] = 32'd0;
    mem[963] = 32'd0;
    mem[964] = 32'd0;
    mem[965] = 32'd0;
    mem[966] = 32'd0;
    mem[967] = 32'd0;
    mem[968] = 32'd0;
    mem[969] = 32'd0;
    mem[970] = 32'd0;
    mem[971] = 32'd0;
    mem[972] = 32'd0;
    mem[973] = 32'd0;
    mem[974] = 32'd0;
    mem[975] = 32'd0;
    mem[976] = 32'd0;
    mem[977] = 32'd0;
    mem[978] = 32'd0;
    mem[979] = 32'd0;
    mem[980] = 32'd0;
    mem[981] = 32'd0;
    mem[982] = 32'd0;
    mem[983] = 32'd0;
    mem[984] = 32'd0;
    mem[985] = 32'd0;
    mem[986] = 32'd0;
    mem[987] = 32'd0;
    mem[988] = 32'd0;
    mem[989] = 32'd0;
    mem[990] = 32'd0;
    mem[991] = 32'd0;
    mem[992] = 32'd0;
    mem[993] = 32'd0;
    mem[994] = 32'd0;
    mem[995] = 32'd0;
    mem[996] = 32'd0;
    mem[997] = 32'd0;
    mem[998] = 32'd0;
    mem[999] = 32'd0;
    mem[1000] = 32'd0;
    mem[1001] = 32'd0;
    mem[1002] = 32'd0;
    mem[1003] = 32'd0;
    mem[1004] = 32'd0;
    mem[1005] = 32'd0;
    mem[1006] = 32'd0;
    mem[1007] = 32'd0;
    mem[1008] = 32'd0;
    mem[1009] = 32'd0;
    mem[1010] = 32'd0;
    mem[1011] = 32'd0;
    mem[1012] = 32'd0;
    mem[1013] = 32'd0;
    mem[1014] = 32'd0;
    mem[1015] = 32'd0;
    mem[1016] = 32'd0;
    mem[1017] = 32'd0;
    mem[1018] = 32'd0;
    mem[1019] = 32'd0;
    mem[1020] = 32'd0;
    mem[1021] = 32'd0;
    mem[1022] = 32'd0;
    mem[1023] = 32'd0;
  end
  always @(posedge clk) begin
    if (mem_w_en)
      mem[mem_w_addr] <= mem_w_data;
  end
  reg [31:0] _0_;
  always @(posedge clk) begin
    _0_ <= mem[mem_r_addr];
  end
  assign mem_r_data = _0_;
  assign r_data = mem_r_data;
  assign mem_r_addr = r_addr;
  assign mem_r_en = 1'h1;
  assign mem_w_data = w_data;
  assign mem_w_addr = w_addr;
  assign mem_w_en = w_en;
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.f7buf" *)
(* generator = "Amaranth" *)
module f7buf(funct7, rst, clk, \output , start);
  reg \$auto$verilog_backend.cc:2097:dump_module$6  = 0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:175" *)
  wire [6:0] \$1 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:172" *)
  reg [6:0] captured = 7'h00;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:172" *)
  reg [6:0] \captured$next ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:50" *)
  input [6:0] funct7;
  wire [6:0] funct7;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:169" *)
  output [6:0] \output ;
  wire [6:0] \output ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:52" *)
  input start;
  wire start;
  assign \$1  = start ? (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:175" *) funct7 : captured;
  always @(posedge clk)
    captured <= \captured$next ;
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$6 ) begin end
    \captured$next  = captured;
    (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:173" *)
    casez (start)
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:173" */
      1'h1:
          \captured$next  = funct7;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \captured$next  = 7'h00;
    endcase
  end
  assign \output  = \$1 ;
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.seq.f_count" *)
(* generator = "Amaranth" *)
module f_count(clk, max, restart, en, done, rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$7  = 0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:63" *)
  wire [12:0] \$1 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:62" *)
  wire [12:0] \$10 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:67" *)
  wire \$12 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:63" *)
  wire [12:0] \$2 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:63" *)
  wire [12:0] \$4 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:62" *)
  wire [12:0] \$5 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:63" *)
  wire \$7 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:61" *)
  reg [11:0] count = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:61" *)
  reg [11:0] \count$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:57" *)
  output done;
  reg done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:56" *)
  input en;
  wire en;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:58" *)
  input [11:0] max;
  wire [11:0] max;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:55" *)
  input restart;
  wire restart;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  assign \$10  = max - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:62" *) 1'h1;
  assign \$12  = count == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:67" *) \$10 ;
  always @(posedge clk)
    count <= \count$next ;
  assign \$2  = count + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:63" *) 1'h1;
  assign \$5  = max - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:62" *) 1'h1;
  assign \$7  = count == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:63" *) \$5 ;
  assign \$4  = \$7  ? (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:63" *) 13'h0000 : \$2 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$7 ) begin end
    \count$next  = count;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:65" *)
    casez (en)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:65" */
      1'h1:
          \count$next  = \$4 [11:0];
    endcase
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:69" *)
    casez (restart)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:69" */
      1'h1:
          \count$next  = 12'h000;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \count$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$7 ) begin end
    done = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:65" *)
    casez (en)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:65" */
      1'h1:
          done = \$12 ;
    endcase
  end
  assign \$1  = \$4 ;
endmodule

(* \amaranth.hierarchy  = "Cfu.fallback1" *)
(* generator = "Amaranth" *)
module fallback1(done, in0, in1, \output );
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:53" *)
  output done;
  wire done;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:48" *)
  input [31:0] in0;
  wire [31:0] in0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:54" *)
  wire [31:0] in0s;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:49" *)
  input [31:0] in1;
  wire [31:0] in1;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:55" *)
  wire [31:0] in1s;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:51" *)
  output [31:0] \output ;
  wire [31:0] \output ;
  assign in1s = in1;
  assign in0s = in0;
  assign done = 1'h1;
  assign \output  = in0;
endmodule

(* \amaranth.hierarchy  = "Cfu.fallback2" *)
(* generator = "Amaranth" *)
module fallback2(done, in0, in1, \output );
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:53" *)
  output done;
  wire done;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:48" *)
  input [31:0] in0;
  wire [31:0] in0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:54" *)
  wire [31:0] in0s;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:49" *)
  input [31:0] in1;
  wire [31:0] in1;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:55" *)
  wire [31:0] in1s;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:51" *)
  output [31:0] \output ;
  wire [31:0] \output ;
  assign in1s = in1;
  assign in0s = in0;
  assign done = 1'h1;
  assign \output  = in0;
endmodule

(* \amaranth.hierarchy  = "Cfu.fallback3" *)
(* generator = "Amaranth" *)
module fallback3(done, in0, in1, \output );
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:53" *)
  output done;
  wire done;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:48" *)
  input [31:0] in0;
  wire [31:0] in0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:54" *)
  wire [31:0] in0s;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:49" *)
  input [31:0] in1;
  wire [31:0] in1;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:55" *)
  wire [31:0] in1s;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:51" *)
  output [31:0] \output ;
  wire [31:0] \output ;
  assign in1s = in1;
  assign in0s = in0;
  assign done = 1'h1;
  assign \output  = in0;
endmodule

(* \amaranth.hierarchy  = "Cfu.fallback4" *)
(* generator = "Amaranth" *)
module fallback4(done, in0, in1, \output );
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:53" *)
  output done;
  wire done;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:48" *)
  input [31:0] in0;
  wire [31:0] in0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:54" *)
  wire [31:0] in0s;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:49" *)
  input [31:0] in1;
  wire [31:0] in1;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:55" *)
  wire [31:0] in1s;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:51" *)
  output [31:0] \output ;
  wire [31:0] \output ;
  assign in1s = in1;
  assign in0s = in0;
  assign done = 1'h1;
  assign \output  = in0;
endmodule

(* \amaranth.hierarchy  = "Cfu.fallback5" *)
(* generator = "Amaranth" *)
module fallback5(done, in0, in1, \output );
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:53" *)
  output done;
  wire done;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:48" *)
  input [31:0] in0;
  wire [31:0] in0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:54" *)
  wire [31:0] in0s;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:49" *)
  input [31:0] in1;
  wire [31:0] in1;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:55" *)
  wire [31:0] in1s;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:51" *)
  output [31:0] \output ;
  wire [31:0] \output ;
  assign in1s = in1;
  assign in0s = in0;
  assign done = 1'h1;
  assign \output  = in0;
endmodule

(* \amaranth.hierarchy  = "Cfu.fallback6" *)
(* generator = "Amaranth" *)
module fallback6(done, in0, in1, \output );
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:53" *)
  output done;
  wire done;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:48" *)
  input [31:0] in0;
  wire [31:0] in0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:54" *)
  wire [31:0] in0s;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:49" *)
  input [31:0] in1;
  wire [31:0] in1;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:55" *)
  wire [31:0] in1s;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:51" *)
  output [31:0] \output ;
  wire [31:0] \output ;
  assign in1s = in1;
  assign in0s = in0;
  assign done = 1'h1;
  assign \output  = in0;
endmodule

(* \amaranth.hierarchy  = "Cfu.fallback7" *)
(* generator = "Amaranth" *)
module fallback7(done, in0, in1, \output );
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:53" *)
  output done;
  wire done;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:48" *)
  input [31:0] in0;
  wire [31:0] in0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:54" *)
  wire [31:0] in0s;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:49" *)
  input [31:0] in1;
  wire [31:0] in1;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:55" *)
  wire [31:0] in1s;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:51" *)
  output [31:0] \output ;
  wire [31:0] \output ;
  assign in1s = in1;
  assign in0s = in0;
  assign done = 1'h1;
  assign \output  = in0;
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0" *)
(* generator = "Amaranth" *)
module fn0(done, start, in0, in1, funct7, rst, clk, \output );
  reg \$auto$verilog_backend.cc:2097:dump_module$8  = 0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$101 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$103 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$105 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$107 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$109 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$112 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$115 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$118 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$121 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$124 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$126 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$128 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$131 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$134 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$137 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$140 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$143 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$146 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$149 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$152 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$155 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$158 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$161 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$164 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$167 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$170 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$173 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$177 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$180 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$34 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$36 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$38 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$40 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$42 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$44 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$46 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$48 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$50 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$52 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$54 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$56 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$58 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$60 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$62 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$64 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$66 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$68 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mnv2_cfu.py:164" *)
  wire \$70 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mnv2_cfu.py:166" *)
  wire \$72 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mnv2_cfu.py:168" *)
  wire \$74 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mnv2_cfu.py:109" *)
  wire \$76 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mnv2_cfu.py:147" *)
  wire \$78 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mnv2_cfu.py:297" *)
  wire \$80 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mnv2_cfu.py:298" *)
  wire \$82 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mnv2_cfu.py:313" *)
  wire \$84 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$87 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$89 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$91 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$93 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$95 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$97 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
  wire \$99 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:83" *)
  wire [31:0] FIFO_r_data;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:85" *)
  wire FIFO_r_en;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:84" *)
  wire FIFO_r_rdy;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:78" *)
  reg [31:0] FIFO_w_data;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:80" *)
  wire FIFO_w_en;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:81" *)
  wire [9:0] FIFO_w_level;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:100" *)
  wire [23:0] \acc_$signal ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:100" *)
  wire [23:0] \acc_$signal$19 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:100" *)
  wire [23:0] \acc_$signal$20 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:100" *)
  wire [23:0] \acc_$signal$21 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:100" *)
  wire [23:0] \acc_$signal$22 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:100" *)
  wire [23:0] \acc_$signal$23 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:100" *)
  wire [23:0] \acc_$signal$24 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:100" *)
  wire [23:0] \acc_$signal$25 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:100" *)
  wire [23:0] \acc_$signal$26 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:100" *)
  wire [23:0] \acc_$signal$27 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:100" *)
  wire [23:0] \acc_$signal$28 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:100" *)
  wire [23:0] \acc_$signal$29 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:100" *)
  wire [23:0] \acc_$signal$30 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:100" *)
  wire [23:0] \acc_$signal$31 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:100" *)
  wire [23:0] \acc_$signal$32 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:100" *)
  wire [23:0] \acc_$signal$33 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:99" *)
  wire acc_add_en;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:102" *)
  wire acc_clear;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:104" *)
  wire [31:0] acc_result_0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:104" *)
  wire [31:0] acc_result_1;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:104" *)
  wire [31:0] acc_result_2;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:104" *)
  wire [31:0] acc_result_3;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:101" *)
  wire acc_switch_PorD;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:202" *)
  wire [7:0] btw_in_value;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:204" *)
  wire [31:0] btw_result;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:201" *)
  wire btw_shift_en;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:53" *)
  output done;
  reg done;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:169" *)
  wire [6:0] f7buf_output;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:50" *)
  input [6:0] funct7;
  wire [6:0] funct7;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:179" *)
  wire [191:0] fvf_data;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:173" *)
  wire [10:0] fvf_limit;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:177" *)
  wire [8:0] fvf_mem_addr_0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:177" *)
  wire [8:0] fvf_mem_addr_1;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:177" *)
  wire [8:0] fvf_mem_addr_2;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:177" *)
  wire [8:0] fvf_mem_addr_3;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:178" *)
  wire [31:0] fvf_mem_data_0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:178" *)
  wire [31:0] fvf_mem_data_1;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:178" *)
  wire [31:0] fvf_mem_data_2;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:178" *)
  wire [31:0] fvf_mem_data_3;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:180" *)
  wire fvf_next;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:182" *)
  wire fvf_restart;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:183" *)
  wire fvf_switch_PorD;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:181" *)
  wire fvf_updated;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mnv2_cfu.py:114" *)
  wire fvg_next;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:48" *)
  input [31:0] in0;
  wire [31:0] in0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:47" *)
  wire [31:0] \in0$175 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:54" *)
  wire [31:0] in0s;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:49" *)
  input [31:0] in1;
  wire [31:0] in1;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:48" *)
  wire [31:0] \in1$130 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:48" *)
  wire [31:0] \in1$133 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:48" *)
  wire [31:0] \in1$136 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:48" *)
  wire [31:0] \in1$139 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:48" *)
  wire [31:0] \in1$142 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:48" *)
  wire [31:0] \in1$145 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:48" *)
  wire [31:0] \in1$148 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:48" *)
  wire [31:0] \in1$151 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:48" *)
  wire [31:0] \in1$154 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:48" *)
  wire [31:0] \in1$157 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:48" *)
  wire [31:0] \in1$160 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:48" *)
  wire [31:0] \in1$163 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:48" *)
  wire [31:0] \in1$166 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:48" *)
  wire [31:0] \in1$169 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:48" *)
  wire [31:0] \in1$172 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:48" *)
  wire [31:0] \in1$176 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:48" *)
  wire [31:0] \in1$179 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:48" *)
  wire [31:0] \in1$86 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:55" *)
  wire [31:0] in1s;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:431" *)
  wire [10:0] ins_input_depth;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:441" *)
  wire [31:0] ins_input_width;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:440" *)
  wire [11:0] ins_offset;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:442" *)
  wire [3:0] ins_pad;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:436" *)
  wire [191:0] ins_r_data;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:438" *)
  wire ins_r_finished;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:437" *)
  wire ins_r_next;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:435" *)
  wire ins_r_ready;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:430" *)
  wire ins_restart;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:46" *)
  wire ins_set_done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:47" *)
  wire [31:0] ins_set_in0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:45" *)
  reg ins_set_start;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:754" *)
  wire [31:0] ins_set_w_data;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:755" *)
  wire ins_set_w_en;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:756" *)
  wire ins_set_w_ready;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:439" *)
  wire ins_switch_PorD;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:432" *)
  wire [31:0] ins_w_data;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:433" *)
  wire ins_w_en;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:434" *)
  wire ins_w_ready;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mnv2_cfu.py:126" *)
  wire insget_next;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:46" *)
  wire mark_read_done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:47" *)
  wire [31:0] mark_read_in0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:49" *)
  wire [31:0] mark_read_output;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:73" *)
  wire mark_read_set;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:45" *)
  reg mark_read_start;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:62" *)
  wire [23:0] \mul_$signal ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:62" *)
  wire [23:0] \mul_$signal$10 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:62" *)
  wire [23:0] \mul_$signal$11 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:62" *)
  wire [23:0] \mul_$signal$12 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:62" *)
  wire [23:0] \mul_$signal$13 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:62" *)
  wire [23:0] \mul_$signal$14 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:62" *)
  wire [23:0] \mul_$signal$15 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:62" *)
  wire [23:0] \mul_$signal$16 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:62" *)
  wire [23:0] \mul_$signal$17 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:62" *)
  wire [23:0] \mul_$signal$18 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:62" *)
  wire [23:0] \mul_$signal$4 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:62" *)
  wire [23:0] \mul_$signal$5 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:62" *)
  wire [23:0] \mul_$signal$6 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:62" *)
  wire [23:0] \mul_$signal$7 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:62" *)
  wire [23:0] \mul_$signal$8 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:62" *)
  wire [23:0] \mul_$signal$9 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:57" *)
  wire [191:0] mul_f_data;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:58" *)
  wire [191:0] mul_i_data;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:56" *)
  wire [8:0] offset;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:369" *)
  wire [31:0] oq_get_data;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:46" *)
  wire oq_get_done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:370" *)
  wire oq_get_next;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:49" *)
  wire [31:0] oq_get_output;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:371" *)
  wire oq_get_ready;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:45" *)
  reg oq_get_start;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:51" *)
  output [31:0] \output ;
  reg [31:0] \output ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:49" *)
  wire [31:0] \output$111 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:49" *)
  wire [31:0] \output$114 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:49" *)
  wire [31:0] \output$117 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:49" *)
  wire [31:0] \output$120 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:49" *)
  wire [31:0] \output$123 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mnv2_cfu.py:163" *)
  reg [3:0] pad;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:148" *)
  wire [31:0] pp_0_accumulator;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:154" *)
  wire [31:0] pp_0_activation_max;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:153" *)
  wire [31:0] pp_0_activation_min;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:149" *)
  wire [31:0] pp_0_bias;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:150" *)
  wire [31:0] pp_0_multiplier;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:152" *)
  wire [31:0] pp_0_offset;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:155" *)
  wire [7:0] pp_0_result;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:151" *)
  wire [31:0] pp_0_shift;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:148" *)
  wire [31:0] pp_1_accumulator;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:154" *)
  wire [31:0] pp_1_activation_max;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:153" *)
  wire [31:0] pp_1_activation_min;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:149" *)
  wire [31:0] pp_1_bias;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:150" *)
  wire [31:0] pp_1_multiplier;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:152" *)
  wire [31:0] pp_1_offset;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:155" *)
  wire [7:0] pp_1_result;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:151" *)
  wire [31:0] pp_1_shift;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:148" *)
  wire [31:0] pp_2_accumulator;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:154" *)
  wire [31:0] pp_2_activation_max;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:153" *)
  wire [31:0] pp_2_activation_min;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:149" *)
  wire [31:0] pp_2_bias;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:150" *)
  wire [31:0] pp_2_multiplier;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:152" *)
  wire [31:0] pp_2_offset;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:155" *)
  wire [7:0] pp_2_result;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:151" *)
  wire [31:0] pp_2_shift;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:148" *)
  wire [31:0] pp_3_accumulator;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:154" *)
  wire [31:0] pp_3_activation_max;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:153" *)
  wire [31:0] pp_3_activation_min;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:149" *)
  wire [31:0] pp_3_bias;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:150" *)
  wire [31:0] pp_3_multiplier;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:152" *)
  wire [31:0] pp_3_offset;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:155" *)
  wire [7:0] pp_3_result;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:151" *)
  wire [31:0] pp_3_shift;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mnv2_cfu.py:104" *)
  wire read_finished;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:156" *)
  wire seq_acc_done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:154" *)
  wire seq_all_output_finished;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:148" *)
  wire seq_fifo_has_space;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:163" *)
  wire seq_filter_next;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:150" *)
  wire [11:0] seq_filter_value_words;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:153" *)
  wire seq_gate;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:147" *)
  wire seq_in_store_ready;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:152" *)
  wire [10:0] seq_input_depth_words;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:155" *)
  wire seq_mul_done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:162" *)
  wire [15:0] seq_num_tile;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:158" *)
  wire seq_out_word_done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:157" *)
  wire seq_pp_done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:159" *)
  wire seq_restart;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:146" *)
  wire seq_start_run;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:161" *)
  wire seq_switch_PorD;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:46" *)
  wire set_activation_max_done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:47" *)
  wire [31:0] set_activation_max_in0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:49" *)
  wire [31:0] set_activation_max_output;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:45" *)
  reg set_activation_max_start;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:72" *)
  wire [31:0] set_activation_max_value;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:46" *)
  wire set_activation_min_done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:47" *)
  wire [31:0] set_activation_min_in0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:49" *)
  wire [31:0] set_activation_min_output;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:45" *)
  reg set_activation_min_start;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:72" *)
  wire [31:0] set_activation_min_value;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:46" *)
  wire set_input_depth_words_done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:47" *)
  wire [31:0] set_input_depth_words_in0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:49" *)
  wire [31:0] set_input_depth_words_output;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:73" *)
  wire set_input_depth_words_set;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:45" *)
  reg set_input_depth_words_start;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:72" *)
  wire [31:0] set_input_depth_words_value;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:46" *)
  wire set_input_offset_done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:47" *)
  wire [31:0] set_input_offset_in0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:49" *)
  wire [31:0] set_input_offset_output;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:45" *)
  reg set_input_offset_start;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:72" *)
  wire [31:0] set_input_offset_value;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:46" *)
  wire set_input_width_done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:47" *)
  wire [31:0] set_input_width_in0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:49" *)
  wire [31:0] set_input_width_output;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:45" *)
  reg set_input_width_start;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:72" *)
  wire [31:0] set_input_width_value;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:46" *)
  wire set_num_tile_done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:47" *)
  wire [31:0] set_num_tile_in0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:49" *)
  wire [31:0] set_num_tile_output;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:45" *)
  reg set_num_tile_start;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:72" *)
  wire [31:0] set_num_tile_value;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:46" *)
  wire set_output_batch_size_done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:47" *)
  wire [31:0] set_output_batch_size_in0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:49" *)
  wire [31:0] set_output_batch_size_output;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:73" *)
  wire set_output_batch_size_set;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:45" *)
  reg set_output_batch_size_start;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:46" *)
  wire set_output_depth_done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:47" *)
  wire [31:0] set_output_depth_in0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:49" *)
  wire [31:0] set_output_depth_output;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:45" *)
  reg set_output_depth_start;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:46" *)
  wire set_output_offset_done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:47" *)
  wire [31:0] set_output_offset_in0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:49" *)
  wire [31:0] set_output_offset_output;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:45" *)
  reg set_output_offset_start;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:72" *)
  wire [31:0] set_output_offset_value;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:46" *)
  wire set_switch_PorD_done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:47" *)
  wire [31:0] set_switch_PorD_in0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:49" *)
  wire [31:0] set_switch_PorD_output;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:45" *)
  reg set_switch_PorD_start;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:72" *)
  wire [31:0] set_switch_PorD_value;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/cfu.py:52" *)
  input start;
  wire start;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:46" *)
  wire start_run_done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:47" *)
  wire [31:0] start_run_in0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:49" *)
  wire [31:0] start_run_output;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:73" *)
  wire start_run_set;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:45" *)
  reg start_run_start;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:209" *)
  wire [8:0] store_filter_values_dp_0_r_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:210" *)
  wire [31:0] store_filter_values_dp_0_r_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:207" *)
  wire [8:0] store_filter_values_dp_0_w_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:208" *)
  wire [31:0] store_filter_values_dp_0_w_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:206" *)
  wire store_filter_values_dp_0_w_en;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:209" *)
  wire [8:0] store_filter_values_dp_1_r_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:210" *)
  wire [31:0] store_filter_values_dp_1_r_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:207" *)
  wire [8:0] store_filter_values_dp_1_w_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:208" *)
  wire [31:0] store_filter_values_dp_1_w_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:206" *)
  wire store_filter_values_dp_1_w_en;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:209" *)
  wire [8:0] store_filter_values_dp_2_r_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:210" *)
  wire [31:0] store_filter_values_dp_2_r_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:207" *)
  wire [8:0] store_filter_values_dp_2_w_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:208" *)
  wire [31:0] store_filter_values_dp_2_w_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:206" *)
  wire store_filter_values_dp_2_w_en;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:209" *)
  wire [8:0] store_filter_values_dp_3_r_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:210" *)
  wire [31:0] store_filter_values_dp_3_r_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:207" *)
  wire [8:0] store_filter_values_dp_3_w_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:208" *)
  wire [31:0] store_filter_values_dp_3_w_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:206" *)
  wire store_filter_values_dp_3_w_en;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:61" *)
  wire \store_filter_values_set_$signal ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:61" *)
  wire \store_filter_values_set_$signal$1 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:61" *)
  wire \store_filter_values_set_$signal$2 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:61" *)
  wire \store_filter_values_set_$signal$3 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:65" *)
  wire [11:0] store_filter_values_set_count;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:46" *)
  wire store_filter_values_set_done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:47" *)
  wire [31:0] store_filter_values_set_in0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:64" *)
  wire store_filter_values_set_restart;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:45" *)
  reg store_filter_values_set_start;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:66" *)
  wire store_filter_values_set_updated;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:62" *)
  wire [8:0] store_filter_values_set_w_addr;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:63" *)
  wire [31:0] store_filter_values_set_w_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:209" *)
  wire [8:0] store_output_bias_dp_r_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:210" *)
  wire [31:0] store_output_bias_dp_r_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:207" *)
  wire [8:0] store_output_bias_dp_w_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:208" *)
  wire [31:0] store_output_bias_dp_w_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:206" *)
  wire store_output_bias_dp_w_en;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:125" *)
  wire [8:0] store_output_bias_inc_limit;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:124" *)
  wire store_output_bias_inc_next;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:126" *)
  wire [8:0] store_output_bias_inc_r_addr;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:123" *)
  wire store_output_bias_inc_restart;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:61" *)
  wire \store_output_bias_set_$signal ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:65" *)
  wire [9:0] store_output_bias_set_count;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:46" *)
  wire store_output_bias_set_done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:47" *)
  wire [31:0] store_output_bias_set_in0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:64" *)
  wire store_output_bias_set_restart;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:45" *)
  reg store_output_bias_set_start;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:62" *)
  wire [8:0] store_output_bias_set_w_addr;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:63" *)
  wire [31:0] store_output_bias_set_w_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:209" *)
  wire [8:0] store_output_multiplier_dp_r_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:210" *)
  wire [31:0] store_output_multiplier_dp_r_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:207" *)
  wire [8:0] store_output_multiplier_dp_w_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:208" *)
  wire [31:0] store_output_multiplier_dp_w_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:206" *)
  wire store_output_multiplier_dp_w_en;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:125" *)
  wire [8:0] store_output_multiplier_inc_limit;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:124" *)
  wire store_output_multiplier_inc_next;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:126" *)
  wire [8:0] store_output_multiplier_inc_r_addr;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:123" *)
  wire store_output_multiplier_inc_restart;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:61" *)
  wire \store_output_multiplier_set_$signal ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:65" *)
  wire [9:0] store_output_multiplier_set_count;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:46" *)
  wire store_output_multiplier_set_done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:47" *)
  wire [31:0] store_output_multiplier_set_in0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:64" *)
  wire store_output_multiplier_set_restart;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:45" *)
  reg store_output_multiplier_set_start;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:62" *)
  wire [8:0] store_output_multiplier_set_w_addr;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:63" *)
  wire [31:0] store_output_multiplier_set_w_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:209" *)
  wire [8:0] store_output_shift_dp_r_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:210" *)
  wire [31:0] store_output_shift_dp_r_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:207" *)
  wire [8:0] store_output_shift_dp_w_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:208" *)
  wire [31:0] store_output_shift_dp_w_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:206" *)
  wire store_output_shift_dp_w_en;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:125" *)
  wire [8:0] store_output_shift_inc_limit;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:124" *)
  wire store_output_shift_inc_next;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:126" *)
  wire [8:0] store_output_shift_inc_r_addr;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:123" *)
  wire store_output_shift_inc_restart;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:61" *)
  wire \store_output_shift_set_$signal ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:65" *)
  wire [9:0] store_output_shift_set_count;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:46" *)
  wire store_output_shift_set_done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:47" *)
  wire [31:0] store_output_shift_set_in0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:64" *)
  wire store_output_shift_set_restart;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:45" *)
  reg store_output_shift_set_start;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:62" *)
  wire [8:0] store_output_shift_set_w_addr;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:63" *)
  wire [31:0] store_output_shift_set_w_data;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:59" *)
  wire switch_PorD;
  assign \$99  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 4'hf;
  assign \$101  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 6'h23;
  assign \$103  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 6'h24;
  assign \$105  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 6'h25;
  assign \$107  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 5'h14;
  assign \$109  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 5'h15;
  assign \$112  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 5'h16;
  assign \$115  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 5'h17;
  assign \$118  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 5'h18;
  assign \$121  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 5'h19;
  assign \$124  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 7'h70;
  assign \$126  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 6'h22;
  assign \$128  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 6'h21;
  assign \$131  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 4'hb;
  assign \$134  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 4'hc;
  assign \$137  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 4'hd;
  assign \$140  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 4'he;
  assign \$143  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 4'hf;
  assign \$146  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 6'h23;
  assign \$149  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 6'h24;
  assign \$152  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 6'h25;
  assign \$155  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 5'h14;
  assign \$158  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 5'h15;
  assign \$161  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 5'h16;
  assign \$164  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 5'h17;
  assign \$167  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 5'h18;
  assign \$170  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 5'h19;
  assign \$173  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 7'h70;
  assign \$177  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 6'h22;
  assign \$180  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 6'h21;
  assign \$34  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 4'ha;
  assign \$36  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 4'hb;
  assign \$38  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 4'hc;
  assign \$40  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 4'hd;
  assign \$42  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 4'he;
  assign \$44  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 4'hf;
  assign \$46  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 6'h23;
  assign \$48  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 6'h24;
  assign \$50  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 6'h25;
  assign \$52  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 5'h14;
  assign \$54  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 5'h15;
  assign \$56  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 5'h16;
  assign \$58  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 5'h17;
  assign \$60  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 5'h18;
  assign \$62  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 5'h19;
  assign \$64  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 7'h70;
  assign \$66  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 6'h22;
  assign \$68  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 6'h21;
  assign \$70  = ! (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mnv2_cfu.py:164" *) set_input_width_value[1:0];
  assign \$72  = set_input_width_value[1:0] == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mnv2_cfu.py:166" *) 1'h1;
  assign \$74  = set_input_width_value[1:0] == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mnv2_cfu.py:168" *) 2'h2;
  assign \$76  = mark_read_set | (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mnv2_cfu.py:109" *) read_finished;
  assign \$78  = FIFO_w_level < (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mnv2_cfu.py:147" *) 9'h1f8;
  assign \$84  = ! (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mnv2_cfu.py:313" *) set_switch_PorD_value;
  assign \$87  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 4'ha;
  assign \$89  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 4'ha;
  assign \$91  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 4'hb;
  assign \$93  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 4'hc;
  assign \$95  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 4'hd;
  assign \$97  = f7buf_output == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *) 4'he;
  FIFO FIFO (
    .clk(clk),
    .r_data(FIFO_r_data),
    .r_en(FIFO_r_en),
    .r_rdy(FIFO_r_rdy),
    .rst(rst),
    .w_data(FIFO_w_data),
    .w_en(FIFO_w_en),
    .w_level(FIFO_w_level)
  );
  acc acc (
    .\$signal (\acc_$signal ),
    .\$signal$1 (\acc_$signal$19 ),
    .\$signal$10 (\acc_$signal$28 ),
    .\$signal$11 (\acc_$signal$29 ),
    .\$signal$12 (\acc_$signal$30 ),
    .\$signal$13 (\acc_$signal$31 ),
    .\$signal$14 (\acc_$signal$32 ),
    .\$signal$15 (\acc_$signal$33 ),
    .\$signal$2 (\acc_$signal$20 ),
    .\$signal$3 (\acc_$signal$21 ),
    .\$signal$4 (\acc_$signal$22 ),
    .\$signal$5 (\acc_$signal$23 ),
    .\$signal$6 (\acc_$signal$24 ),
    .\$signal$7 (\acc_$signal$25 ),
    .\$signal$8 (\acc_$signal$26 ),
    .\$signal$9 (\acc_$signal$27 ),
    .add_en(acc_add_en),
    .clear(acc_clear),
    .clk(clk),
    .result_0(acc_result_0),
    .result_1(acc_result_1),
    .result_2(acc_result_2),
    .result_3(acc_result_3),
    .rst(rst),
    .switch_PorD(acc_switch_PorD)
  );
  btw btw (
    .clk(clk),
    .in_value(btw_in_value),
    .result(btw_result),
    .rst(rst),
    .shift_en(btw_shift_en)
  );
  f7buf f7buf (
    .clk(clk),
    .funct7(funct7),
    .\output (f7buf_output),
    .rst(rst),
    .start(start)
  );
  fvf fvf (
    .clk(clk),
    .data(fvf_data),
    .limit(fvf_limit),
    .mem_addr_0(fvf_mem_addr_0),
    .mem_addr_1(fvf_mem_addr_1),
    .mem_addr_2(fvf_mem_addr_2),
    .mem_addr_3(fvf_mem_addr_3),
    .mem_data_0(fvf_mem_data_0),
    .mem_data_1(fvf_mem_data_1),
    .mem_data_2(fvf_mem_data_2),
    .mem_data_3(fvf_mem_data_3),
    .next(fvf_next),
    .restart(fvf_restart),
    .rst(rst),
    .switch_PorD(fvf_switch_PorD),
    .updated(fvf_updated)
  );
  ins ins (
    .clk(clk),
    .input_depth(ins_input_depth),
    .input_width(ins_input_width),
    .offset(ins_offset),
    .pad(ins_pad),
    .r_data(ins_r_data),
    .r_finished(ins_r_finished),
    .r_next(ins_r_next),
    .r_ready(ins_r_ready),
    .restart(ins_restart),
    .rst(rst),
    .switch_PorD(ins_switch_PorD),
    .w_data(ins_w_data),
    .w_en(ins_w_en),
    .w_ready(ins_w_ready)
  );
  ins_set ins_set (
    .clk(clk),
    .done(ins_set_done),
    .in0(ins_set_in0),
    .rst(rst),
    .start(ins_set_start),
    .w_data(ins_set_w_data),
    .w_en(ins_set_w_en),
    .w_ready(ins_set_w_ready)
  );
  mark_read mark_read (
    .clk(clk),
    .done(mark_read_done),
    .in0(mark_read_in0),
    .\output (mark_read_output),
    .rst(rst),
    .set(mark_read_set),
    .start(mark_read_start)
  );
  mul mul (
    .\$signal (\mul_$signal ),
    .\$signal$1 (\mul_$signal$4 ),
    .\$signal$10 (\mul_$signal$13 ),
    .\$signal$11 (\mul_$signal$14 ),
    .\$signal$12 (\mul_$signal$15 ),
    .\$signal$13 (\mul_$signal$16 ),
    .\$signal$14 (\mul_$signal$17 ),
    .\$signal$15 (\mul_$signal$18 ),
    .\$signal$2 (\mul_$signal$5 ),
    .\$signal$3 (\mul_$signal$6 ),
    .\$signal$4 (\mul_$signal$7 ),
    .\$signal$5 (\mul_$signal$8 ),
    .\$signal$6 (\mul_$signal$9 ),
    .\$signal$7 (\mul_$signal$10 ),
    .\$signal$8 (\mul_$signal$11 ),
    .\$signal$9 (\mul_$signal$12 ),
    .clk(clk),
    .f_data(mul_f_data),
    .i_data(mul_i_data),
    .rst(rst)
  );
  oq_get oq_get (
    .clk(clk),
    .data(oq_get_data),
    .done(oq_get_done),
    .next(oq_get_next),
    .\output (oq_get_output),
    .ready(oq_get_ready),
    .rst(rst),
    .start(oq_get_start)
  );
  pp_0 pp_0 (
    .accumulator(pp_0_accumulator),
    .activation_max(pp_0_activation_max),
    .activation_min(pp_0_activation_min),
    .bias(pp_0_bias),
    .clk(clk),
    .multiplier(pp_0_multiplier),
    .offset(pp_0_offset),
    .result(pp_0_result),
    .rst(rst),
    .shift(pp_0_shift)
  );
  pp_1 pp_1 (
    .accumulator(pp_1_accumulator),
    .activation_max(pp_1_activation_max),
    .activation_min(pp_1_activation_min),
    .bias(pp_1_bias),
    .clk(clk),
    .multiplier(pp_1_multiplier),
    .offset(pp_1_offset),
    .result(pp_1_result),
    .rst(rst),
    .shift(pp_1_shift)
  );
  pp_2 pp_2 (
    .accumulator(pp_2_accumulator),
    .activation_max(pp_2_activation_max),
    .activation_min(pp_2_activation_min),
    .bias(pp_2_bias),
    .clk(clk),
    .multiplier(pp_2_multiplier),
    .offset(pp_2_offset),
    .result(pp_2_result),
    .rst(rst),
    .shift(pp_2_shift)
  );
  pp_3 pp_3 (
    .accumulator(pp_3_accumulator),
    .activation_max(pp_3_activation_max),
    .activation_min(pp_3_activation_min),
    .bias(pp_3_bias),
    .clk(clk),
    .multiplier(pp_3_multiplier),
    .offset(pp_3_offset),
    .result(pp_3_result),
    .rst(rst),
    .shift(pp_3_shift)
  );
  seq seq (
    .acc_done(seq_acc_done),
    .all_output_finished(seq_all_output_finished),
    .clk(clk),
    .fifo_has_space(seq_fifo_has_space),
    .filter_next(seq_filter_next),
    .filter_value_words(seq_filter_value_words),
    .gate(seq_gate),
    .in_store_ready(seq_in_store_ready),
    .input_depth_words(seq_input_depth_words),
    .mul_done(seq_mul_done),
    .num_tile(seq_num_tile),
    .out_word_done(seq_out_word_done),
    .pp_done(seq_pp_done),
    .restart(seq_restart),
    .rst(rst),
    .start_run(seq_start_run),
    .switch_PorD(seq_switch_PorD)
  );
  set_activation_max set_activation_max (
    .clk(clk),
    .done(set_activation_max_done),
    .in0(set_activation_max_in0),
    .\output (set_activation_max_output),
    .rst(rst),
    .start(set_activation_max_start),
    .value(set_activation_max_value)
  );
  set_activation_min set_activation_min (
    .clk(clk),
    .done(set_activation_min_done),
    .in0(set_activation_min_in0),
    .\output (set_activation_min_output),
    .rst(rst),
    .start(set_activation_min_start),
    .value(set_activation_min_value)
  );
  set_input_depth_words set_input_depth_words (
    .clk(clk),
    .done(set_input_depth_words_done),
    .in0(set_input_depth_words_in0),
    .\output (set_input_depth_words_output),
    .rst(rst),
    .set(set_input_depth_words_set),
    .start(set_input_depth_words_start),
    .value(set_input_depth_words_value)
  );
  set_input_offset set_input_offset (
    .clk(clk),
    .done(set_input_offset_done),
    .in0(set_input_offset_in0),
    .\output (set_input_offset_output),
    .rst(rst),
    .start(set_input_offset_start),
    .value(set_input_offset_value)
  );
  set_input_width set_input_width (
    .clk(clk),
    .done(set_input_width_done),
    .in0(set_input_width_in0),
    .\output (set_input_width_output),
    .rst(rst),
    .start(set_input_width_start),
    .value(set_input_width_value)
  );
  set_num_tile set_num_tile (
    .clk(clk),
    .done(set_num_tile_done),
    .in0(set_num_tile_in0),
    .\output (set_num_tile_output),
    .rst(rst),
    .start(set_num_tile_start),
    .value(set_num_tile_value)
  );
  set_output_batch_size set_output_batch_size (
    .clk(clk),
    .done(set_output_batch_size_done),
    .in0(set_output_batch_size_in0),
    .\output (set_output_batch_size_output),
    .rst(rst),
    .set(set_output_batch_size_set),
    .start(set_output_batch_size_start)
  );
  set_output_depth set_output_depth (
    .clk(clk),
    .done(set_output_depth_done),
    .in0(set_output_depth_in0),
    .\output (set_output_depth_output),
    .rst(rst),
    .start(set_output_depth_start)
  );
  set_output_offset set_output_offset (
    .clk(clk),
    .done(set_output_offset_done),
    .in0(set_output_offset_in0),
    .\output (set_output_offset_output),
    .rst(rst),
    .start(set_output_offset_start),
    .value(set_output_offset_value)
  );
  set_switch_PorD set_switch_PorD (
    .clk(clk),
    .done(set_switch_PorD_done),
    .in0(set_switch_PorD_in0),
    .\output (set_switch_PorD_output),
    .rst(rst),
    .start(set_switch_PorD_start),
    .value(set_switch_PorD_value)
  );
  start_run start_run (
    .clk(clk),
    .done(start_run_done),
    .in0(start_run_in0),
    .\output (start_run_output),
    .rst(rst),
    .set(start_run_set),
    .start(start_run_start)
  );
  store_filter_values_dp_0 store_filter_values_dp_0 (
    .clk(clk),
    .r_addr(store_filter_values_dp_0_r_addr),
    .r_data(store_filter_values_dp_0_r_data),
    .w_addr(store_filter_values_dp_0_w_addr),
    .w_data(store_filter_values_dp_0_w_data),
    .w_en(store_filter_values_dp_0_w_en)
  );
  store_filter_values_dp_1 store_filter_values_dp_1 (
    .clk(clk),
    .r_addr(store_filter_values_dp_1_r_addr),
    .r_data(store_filter_values_dp_1_r_data),
    .w_addr(store_filter_values_dp_1_w_addr),
    .w_data(store_filter_values_dp_1_w_data),
    .w_en(store_filter_values_dp_1_w_en)
  );
  store_filter_values_dp_2 store_filter_values_dp_2 (
    .clk(clk),
    .r_addr(store_filter_values_dp_2_r_addr),
    .r_data(store_filter_values_dp_2_r_data),
    .w_addr(store_filter_values_dp_2_w_addr),
    .w_data(store_filter_values_dp_2_w_data),
    .w_en(store_filter_values_dp_2_w_en)
  );
  store_filter_values_dp_3 store_filter_values_dp_3 (
    .clk(clk),
    .r_addr(store_filter_values_dp_3_r_addr),
    .r_data(store_filter_values_dp_3_r_data),
    .w_addr(store_filter_values_dp_3_w_addr),
    .w_data(store_filter_values_dp_3_w_data),
    .w_en(store_filter_values_dp_3_w_en)
  );
  store_filter_values_set store_filter_values_set (
    .\$signal (\store_filter_values_set_$signal ),
    .\$signal$1 (\store_filter_values_set_$signal$1 ),
    .\$signal$2 (\store_filter_values_set_$signal$2 ),
    .\$signal$3 (\store_filter_values_set_$signal$3 ),
    .clk(clk),
    .count(store_filter_values_set_count),
    .done(store_filter_values_set_done),
    .in0(store_filter_values_set_in0),
    .restart(store_filter_values_set_restart),
    .rst(rst),
    .start(store_filter_values_set_start),
    .updated(store_filter_values_set_updated),
    .w_addr(store_filter_values_set_w_addr),
    .w_data(store_filter_values_set_w_data)
  );
  store_output_bias_dp store_output_bias_dp (
    .clk(clk),
    .r_addr(store_output_bias_dp_r_addr),
    .r_data(store_output_bias_dp_r_data),
    .w_addr(store_output_bias_dp_w_addr),
    .w_data(store_output_bias_dp_w_data),
    .w_en(store_output_bias_dp_w_en)
  );
  store_output_bias_inc store_output_bias_inc (
    .clk(clk),
    .limit(store_output_bias_inc_limit),
    .next(store_output_bias_inc_next),
    .r_addr(store_output_bias_inc_r_addr),
    .restart(store_output_bias_inc_restart),
    .rst(rst)
  );
  store_output_bias_set store_output_bias_set (
    .\$signal (\store_output_bias_set_$signal ),
    .clk(clk),
    .count(store_output_bias_set_count),
    .done(store_output_bias_set_done),
    .in0(store_output_bias_set_in0),
    .restart(store_output_bias_set_restart),
    .rst(rst),
    .start(store_output_bias_set_start),
    .w_addr(store_output_bias_set_w_addr),
    .w_data(store_output_bias_set_w_data)
  );
  store_output_multiplier_dp store_output_multiplier_dp (
    .clk(clk),
    .r_addr(store_output_multiplier_dp_r_addr),
    .r_data(store_output_multiplier_dp_r_data),
    .w_addr(store_output_multiplier_dp_w_addr),
    .w_data(store_output_multiplier_dp_w_data),
    .w_en(store_output_multiplier_dp_w_en)
  );
  store_output_multiplier_inc store_output_multiplier_inc (
    .clk(clk),
    .limit(store_output_multiplier_inc_limit),
    .next(store_output_multiplier_inc_next),
    .r_addr(store_output_multiplier_inc_r_addr),
    .restart(store_output_multiplier_inc_restart),
    .rst(rst)
  );
  store_output_multiplier_set store_output_multiplier_set (
    .\$signal (\store_output_multiplier_set_$signal ),
    .clk(clk),
    .count(store_output_multiplier_set_count),
    .done(store_output_multiplier_set_done),
    .in0(store_output_multiplier_set_in0),
    .restart(store_output_multiplier_set_restart),
    .rst(rst),
    .start(store_output_multiplier_set_start),
    .w_addr(store_output_multiplier_set_w_addr),
    .w_data(store_output_multiplier_set_w_data)
  );
  store_output_shift_dp store_output_shift_dp (
    .clk(clk),
    .r_addr(store_output_shift_dp_r_addr),
    .r_data(store_output_shift_dp_r_data),
    .w_addr(store_output_shift_dp_w_addr),
    .w_data(store_output_shift_dp_w_data),
    .w_en(store_output_shift_dp_w_en)
  );
  store_output_shift_inc store_output_shift_inc (
    .clk(clk),
    .limit(store_output_shift_inc_limit),
    .next(store_output_shift_inc_next),
    .r_addr(store_output_shift_inc_r_addr),
    .restart(store_output_shift_inc_restart),
    .rst(rst)
  );
  store_output_shift_set store_output_shift_set (
    .\$signal (\store_output_shift_set_$signal ),
    .clk(clk),
    .count(store_output_shift_set_count),
    .done(store_output_shift_set_done),
    .in0(store_output_shift_set_in0),
    .restart(store_output_shift_set_restart),
    .rst(rst),
    .start(store_output_shift_set_start),
    .w_addr(store_output_shift_set_w_addr),
    .w_data(store_output_shift_set_w_data)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$8 ) begin end
    done = start;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$34 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          done = set_input_depth_words_done;
    endcase
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$36 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          done = set_output_depth_done;
    endcase
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$38 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          done = set_input_offset_done;
    endcase
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$40 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          done = set_output_offset_done;
    endcase
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$42 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          done = set_activation_min_done;
    endcase
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$44 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          done = set_activation_max_done;
    endcase
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$46 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          done = set_switch_PorD_done;
    endcase
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$48 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          done = set_num_tile_done;
    endcase
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$50 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          done = set_input_width_done;
    endcase
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$52 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          done = set_output_batch_size_done;
    endcase
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$54 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          done = store_output_multiplier_set_done;
    endcase
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$56 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          done = store_output_shift_set_done;
    endcase
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$58 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          done = store_output_bias_set_done;
    endcase
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$60 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          done = store_filter_values_set_done;
    endcase
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$62 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          done = ins_set_done;
    endcase
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$64 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          done = mark_read_done;
    endcase
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$66 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          done = oq_get_done;
    endcase
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$68 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          done = start_run_done;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$8 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mnv2_cfu.py:164" *)
    casez ({ \$74 , \$72 , \$70  })
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mnv2_cfu.py:164" */
      3'b??1:
          pad = 4'h2;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mnv2_cfu.py:166" */
      3'b?1?:
          pad = 4'h1;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mnv2_cfu.py:168" */
      3'b1??:
          pad = 4'h0;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mnv2_cfu.py:170" */
      default:
          pad = 4'h3;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$8 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mnv2_cfu.py:313" *)
    casez (\$84 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mnv2_cfu.py:313" */
      1'h1:
          FIFO_w_data = btw_result;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mnv2_cfu.py:315" */
      default:
          FIFO_w_data = { pp_3_result, pp_2_result, pp_1_result, pp_0_result };
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$8 ) begin end
    set_input_depth_words_start = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$87 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          set_input_depth_words_start = start;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$8 ) begin end
    \output  = 32'd0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$89 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          \output  = set_input_depth_words_output;
    endcase
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$91 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          \output  = set_output_depth_output;
    endcase
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$93 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          \output  = set_input_offset_output;
    endcase
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$95 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          \output  = set_output_offset_output;
    endcase
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$97 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          \output  = set_activation_min_output;
    endcase
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$99 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          \output  = set_activation_max_output;
    endcase
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$101 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          \output  = set_switch_PorD_output;
    endcase
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$103 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          \output  = set_num_tile_output;
    endcase
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$105 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          \output  = set_input_width_output;
    endcase
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$107 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          \output  = set_output_batch_size_output;
    endcase
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$109 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          \output  = 32'd0;
    endcase
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$112 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          \output  = 32'd0;
    endcase
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$115 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          \output  = 32'd0;
    endcase
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$118 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          \output  = 32'd0;
    endcase
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$121 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          \output  = 32'd0;
    endcase
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$124 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          \output  = mark_read_output;
    endcase
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$126 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          \output  = oq_get_output;
    endcase
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$128 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          \output  = start_run_output;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$8 ) begin end
    set_output_depth_start = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$131 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          set_output_depth_start = start;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$8 ) begin end
    set_input_offset_start = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$134 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          set_input_offset_start = start;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$8 ) begin end
    set_output_offset_start = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$137 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          set_output_offset_start = start;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$8 ) begin end
    set_activation_min_start = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$140 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          set_activation_min_start = start;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$8 ) begin end
    set_activation_max_start = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$143 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          set_activation_max_start = start;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$8 ) begin end
    set_switch_PorD_start = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$146 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          set_switch_PorD_start = start;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$8 ) begin end
    set_num_tile_start = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$149 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          set_num_tile_start = start;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$8 ) begin end
    set_input_width_start = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$152 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          set_input_width_start = start;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$8 ) begin end
    set_output_batch_size_start = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$155 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          set_output_batch_size_start = start;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$8 ) begin end
    store_output_multiplier_set_start = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$158 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          store_output_multiplier_set_start = start;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$8 ) begin end
    store_output_shift_set_start = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$161 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          store_output_shift_set_start = start;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$8 ) begin end
    store_output_bias_set_start = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$164 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          store_output_bias_set_start = start;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$8 ) begin end
    store_filter_values_set_start = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$167 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          store_filter_values_set_start = start;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$8 ) begin end
    ins_set_start = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$170 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          ins_set_start = start;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$8 ) begin end
    mark_read_start = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$173 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          mark_read_start = start;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$8 ) begin end
    oq_get_start = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$177 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          oq_get_start = start;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$8 ) begin end
    start_run_start = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" *)
    casez (\$180 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:110" */
      1'h1:
          start_run_start = start;
    endcase
  end
  assign insget_next = 1'h0;
  assign fvg_next = 1'h0;
  assign \output$111  = 32'd0;
  assign \output$114  = 32'd0;
  assign \output$117  = 32'd0;
  assign \output$120  = 32'd0;
  assign \output$123  = 32'd0;
  assign in1s = in1;
  assign in0s = in0;
  assign \in1$179  = in1;
  assign start_run_in0 = in0;
  assign \in1$176  = in1;
  assign \in0$175  = in0;
  assign \in1$172  = in1;
  assign mark_read_in0 = in0;
  assign \in1$169  = in1;
  assign ins_set_in0 = in0;
  assign \in1$166  = in1;
  assign store_filter_values_set_in0 = in0;
  assign \in1$163  = in1;
  assign store_output_bias_set_in0 = in0;
  assign \in1$160  = in1;
  assign store_output_shift_set_in0 = in0;
  assign \in1$157  = in1;
  assign store_output_multiplier_set_in0 = in0;
  assign \in1$154  = in1;
  assign set_output_batch_size_in0 = in0;
  assign \in1$151  = in1;
  assign set_input_width_in0 = in0;
  assign \in1$148  = in1;
  assign set_num_tile_in0 = in0;
  assign \in1$145  = in1;
  assign set_switch_PorD_in0 = in0;
  assign \in1$142  = in1;
  assign set_activation_max_in0 = in0;
  assign \in1$139  = in1;
  assign set_activation_min_in0 = in0;
  assign \in1$136  = in1;
  assign set_output_offset_in0 = in0;
  assign \in1$133  = in1;
  assign set_input_offset_in0 = in0;
  assign \in1$130  = in1;
  assign set_output_depth_in0 = in0;
  assign \in1$86  = in1;
  assign set_input_depth_words_in0 = in0;
  assign FIFO_w_en = seq_out_word_done;
  assign btw_shift_en = seq_pp_done;
  assign store_output_shift_inc_next = seq_acc_done;
  assign store_output_multiplier_inc_next = seq_acc_done;
  assign store_output_bias_inc_next = seq_acc_done;
  assign acc_clear = seq_acc_done;
  assign acc_add_en = seq_mul_done;
  assign read_finished = seq_all_output_finished;
  assign fvf_next = \$82 ;
  assign ins_r_next = \$80 ;
  assign seq_input_depth_words = set_input_depth_words_value[10:0];
  assign seq_filter_value_words = store_filter_values_set_count;
  assign seq_fifo_has_space = \$78 ;
  assign seq_in_store_ready = ins_r_ready;
  assign seq_start_run = start_run_set;
  assign seq_switch_PorD = set_switch_PorD_value[0];
  assign seq_num_tile = set_num_tile_value[15:0];
  assign seq_restart = set_output_batch_size_set;
  assign btw_in_value = pp_0_result;
  assign pp_3_accumulator = acc_result_3;
  assign pp_3_shift = store_output_shift_dp_r_data;
  assign pp_3_multiplier = store_output_multiplier_dp_r_data;
  assign pp_3_bias = store_output_bias_dp_r_data;
  assign pp_3_activation_max = set_activation_max_value;
  assign pp_3_activation_min = set_activation_min_value;
  assign pp_3_offset = set_output_offset_value;
  assign pp_2_accumulator = acc_result_2;
  assign pp_2_shift = store_output_shift_dp_r_data;
  assign pp_2_multiplier = store_output_multiplier_dp_r_data;
  assign pp_2_bias = store_output_bias_dp_r_data;
  assign pp_2_activation_max = set_activation_max_value;
  assign pp_2_activation_min = set_activation_min_value;
  assign pp_2_offset = set_output_offset_value;
  assign pp_1_accumulator = acc_result_1;
  assign pp_1_shift = store_output_shift_dp_r_data;
  assign pp_1_multiplier = store_output_multiplier_dp_r_data;
  assign pp_1_bias = store_output_bias_dp_r_data;
  assign pp_1_activation_max = set_activation_max_value;
  assign pp_1_activation_min = set_activation_min_value;
  assign pp_1_offset = set_output_offset_value;
  assign pp_0_accumulator = acc_result_0;
  assign pp_0_shift = store_output_shift_dp_r_data;
  assign pp_0_multiplier = store_output_multiplier_dp_r_data;
  assign pp_0_bias = store_output_bias_dp_r_data;
  assign pp_0_activation_max = set_activation_max_value;
  assign pp_0_activation_min = set_activation_min_value;
  assign pp_0_offset = set_output_offset_value;
  assign acc_switch_PorD = set_switch_PorD_value[0];
  assign \acc_$signal$33  = \mul_$signal$18 ;
  assign \acc_$signal$32  = \mul_$signal$17 ;
  assign \acc_$signal$31  = \mul_$signal$16 ;
  assign \acc_$signal$30  = \mul_$signal$15 ;
  assign \acc_$signal$29  = \mul_$signal$14 ;
  assign \acc_$signal$28  = \mul_$signal$13 ;
  assign \acc_$signal$27  = \mul_$signal$12 ;
  assign \acc_$signal$26  = \mul_$signal$11 ;
  assign \acc_$signal$25  = \mul_$signal$10 ;
  assign \acc_$signal$24  = \mul_$signal$9 ;
  assign \acc_$signal$23  = \mul_$signal$8 ;
  assign \acc_$signal$22  = \mul_$signal$7 ;
  assign \acc_$signal$21  = \mul_$signal$6 ;
  assign \acc_$signal$20  = \mul_$signal$5 ;
  assign \acc_$signal$19  = \mul_$signal$4 ;
  assign \acc_$signal  = \mul_$signal ;
  assign switch_PorD = set_switch_PorD_value[0];
  assign mul_i_data = ins_r_data;
  assign mul_f_data = fvf_data;
  assign offset = set_input_offset_value[8:0];
  assign FIFO_r_en = oq_get_next;
  assign oq_get_ready = FIFO_r_rdy;
  assign oq_get_data = FIFO_r_data;
  assign ins_pad = pad;
  assign ins_input_width = set_input_width_value;
  assign ins_switch_PorD = set_switch_PorD_value[0];
  assign ins_r_finished = \$76 ;
  assign ins_input_depth = set_input_depth_words_value[10:0];
  assign ins_restart = set_input_depth_words_set;
  assign ins_offset = set_input_offset_value[11:0];
  assign ins_set_w_ready = ins_w_ready;
  assign ins_w_en = ins_set_w_en;
  assign ins_w_data = ins_set_w_data;
  assign fvf_switch_PorD = set_switch_PorD_value[0];
  assign fvf_restart = set_output_batch_size_set;
  assign fvf_updated = store_filter_values_set_updated;
  assign fvf_limit = store_filter_values_set_count[10:0];
  assign fvf_mem_data_3 = store_filter_values_dp_3_r_data;
  assign store_filter_values_dp_3_r_addr = fvf_mem_addr_3;
  assign fvf_mem_data_2 = store_filter_values_dp_2_r_data;
  assign store_filter_values_dp_2_r_addr = fvf_mem_addr_2;
  assign fvf_mem_data_1 = store_filter_values_dp_1_r_data;
  assign store_filter_values_dp_1_r_addr = fvf_mem_addr_1;
  assign fvf_mem_data_0 = store_filter_values_dp_0_r_data;
  assign store_filter_values_dp_0_r_addr = fvf_mem_addr_0;
  assign store_filter_values_dp_3_w_data = store_filter_values_set_w_data;
  assign store_filter_values_dp_3_w_addr = store_filter_values_set_w_addr;
  assign store_filter_values_dp_3_w_en = \store_filter_values_set_$signal$3 ;
  assign store_filter_values_dp_2_w_data = store_filter_values_set_w_data;
  assign store_filter_values_dp_2_w_addr = store_filter_values_set_w_addr;
  assign store_filter_values_dp_2_w_en = \store_filter_values_set_$signal$2 ;
  assign store_filter_values_dp_1_w_data = store_filter_values_set_w_data;
  assign store_filter_values_dp_1_w_addr = store_filter_values_set_w_addr;
  assign store_filter_values_dp_1_w_en = \store_filter_values_set_$signal$1 ;
  assign store_filter_values_dp_0_w_data = store_filter_values_set_w_data;
  assign store_filter_values_dp_0_w_addr = store_filter_values_set_w_addr;
  assign store_filter_values_dp_0_w_en = \store_filter_values_set_$signal ;
  assign store_filter_values_set_restart = set_output_batch_size_set;
  assign store_output_bias_dp_w_data = store_output_bias_set_w_data;
  assign store_output_bias_dp_w_addr = store_output_bias_set_w_addr;
  assign store_output_bias_dp_w_en = \store_output_bias_set_$signal ;
  assign store_output_bias_dp_r_addr = store_output_bias_inc_r_addr;
  assign store_output_bias_inc_limit = store_output_bias_set_count[8:0];
  assign store_output_bias_inc_restart = set_output_batch_size_set;
  assign store_output_bias_set_restart = set_output_batch_size_set;
  assign store_output_shift_dp_w_data = store_output_shift_set_w_data;
  assign store_output_shift_dp_w_addr = store_output_shift_set_w_addr;
  assign store_output_shift_dp_w_en = \store_output_shift_set_$signal ;
  assign store_output_shift_dp_r_addr = store_output_shift_inc_r_addr;
  assign store_output_shift_inc_limit = store_output_shift_set_count[8:0];
  assign store_output_shift_inc_restart = set_output_batch_size_set;
  assign store_output_shift_set_restart = set_output_batch_size_set;
  assign store_output_multiplier_dp_w_data = store_output_multiplier_set_w_data;
  assign store_output_multiplier_dp_w_addr = store_output_multiplier_set_w_addr;
  assign store_output_multiplier_dp_w_en = \store_output_multiplier_set_$signal ;
  assign store_output_multiplier_dp_r_addr = store_output_multiplier_inc_r_addr;
  assign store_output_multiplier_inc_limit = store_output_multiplier_set_count[8:0];
  assign store_output_multiplier_inc_restart = set_output_batch_size_set;
  assign store_output_multiplier_set_restart = set_output_batch_size_set;
  assign \$80  = seq_gate;
  assign \$82  = seq_filter_next;
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.seq.fnext_count" *)
(* generator = "Amaranth" *)
module fnext_count(clk, restart, en, max, done, rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$9  = 0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:63" *)
  wire [16:0] \$1 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:62" *)
  wire [16:0] \$10 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:67" *)
  wire \$12 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:63" *)
  wire [16:0] \$2 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:63" *)
  wire [16:0] \$4 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:62" *)
  wire [16:0] \$5 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:63" *)
  wire \$7 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:61" *)
  reg [15:0] count = 16'h0000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:61" *)
  reg [15:0] \count$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:57" *)
  output done;
  reg done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:56" *)
  input en;
  wire en;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:58" *)
  input [15:0] max;
  wire [15:0] max;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:55" *)
  input restart;
  wire restart;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  assign \$10  = max - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:62" *) 1'h1;
  assign \$12  = count == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:67" *) \$10 ;
  always @(posedge clk)
    count <= \count$next ;
  assign \$2  = count + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:63" *) 1'h1;
  assign \$5  = max - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:62" *) 1'h1;
  assign \$7  = count == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:63" *) \$5 ;
  assign \$4  = \$7  ? (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:63" *) 17'h00000 : \$2 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$9 ) begin end
    \count$next  = count;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:65" *)
    casez (en)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:65" */
      1'h1:
          \count$next  = \$4 [15:0];
    endcase
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:69" *)
    casez (restart)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:69" */
      1'h1:
          \count$next  = 16'h0000;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \count$next  = 16'h0000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$9 ) begin end
    done = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:65" *)
    casez (en)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:65" */
      1'h1:
          done = \$12 ;
    endcase
  end
  assign \$1  = \$4 ;
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.seq.four_count" *)
(* generator = "Amaranth" *)
module four_count(clk, max, restart, en, done, rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$10  = 0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:63" *)
  wire [3:0] \$1 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:62" *)
  wire [3:0] \$10 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:67" *)
  wire \$12 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:63" *)
  wire [3:0] \$2 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:63" *)
  wire [3:0] \$4 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:62" *)
  wire [3:0] \$5 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:63" *)
  wire \$7 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:61" *)
  reg [2:0] count = 3'h0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:61" *)
  reg [2:0] \count$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:57" *)
  output done;
  reg done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:56" *)
  input en;
  wire en;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:58" *)
  input [2:0] max;
  wire [2:0] max;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:55" *)
  input restart;
  wire restart;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  assign \$10  = max - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:62" *) 1'h1;
  assign \$12  = count == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:67" *) \$10 ;
  always @(posedge clk)
    count <= \count$next ;
  assign \$2  = count + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:63" *) 1'h1;
  assign \$5  = max - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:62" *) 1'h1;
  assign \$7  = count == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:63" *) \$5 ;
  assign \$4  = \$7  ? (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:63" *) 4'h0 : \$2 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$10 ) begin end
    \count$next  = count;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:65" *)
    casez (en)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:65" */
      1'h1:
          \count$next  = \$4 [2:0];
    endcase
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:69" *)
    casez (restart)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:69" */
      1'h1:
          \count$next  = 3'h0;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \count$next  = 3'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$10 ) begin end
    done = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:65" *)
    casez (en)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:65" */
      1'h1:
          done = \$12 ;
    endcase
  end
  assign \$1  = \$4 ;
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.fvf" *)
(* generator = "Amaranth" *)
module fvf(clk, mem_addr_0, mem_data_0, mem_addr_1, mem_data_1, mem_addr_2, mem_data_2, mem_addr_3, mem_data_3, limit, updated, restart, switch_PorD, data, next, rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$11  = 0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:215" *)
  wire [12:0] \$1 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [11:0] \$100 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$102 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$104 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$106 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$108 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:215" *)
  wire [12:0] \$11 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$110 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [11:0] \$111 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [11:0] \$112 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$114 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$116 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$118 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$120 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$122 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [11:0] \$123 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [11:0] \$124 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$126 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$128 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:215" *)
  wire [12:0] \$13 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$130 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$132 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$134 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:233" *)
  wire [11:0] \$135 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:233" *)
  wire [11:0] \$136 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$138 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [11:0] \$139 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [11:0] \$140 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$142 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$144 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$146 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$148 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:215" *)
  wire [12:0] \$15 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$150 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [11:0] \$151 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [11:0] \$152 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$154 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$156 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$158 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:215" *)
  wire [11:0] \$16 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$160 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$162 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [11:0] \$163 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [11:0] \$164 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$166 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$168 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$170 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$172 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$174 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [11:0] \$175 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [11:0] \$176 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$178 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:215" *)
  wire [12:0] \$18 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$180 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$182 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$184 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$186 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:233" *)
  wire [11:0] \$187 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:233" *)
  wire [11:0] \$188 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$190 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [11:0] \$191 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [11:0] \$192 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$194 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$196 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$198 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:215" *)
  wire [11:0] \$2 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:215" *)
  wire [12:0] \$20 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$200 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$202 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [11:0] \$203 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [11:0] \$204 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$206 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$208 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$210 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$212 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$214 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [11:0] \$215 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [11:0] \$216 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$218 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:215" *)
  wire [12:0] \$22 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$220 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$222 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$224 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$226 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [11:0] \$227 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [11:0] \$228 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:215" *)
  wire [11:0] \$23 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$230 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$232 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$234 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$236 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *)
  wire \$238 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:238" *)
  wire [11:0] \$240 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:238" *)
  wire [11:0] \$242 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:238" *)
  wire [11:0] \$244 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:238" *)
  wire [11:0] \$246 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:238" *)
  wire [11:0] \$248 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:215" *)
  wire [12:0] \$25 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:238" *)
  wire [11:0] \$250 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:238" *)
  wire [11:0] \$252 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:238" *)
  wire [11:0] \$254 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:269" *)
  wire [12:0] \$256 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:269" *)
  wire [12:0] \$257 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:270" *)
  wire [12:0] \$259 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:270" *)
  wire [12:0] \$260 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:272" *)
  wire [13:0] \$262 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [12:0] \$263 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [8:0] \$265 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [9:0] \$267 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [13:0] \$269 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:215" *)
  wire [12:0] \$27 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:273" *)
  wire [12:0] \$271 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:273" *)
  wire [12:0] \$272 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:276" *)
  wire [13:0] \$274 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:276" *)
  wire [8:0] \$275 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [12:0] \$277 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [8:0] \$279 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [9:0] \$281 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [13:0] \$283 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:277" *)
  wire [12:0] \$285 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:277" *)
  wire [12:0] \$286 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:278" *)
  wire [12:0] \$288 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:278" *)
  wire [12:0] \$289 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$29 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:280" *)
  wire [13:0] \$291 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [12:0] \$292 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:280" *)
  wire [8:0] \$294 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [9:0] \$296 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [10:0] \$298 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$30 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [13:0] \$300 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:282" *)
  wire [12:0] \$302 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:282" *)
  wire [12:0] \$303 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:284" *)
  wire [13:0] \$305 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:284" *)
  wire [8:0] \$306 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [12:0] \$308 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:233" *)
  wire [11:0] \$31 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:284" *)
  wire [8:0] \$310 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [9:0] \$312 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [10:0] \$314 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [13:0] \$316 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:285" *)
  wire [12:0] \$318 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:285" *)
  wire [12:0] \$319 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:233" *)
  wire [11:0] \$32 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:286" *)
  wire [12:0] \$321 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:286" *)
  wire [12:0] \$322 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *)
  wire \$324 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:241" *)
  wire [11:0] \$326 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:241" *)
  wire [10:0] \$327 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *)
  wire \$330 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [11:0] \$332 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [8:0] \$333 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [9:0] \$335 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *)
  wire \$338 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$34 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [11:0] \$340 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [8:0] \$341 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [9:0] \$343 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *)
  wire \$346 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:244" *)
  wire [11:0] \$348 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [8:0] \$349 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [11:0] \$35 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [8:0] \$351 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [9:0] \$353 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [10:0] \$355 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *)
  wire \$358 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [11:0] \$36 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [11:0] \$360 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:245" *)
  wire [8:0] \$361 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [9:0] \$363 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [10:0] \$365 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *)
  wire \$368 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:246" *)
  wire [11:0] \$370 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:246" *)
  wire [10:0] \$371 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *)
  wire \$374 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [8:0] \$376 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:247" *)
  wire [8:0] \$378 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$38 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:247" *)
  wire [8:0] \$380 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [9:0] \$382 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [10:0] \$384 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [11:0] \$386 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *)
  wire \$388 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [11:0] \$390 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [8:0] \$391 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [9:0] \$393 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *)
  wire \$396 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [11:0] \$398 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:249" *)
  wire [8:0] \$399 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:215" *)
  wire [12:0] \$4 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$40 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [9:0] \$401 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [10:0] \$403 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *)
  wire \$406 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:250" *)
  wire [8:0] \$408 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [9:0] \$410 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:250" *)
  wire [8:0] \$412 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [9:0] \$414 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [10:0] \$416 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [11:0] \$418 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$42 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *)
  wire \$420 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:251" *)
  wire [11:0] \$422 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:251" *)
  wire [10:0] \$423 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *)
  wire \$426 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [11:0] \$428 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [8:0] \$429 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [9:0] \$431 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *)
  wire \$434 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:253" *)
  wire [8:0] \$436 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [9:0] \$438 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$44 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:253" *)
  wire [8:0] \$440 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [9:0] \$442 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [10:0] \$444 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [11:0] \$446 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *)
  wire \$448 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [11:0] \$450 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:254" *)
  wire [8:0] \$451 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [9:0] \$453 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [10:0] \$455 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *)
  wire \$458 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$46 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [11:0] \$460 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:255" *)
  wire [8:0] \$461 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [9:0] \$463 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [10:0] \$465 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *)
  wire \$468 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [11:0] \$47 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:256" *)
  wire [11:0] \$470 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:256" *)
  wire [10:0] \$471 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *)
  wire \$474 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *)
  wire \$476 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *)
  wire \$478 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [11:0] \$48 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *)
  wire \$480 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:324" *)
  wire \$482 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:328" *)
  wire [11:0] \$484 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:328" *)
  wire \$486 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:331" *)
  wire [11:0] \$488 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:331" *)
  wire [11:0] \$489 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:338" *)
  wire [11:0] \$491 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:338" *)
  wire \$493 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:341" *)
  wire [11:0] \$495 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:341" *)
  wire [11:0] \$496 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:324" *)
  wire \$498 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$50 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:326" *)
  wire [2:0] \$500 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:334" *)
  wire [11:0] \$502 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:334" *)
  wire [11:0] \$503 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:335" *)
  wire [11:0] \$505 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:335" *)
  wire [11:0] \$506 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$52 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$54 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$56 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$58 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [11:0] \$59 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:215" *)
  wire [12:0] \$6 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [11:0] \$60 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$62 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$64 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$66 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$68 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$70 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [11:0] \$71 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [11:0] \$72 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$74 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$76 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$78 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:215" *)
  wire [12:0] \$8 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$80 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$82 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:233" *)
  wire [11:0] \$83 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:233" *)
  wire [11:0] \$84 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$86 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [11:0] \$87 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [11:0] \$88 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:215" *)
  wire [11:0] \$9 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$90 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$92 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$94 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$96 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [127:0] \$98 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
  wire [11:0] \$99 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:179" *)
  output [191:0] data;
  reg [191:0] data = 192'h000000000000000000000000000000000000000000000000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:179" *)
  reg [191:0] \data$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:231" *)
  reg [11:0] data_tmp_0 = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:231" *)
  reg [11:0] \data_tmp_0$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:231" *)
  reg [11:0] data_tmp_1 = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:231" *)
  reg [11:0] \data_tmp_1$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:231" *)
  reg [11:0] data_tmp_10 = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:231" *)
  reg [11:0] \data_tmp_10$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:231" *)
  reg [11:0] data_tmp_11 = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:231" *)
  reg [11:0] \data_tmp_11$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:231" *)
  reg [11:0] data_tmp_12 = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:231" *)
  reg [11:0] \data_tmp_12$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:231" *)
  reg [11:0] data_tmp_13 = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:231" *)
  reg [11:0] \data_tmp_13$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:231" *)
  reg [11:0] data_tmp_14 = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:231" *)
  reg [11:0] \data_tmp_14$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:231" *)
  reg [11:0] data_tmp_15 = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:231" *)
  reg [11:0] \data_tmp_15$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:231" *)
  reg [11:0] data_tmp_2 = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:231" *)
  reg [11:0] \data_tmp_2$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:231" *)
  reg [11:0] data_tmp_3 = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:231" *)
  reg [11:0] \data_tmp_3$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:231" *)
  reg [11:0] data_tmp_4 = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:231" *)
  reg [11:0] \data_tmp_4$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:231" *)
  reg [11:0] data_tmp_5 = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:231" *)
  reg [11:0] \data_tmp_5$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:231" *)
  reg [11:0] data_tmp_6 = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:231" *)
  reg [11:0] \data_tmp_6$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:231" *)
  reg [11:0] data_tmp_7 = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:231" *)
  reg [11:0] \data_tmp_7$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:231" *)
  reg [11:0] data_tmp_8 = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:231" *)
  reg [11:0] \data_tmp_8$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:231" *)
  reg [11:0] data_tmp_9 = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:231" *)
  reg [11:0] \data_tmp_9$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:232" *)
  reg [7:0] late_tmp_0 = 8'h00;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:232" *)
  reg [7:0] \late_tmp_0$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:232" *)
  reg [7:0] late_tmp_1 = 8'h00;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:232" *)
  reg [7:0] \late_tmp_1$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:232" *)
  reg [7:0] late_tmp_2 = 8'h00;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:232" *)
  reg [7:0] \late_tmp_2$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:232" *)
  reg [7:0] late_tmp_3 = 8'h00;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:232" *)
  reg [7:0] \late_tmp_3$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:173" *)
  input [10:0] limit;
  wire [10:0] limit;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:177" *)
  output [8:0] mem_addr_0;
  wire [8:0] mem_addr_0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:177" *)
  output [8:0] mem_addr_1;
  wire [8:0] mem_addr_1;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:177" *)
  output [8:0] mem_addr_2;
  wire [8:0] mem_addr_2;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:177" *)
  output [8:0] mem_addr_3;
  wire [8:0] mem_addr_3;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:178" *)
  input [31:0] mem_data_0;
  wire [31:0] mem_data_0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:178" *)
  input [31:0] mem_data_1;
  wire [31:0] mem_data_1;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:178" *)
  input [31:0] mem_data_2;
  wire [31:0] mem_data_2;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:178" *)
  input [31:0] mem_data_3;
  wire [31:0] mem_data_3;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:180" *)
  input next;
  wire next;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:225" *)
  reg [10:0] r_addr = 11'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:225" *)
  reg [10:0] \r_addr$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:182" *)
  input restart;
  wire restart;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:275" *)
  wire [31:0] smr_0_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:272" *)
  wire [9:0] smr_0_limit;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:273" *)
  wire [8:0] smr_0_mem_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:274" *)
  wire [31:0] smr_0_mem_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:276" *)
  wire smr_0_next;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:277" *)
  wire smr_0_restart;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:275" *)
  wire [31:0] smr_1_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:272" *)
  wire [9:0] smr_1_limit;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:273" *)
  wire [8:0] smr_1_mem_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:274" *)
  wire [31:0] smr_1_mem_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:276" *)
  wire smr_1_next;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:277" *)
  wire smr_1_restart;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:275" *)
  wire [31:0] smr_2_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:272" *)
  wire [9:0] smr_2_limit;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:273" *)
  wire [8:0] smr_2_mem_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:274" *)
  wire [31:0] smr_2_mem_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:276" *)
  wire smr_2_next;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:277" *)
  wire smr_2_restart;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:275" *)
  wire [31:0] smr_3_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:272" *)
  wire [9:0] smr_3_limit;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:273" *)
  wire [8:0] smr_3_mem_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:274" *)
  wire [31:0] smr_3_mem_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:276" *)
  wire smr_3_next;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:277" *)
  wire smr_3_restart;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:209" *)
  wire [31:0] smr_data_0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:209" *)
  wire [31:0] smr_data_1;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:209" *)
  wire [31:0] smr_data_2;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:209" *)
  wire [31:0] smr_data_3;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:210" *)
  reg smr_next_0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:210" *)
  reg smr_next_1;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:210" *)
  reg smr_next_2;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:210" *)
  reg smr_next_3;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:183" *)
  input switch_PorD;
  wire switch_PorD;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:230" *)
  reg [127:0] tmp;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:181" *)
  input updated;
  wire updated;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:206" *)
  reg was_updated = 1'h0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:206" *)
  reg \was_updated$next ;
  assign \$9  = limit + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:215" *) 2'h3;
  assign \$100  = r_addr + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) 2'h2;
  assign \$102  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_0, smr_data_1, smr_data_1 };
  assign \$104  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_1, smr_data_1, smr_data_1 };
  assign \$106  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_2, smr_data_1, smr_data_1 };
  assign \$108  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_3, smr_data_1, smr_data_1 };
  assign \$112  = r_addr + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) 2'h2;
  assign \$114  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_0, smr_data_2, smr_data_1 };
  assign \$116  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_1, smr_data_2, smr_data_1 };
  assign \$118  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_2, smr_data_2, smr_data_1 };
  assign \$11  = \$9  - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:215" *) 1'h1;
  assign \$120  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_3, smr_data_2, smr_data_1 };
  assign \$124  = r_addr + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) 2'h2;
  assign \$126  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_0, smr_data_3, smr_data_1 };
  assign \$128  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_1, smr_data_3, smr_data_1 };
  assign \$130  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_2, smr_data_3, smr_data_1 };
  assign \$132  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_3, smr_data_3, smr_data_1 };
  assign \$136  = r_addr + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:233" *) 1'h1;
  assign \$140  = r_addr + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) 2'h2;
  assign \$142  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_0, smr_data_0, smr_data_2 };
  assign \$144  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_1, smr_data_0, smr_data_2 };
  assign \$146  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_2, smr_data_0, smr_data_2 };
  assign \$148  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_3, smr_data_0, smr_data_2 };
  assign \$152  = r_addr + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) 2'h2;
  assign \$154  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_0, smr_data_1, smr_data_2 };
  assign \$156  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_1, smr_data_1, smr_data_2 };
  assign \$158  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_2, smr_data_1, smr_data_2 };
  assign \$160  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_3, smr_data_1, smr_data_2 };
  assign \$164  = r_addr + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) 2'h2;
  assign \$166  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_0, smr_data_2, smr_data_2 };
  assign \$168  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_1, smr_data_2, smr_data_2 };
  assign \$16  = limit + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:215" *) 2'h3;
  assign \$170  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_2, smr_data_2, smr_data_2 };
  assign \$172  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_3, smr_data_2, smr_data_2 };
  assign \$176  = r_addr + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) 2'h2;
  assign \$178  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_0, smr_data_3, smr_data_2 };
  assign \$180  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_1, smr_data_3, smr_data_2 };
  assign \$182  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_2, smr_data_3, smr_data_2 };
  assign \$184  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_3, smr_data_3, smr_data_2 };
  assign \$188  = r_addr + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:233" *) 1'h1;
  assign \$18  = \$16  - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:215" *) 2'h2;
  assign \$192  = r_addr + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) 2'h2;
  assign \$194  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_0, smr_data_0, smr_data_3 };
  assign \$196  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_1, smr_data_0, smr_data_3 };
  assign \$198  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_2, smr_data_0, smr_data_3 };
  assign \$200  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_3, smr_data_0, smr_data_3 };
  assign \$204  = r_addr + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) 2'h2;
  assign \$206  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_0, smr_data_1, smr_data_3 };
  assign \$208  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_1, smr_data_1, smr_data_3 };
  assign \$210  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_2, smr_data_1, smr_data_3 };
  assign \$212  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_3, smr_data_1, smr_data_3 };
  assign \$216  = r_addr + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) 2'h2;
  assign \$218  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_0, smr_data_2, smr_data_3 };
  assign \$220  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_1, smr_data_2, smr_data_3 };
  assign \$222  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_2, smr_data_2, smr_data_3 };
  assign \$224  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_3, smr_data_2, smr_data_3 };
  assign \$228  = r_addr + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) 2'h2;
  assign \$230  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_0, smr_data_3, smr_data_3 };
  assign \$232  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_1, smr_data_3, smr_data_3 };
  assign \$234  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_2, smr_data_3, smr_data_3 };
  assign \$236  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_3, smr_data_3, smr_data_3 };
  assign \$238  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *) switch_PorD;
  assign \$23  = limit + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:215" *) 2'h3;
  assign \$240  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:238" *) $signed(tmp[7:0]);
  assign \$242  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:238" *) $signed(tmp[15:8]);
  assign \$244  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:238" *) $signed(tmp[23:16]);
  assign \$246  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:238" *) $signed(tmp[31:24]);
  assign \$248  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:238" *) $signed(tmp[39:32]);
  assign \$250  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:238" *) $signed(tmp[47:40]);
  assign \$252  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:238" *) $signed(tmp[55:48]);
  assign \$254  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:238" *) $signed(tmp[63:56]);
  assign \$25  = \$23  - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:215" *) 2'h3;
  assign \$263  = $signed(data_tmp_3) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(late_tmp_0);
  assign \$265  = $signed(late_tmp_2) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(late_tmp_3);
  assign \$267  = $signed(late_tmp_1) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$265 );
  assign \$269  = $signed(\$263 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$267 );
  assign \$275  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:276" *) $signed(late_tmp_0);
  assign \$277  = $signed(data_tmp_6) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$275 );
  assign \$279  = $signed(late_tmp_2) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(late_tmp_3);
  assign \$281  = $signed(late_tmp_1) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$279 );
  assign \$283  = $signed(\$277 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$281 );
  assign \$292  = $signed(data_tmp_9) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(late_tmp_0);
  assign \$294  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:280" *) $signed(late_tmp_2);
  assign \$296  = $signed(\$294 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(late_tmp_3);
  assign \$298  = $signed(late_tmp_1) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$296 );
  assign \$2  = limit + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:215" *) 2'h3;
  assign \$300  = $signed(\$292 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$298 );
  assign \$306  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:284" *) $signed(late_tmp_0);
  assign \$308  = $signed(data_tmp_12) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$306 );
  assign \$310  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:284" *) $signed(late_tmp_2);
  assign \$312  = $signed(\$310 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(late_tmp_3);
  assign \$314  = $signed(late_tmp_1) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$312 );
  assign \$316  = $signed(\$308 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$314 );
  assign \$324  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *) switch_PorD;
  assign \$326  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:241" *) $signed(\$327 );
  assign \$32  = r_addr + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:233" *) 1'h1;
  assign \$330  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *) switch_PorD;
  assign \$333  = $signed(tmp[15:8]) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(tmp[23:16]);
  assign \$335  = $signed(tmp[7:0]) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$333 );
  assign \$332  = + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$335 );
  assign \$338  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *) switch_PorD;
  assign \$341  = $signed(tmp[31:24]) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(tmp[55:48]);
  assign \$343  = $signed(tmp[7:0]) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$341 );
  assign \$340  = + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$343 );
  assign \$346  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *) switch_PorD;
  assign \$349  = $signed(tmp[7:0]) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(tmp[31:24]);
  assign \$351  = $signed(tmp[15:8]) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(tmp[39:32]);
  assign \$353  = $signed(tmp[55:48]) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$351 );
  assign \$355  = $signed(\$349 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$353 );
  assign \$348  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:244" *) $signed(\$355 );
  assign \$358  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *) switch_PorD;
  assign \$361  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:245" *) $signed(tmp[15:8]);
  assign \$363  = $signed(\$361 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(tmp[23:16]);
  assign \$365  = $signed(tmp[7:0]) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$363 );
  assign \$360  = + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$365 );
  assign \$368  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *) switch_PorD;
  assign \$36  = r_addr + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) 2'h2;
  assign \$370  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:246" *) $signed(\$371 );
  assign \$374  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *) switch_PorD;
  assign \$376  = $signed(tmp[7:0]) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(tmp[31:24]);
  assign \$378  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:247" *) $signed(tmp[15:8]);
  assign \$380  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:247" *) $signed(tmp[39:32]);
  assign \$382  = $signed(\$378 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$380 );
  assign \$384  = $signed(tmp[55:48]) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$382 );
  assign \$386  = $signed(\$376 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$384 );
  assign \$388  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *) switch_PorD;
  assign \$38  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_0, smr_data_0, smr_data_0 };
  assign \$391  = $signed(tmp[47:40]) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(tmp[71:64]);
  assign \$393  = $signed(tmp[23:16]) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$391 );
  assign \$390  = + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$393 );
  assign \$396  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *) switch_PorD;
  assign \$399  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:249" *) $signed(tmp[31:24]);
  assign \$401  = $signed(\$399 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(tmp[55:48]);
  assign \$403  = $signed(tmp[7:0]) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$401 );
  assign \$398  = + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$403 );
  assign \$406  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *) switch_PorD;
  assign \$408  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:250" *) $signed(tmp[31:24]);
  assign \$40  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_1, smr_data_0, smr_data_0 };
  assign \$410  = $signed(tmp[7:0]) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$408 );
  assign \$412  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:250" *) $signed(tmp[39:32]);
  assign \$414  = $signed(tmp[15:8]) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$412 );
  assign \$416  = $signed(tmp[55:48]) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$414 );
  assign \$418  = $signed(\$410 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$416 );
  assign \$420  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *) switch_PorD;
  assign \$422  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:251" *) $signed(\$423 );
  assign \$426  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *) switch_PorD;
  assign \$42  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_2, smr_data_0, smr_data_0 };
  assign \$429  = $signed(tmp[63:56]) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(tmp[71:64]);
  assign \$431  = $signed(tmp[55:48]) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$429 );
  assign \$428  = + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$431 );
  assign \$434  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *) switch_PorD;
  assign \$436  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:253" *) $signed(tmp[31:24]);
  assign \$438  = $signed(tmp[7:0]) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$436 );
  assign \$440  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:253" *) $signed(tmp[15:8]);
  assign \$442  = $signed(\$440 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(tmp[39:32]);
  assign \$444  = $signed(tmp[55:48]) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$442 );
  assign \$446  = $signed(\$438 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$444 );
  assign \$448  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *) switch_PorD;
  assign \$44  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_3, smr_data_0, smr_data_0 };
  assign \$451  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:254" *) $signed(tmp[47:40]);
  assign \$453  = $signed(\$451 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(tmp[71:64]);
  assign \$455  = $signed(tmp[23:16]) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$453 );
  assign \$450  = + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$455 );
  assign \$458  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *) switch_PorD;
  assign \$461  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:255" *) $signed(tmp[63:56]);
  assign \$463  = $signed(\$461 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(tmp[71:64]);
  assign \$465  = $signed(tmp[55:48]) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$463 );
  assign \$460  = + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$465 );
  assign \$468  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *) switch_PorD;
  assign \$470  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:256" *) $signed(\$471 );
  assign \$474  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *) switch_PorD;
  assign \$476  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *) switch_PorD;
  assign \$478  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *) switch_PorD;
  assign \$480  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *) switch_PorD;
  assign \$482  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:324" *) switch_PorD;
  assign \$484  = limit - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:328" *) 2'h2;
  assign \$486  = r_addr == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:328" *) \$484 ;
  assign \$48  = r_addr + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) 2'h2;
  assign \$489  = r_addr + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:331" *) 2'h2;
  assign \$491  = limit - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:338" *) 2'h3;
  assign \$493  = r_addr == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:338" *) \$491 ;
  assign \$496  = r_addr + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:341" *) 2'h3;
  assign \$498  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:324" *) switch_PorD;
  assign \$4  = \$2  - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:215" *) 1'h0;
  assign \$500  = r_addr[1:0] + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:326" *) 1'h1;
  assign \$503  = r_addr + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:334" *) 1'h1;
  assign \$506  = r_addr + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:335" *) 2'h2;
  always @(posedge clk)
    was_updated <= \was_updated$next ;
  always @(posedge clk)
    data <= \data$next ;
  assign \$50  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_0, smr_data_1, smr_data_0 };
  always @(posedge clk)
    data_tmp_0 <= \data_tmp_0$next ;
  always @(posedge clk)
    data_tmp_1 <= \data_tmp_1$next ;
  always @(posedge clk)
    data_tmp_2 <= \data_tmp_2$next ;
  always @(posedge clk)
    data_tmp_3 <= \data_tmp_3$next ;
  always @(posedge clk)
    data_tmp_4 <= \data_tmp_4$next ;
  always @(posedge clk)
    data_tmp_5 <= \data_tmp_5$next ;
  always @(posedge clk)
    data_tmp_6 <= \data_tmp_6$next ;
  always @(posedge clk)
    data_tmp_7 <= \data_tmp_7$next ;
  always @(posedge clk)
    data_tmp_8 <= \data_tmp_8$next ;
  always @(posedge clk)
    data_tmp_9 <= \data_tmp_9$next ;
  always @(posedge clk)
    data_tmp_10 <= \data_tmp_10$next ;
  always @(posedge clk)
    data_tmp_11 <= \data_tmp_11$next ;
  always @(posedge clk)
    data_tmp_12 <= \data_tmp_12$next ;
  always @(posedge clk)
    data_tmp_13 <= \data_tmp_13$next ;
  always @(posedge clk)
    data_tmp_14 <= \data_tmp_14$next ;
  always @(posedge clk)
    data_tmp_15 <= \data_tmp_15$next ;
  always @(posedge clk)
    late_tmp_0 <= \late_tmp_0$next ;
  always @(posedge clk)
    late_tmp_1 <= \late_tmp_1$next ;
  always @(posedge clk)
    late_tmp_2 <= \late_tmp_2$next ;
  always @(posedge clk)
    late_tmp_3 <= \late_tmp_3$next ;
  assign \$52  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_1, smr_data_1, smr_data_0 };
  always @(posedge clk)
    r_addr <= \r_addr$next ;
  assign \$54  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_2, smr_data_1, smr_data_0 };
  assign \$56  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_3, smr_data_1, smr_data_0 };
  assign \$60  = r_addr + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) 2'h2;
  assign \$62  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_0, smr_data_2, smr_data_0 };
  assign \$64  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_1, smr_data_2, smr_data_0 };
  assign \$66  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_2, smr_data_2, smr_data_0 };
  assign \$68  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_3, smr_data_2, smr_data_0 };
  assign \$72  = r_addr + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) 2'h2;
  assign \$74  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_0, smr_data_3, smr_data_0 };
  assign \$76  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_1, smr_data_3, smr_data_0 };
  assign \$78  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_2, smr_data_3, smr_data_0 };
  assign \$80  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_3, smr_data_3, smr_data_0 };
  assign \$84  = r_addr + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:233" *) 1'h1;
  assign \$88  = r_addr + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) 2'h2;
  assign \$90  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_0, smr_data_0, smr_data_1 };
  assign \$92  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_1, smr_data_0, smr_data_1 };
  assign \$94  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_2, smr_data_0, smr_data_1 };
  assign \$96  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *) { smr_data_3, smr_data_0, smr_data_1 };
  smr_0 smr_0 (
    .clk(clk),
    .data(smr_0_data),
    .limit(smr_0_limit),
    .mem_addr(smr_0_mem_addr),
    .mem_data(smr_0_mem_data),
    .next(smr_0_next),
    .restart(smr_0_restart),
    .rst(rst)
  );
  smr_1 smr_1 (
    .clk(clk),
    .data(smr_1_data),
    .limit(smr_1_limit),
    .mem_addr(smr_1_mem_addr),
    .mem_data(smr_1_mem_data),
    .next(smr_1_next),
    .restart(smr_1_restart),
    .rst(rst)
  );
  smr_2 smr_2 (
    .clk(clk),
    .data(smr_2_data),
    .limit(smr_2_limit),
    .mem_addr(smr_2_mem_addr),
    .mem_data(smr_2_mem_data),
    .next(smr_2_next),
    .restart(smr_2_restart),
    .rst(rst)
  );
  smr_3 smr_3 (
    .clk(clk),
    .data(smr_3_data),
    .limit(smr_3_limit),
    .mem_addr(smr_3_mem_addr),
    .mem_data(smr_3_mem_data),
    .next(smr_3_next),
    .restart(smr_3_restart),
    .rst(rst)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$11 ) begin end
    \was_updated$next  = updated;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \was_updated$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$11 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:233" *)
    casez (r_addr[1:0])
      2'h0:
          (* full_case = 32'd1 *)
          (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:233" *)
          casez (\$31 [1:0])
            2'h0:
                (* full_case = 32'd1 *)
                (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
                casez (\$35 [1:0])
                  2'h0:
                      tmp = \$38 ;
                  2'h1:
                      tmp = \$40 ;
                  2'h2:
                      tmp = \$42 ;
                  2'h?:
                      tmp = \$44 ;
                endcase
            2'h1:
                (* full_case = 32'd1 *)
                (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
                casez (\$47 [1:0])
                  2'h0:
                      tmp = \$50 ;
                  2'h1:
                      tmp = \$52 ;
                  2'h2:
                      tmp = \$54 ;
                  2'h?:
                      tmp = \$56 ;
                endcase
            2'h2:
                (* full_case = 32'd1 *)
                (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
                casez (\$59 [1:0])
                  2'h0:
                      tmp = \$62 ;
                  2'h1:
                      tmp = \$64 ;
                  2'h2:
                      tmp = \$66 ;
                  2'h?:
                      tmp = \$68 ;
                endcase
            2'h?:
                (* full_case = 32'd1 *)
                (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
                casez (\$71 [1:0])
                  2'h0:
                      tmp = \$74 ;
                  2'h1:
                      tmp = \$76 ;
                  2'h2:
                      tmp = \$78 ;
                  2'h?:
                      tmp = \$80 ;
                endcase
          endcase
      2'h1:
          (* full_case = 32'd1 *)
          (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:233" *)
          casez (\$83 [1:0])
            2'h0:
                (* full_case = 32'd1 *)
                (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
                casez (\$87 [1:0])
                  2'h0:
                      tmp = \$90 ;
                  2'h1:
                      tmp = \$92 ;
                  2'h2:
                      tmp = \$94 ;
                  2'h?:
                      tmp = \$96 ;
                endcase
            2'h1:
                (* full_case = 32'd1 *)
                (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
                casez (\$99 [1:0])
                  2'h0:
                      tmp = \$102 ;
                  2'h1:
                      tmp = \$104 ;
                  2'h2:
                      tmp = \$106 ;
                  2'h?:
                      tmp = \$108 ;
                endcase
            2'h2:
                (* full_case = 32'd1 *)
                (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
                casez (\$111 [1:0])
                  2'h0:
                      tmp = \$114 ;
                  2'h1:
                      tmp = \$116 ;
                  2'h2:
                      tmp = \$118 ;
                  2'h?:
                      tmp = \$120 ;
                endcase
            2'h?:
                (* full_case = 32'd1 *)
                (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
                casez (\$123 [1:0])
                  2'h0:
                      tmp = \$126 ;
                  2'h1:
                      tmp = \$128 ;
                  2'h2:
                      tmp = \$130 ;
                  2'h?:
                      tmp = \$132 ;
                endcase
          endcase
      2'h2:
          (* full_case = 32'd1 *)
          (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:233" *)
          casez (\$135 [1:0])
            2'h0:
                (* full_case = 32'd1 *)
                (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
                casez (\$139 [1:0])
                  2'h0:
                      tmp = \$142 ;
                  2'h1:
                      tmp = \$144 ;
                  2'h2:
                      tmp = \$146 ;
                  2'h?:
                      tmp = \$148 ;
                endcase
            2'h1:
                (* full_case = 32'd1 *)
                (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
                casez (\$151 [1:0])
                  2'h0:
                      tmp = \$154 ;
                  2'h1:
                      tmp = \$156 ;
                  2'h2:
                      tmp = \$158 ;
                  2'h?:
                      tmp = \$160 ;
                endcase
            2'h2:
                (* full_case = 32'd1 *)
                (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
                casez (\$163 [1:0])
                  2'h0:
                      tmp = \$166 ;
                  2'h1:
                      tmp = \$168 ;
                  2'h2:
                      tmp = \$170 ;
                  2'h?:
                      tmp = \$172 ;
                endcase
            2'h?:
                (* full_case = 32'd1 *)
                (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
                casez (\$175 [1:0])
                  2'h0:
                      tmp = \$178 ;
                  2'h1:
                      tmp = \$180 ;
                  2'h2:
                      tmp = \$182 ;
                  2'h?:
                      tmp = \$184 ;
                endcase
          endcase
      2'h?:
          (* full_case = 32'd1 *)
          (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:233" *)
          casez (\$187 [1:0])
            2'h0:
                (* full_case = 32'd1 *)
                (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
                casez (\$191 [1:0])
                  2'h0:
                      tmp = \$194 ;
                  2'h1:
                      tmp = \$196 ;
                  2'h2:
                      tmp = \$198 ;
                  2'h?:
                      tmp = \$200 ;
                endcase
            2'h1:
                (* full_case = 32'd1 *)
                (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
                casez (\$203 [1:0])
                  2'h0:
                      tmp = \$206 ;
                  2'h1:
                      tmp = \$208 ;
                  2'h2:
                      tmp = \$210 ;
                  2'h?:
                      tmp = \$212 ;
                endcase
            2'h2:
                (* full_case = 32'd1 *)
                (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
                casez (\$215 [1:0])
                  2'h0:
                      tmp = \$218 ;
                  2'h1:
                      tmp = \$220 ;
                  2'h2:
                      tmp = \$222 ;
                  2'h?:
                      tmp = \$224 ;
                endcase
            2'h?:
                (* full_case = 32'd1 *)
                (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:234" *)
                casez (\$227 [1:0])
                  2'h0:
                      tmp = \$230 ;
                  2'h1:
                      tmp = \$232 ;
                  2'h2:
                      tmp = \$234 ;
                  2'h?:
                      tmp = \$236 ;
                endcase
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$11 ) begin end
    \data$next [191:96] = data[191:96];
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *)
    casez (\$238 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" */
      1'h1:
        begin
          \data$next [11:0] = \$240 ;
          \data$next [23:12] = \$242 ;
          \data$next [35:24] = \$244 ;
          \data$next [47:36] = \$246 ;
          \data$next [59:48] = \$248 ;
          \data$next [71:60] = \$250 ;
          \data$next [83:72] = \$252 ;
          \data$next [95:84] = \$254 ;
        end
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:240" */
      default:
        begin
          \data$next [11:0] = data_tmp_0;
          \data$next [23:12] = \$257 [11:0];
          \data$next [35:24] = \$260 [11:0];
          \data$next [47:36] = \$269 [11:0];
          \data$next [59:48] = \$272 [11:0];
          \data$next [71:60] = data_tmp_5;
          \data$next [83:72] = \$283 [11:0];
          \data$next [95:84] = \$286 [11:0];
          \data$next [107:96] = \$289 [11:0];
          \data$next [119:108] = \$300 [11:0];
          \data$next [131:120] = data_tmp_10;
          \data$next [143:132] = \$303 [11:0];
          \data$next [155:144] = \$316 [11:0];
          \data$next [167:156] = \$319 [11:0];
          \data$next [179:168] = \$322 [11:0];
          \data$next [191:180] = data_tmp_15;
        end
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \data$next  = 192'h000000000000000000000000000000000000000000000000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$11 ) begin end
    \data_tmp_0$next  = data_tmp_0;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *)
    casez (\$324 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:240" */
      default:
          \data_tmp_0$next  = \$326 ;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \data_tmp_0$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$11 ) begin end
    \data_tmp_1$next  = data_tmp_1;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *)
    casez (\$330 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:240" */
      default:
          \data_tmp_1$next  = \$332 ;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \data_tmp_1$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$11 ) begin end
    \data_tmp_2$next  = data_tmp_2;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *)
    casez (\$338 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:240" */
      default:
          \data_tmp_2$next  = \$340 ;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \data_tmp_2$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$11 ) begin end
    \data_tmp_3$next  = data_tmp_3;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *)
    casez (\$346 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:240" */
      default:
          \data_tmp_3$next  = \$348 ;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \data_tmp_3$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$11 ) begin end
    \data_tmp_4$next  = data_tmp_4;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *)
    casez (\$358 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:240" */
      default:
          \data_tmp_4$next  = \$360 ;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \data_tmp_4$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$11 ) begin end
    \data_tmp_5$next  = data_tmp_5;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *)
    casez (\$368 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:240" */
      default:
          \data_tmp_5$next  = \$370 ;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \data_tmp_5$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$11 ) begin end
    \data_tmp_6$next  = data_tmp_6;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *)
    casez (\$374 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:240" */
      default:
          \data_tmp_6$next  = \$386 ;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \data_tmp_6$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$11 ) begin end
    \data_tmp_7$next  = data_tmp_7;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *)
    casez (\$388 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:240" */
      default:
          \data_tmp_7$next  = \$390 ;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \data_tmp_7$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$11 ) begin end
    \data_tmp_8$next  = data_tmp_8;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *)
    casez (\$396 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:240" */
      default:
          \data_tmp_8$next  = \$398 ;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \data_tmp_8$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$11 ) begin end
    \data_tmp_9$next  = data_tmp_9;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *)
    casez (\$406 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:240" */
      default:
          \data_tmp_9$next  = \$418 ;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \data_tmp_9$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$11 ) begin end
    \data_tmp_10$next  = data_tmp_10;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *)
    casez (\$420 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:240" */
      default:
          \data_tmp_10$next  = \$422 ;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \data_tmp_10$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$11 ) begin end
    \data_tmp_11$next  = data_tmp_11;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *)
    casez (\$426 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:240" */
      default:
          \data_tmp_11$next  = \$428 ;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \data_tmp_11$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$11 ) begin end
    \data_tmp_12$next  = data_tmp_12;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *)
    casez (\$434 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:240" */
      default:
          \data_tmp_12$next  = \$446 ;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \data_tmp_12$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$11 ) begin end
    \data_tmp_13$next  = data_tmp_13;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *)
    casez (\$448 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:240" */
      default:
          \data_tmp_13$next  = \$450 ;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \data_tmp_13$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$11 ) begin end
    \data_tmp_14$next  = data_tmp_14;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *)
    casez (\$458 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:240" */
      default:
          \data_tmp_14$next  = \$460 ;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \data_tmp_14$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$11 ) begin end
    \data_tmp_15$next  = data_tmp_15;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *)
    casez (\$468 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:240" */
      default:
          \data_tmp_15$next  = \$470 ;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \data_tmp_15$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$11 ) begin end
    \late_tmp_0$next  = late_tmp_0;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *)
    casez (\$474 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:240" */
      default:
          \late_tmp_0$next  = tmp[63:56];
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \late_tmp_0$next  = 8'h00;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$11 ) begin end
    \late_tmp_1$next  = late_tmp_1;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *)
    casez (\$476 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:240" */
      default:
          \late_tmp_1$next  = tmp[23:16];
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \late_tmp_1$next  = 8'h00;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$11 ) begin end
    \late_tmp_2$next  = late_tmp_2;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *)
    casez (\$478 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:240" */
      default:
          \late_tmp_2$next  = tmp[47:40];
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \late_tmp_2$next  = 8'h00;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$11 ) begin end
    \late_tmp_3$next  = late_tmp_3;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" *)
    casez (\$480 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:237" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:240" */
      default:
          \late_tmp_3$next  = tmp[71:64];
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \late_tmp_3$next  = 8'h00;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$11 ) begin end
    \r_addr$next  = r_addr;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:321" *)
    casez ({ next, restart })
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:321" */
      2'b?1:
          \r_addr$next  = 11'h000;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:323" */
      2'b1?:
          (* full_case = 32'd1 *)
          (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:324" *)
          casez (\$482 )
            /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:324" */
            1'h1:
                (* full_case = 32'd1 *)
                (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:328" *)
                casez (\$486 )
                  /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:328" */
                  1'h1:
                      \r_addr$next  = 11'h000;
                  /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:330" */
                  default:
                      \r_addr$next  = \$489 [10:0];
                endcase
            /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:332" */
            default:
                (* full_case = 32'd1 *)
                (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:338" *)
                casez (\$493 )
                  /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:338" */
                  1'h1:
                      \r_addr$next  = 11'h000;
                  /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:340" */
                  default:
                      \r_addr$next  = \$496 [10:0];
                endcase
          endcase
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \r_addr$next  = 11'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$11 ) begin end
    smr_next_0 = 1'h0;
    smr_next_1 = 1'h0;
    smr_next_2 = 1'h0;
    smr_next_3 = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:321" *)
    casez ({ next, restart })
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:321" */
      2'b?1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:323" */
      2'b1?:
          (* full_case = 32'd1 *)
          (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:324" *)
          casez (\$498 )
            /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:324" */
            1'h1:
              begin
                (* full_case = 32'd1 *)
                (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:325" *)
                casez (r_addr[1:0])
                  2'h0:
                      smr_next_0 = 1'h1;
                  2'h1:
                      smr_next_1 = 1'h1;
                  2'h2:
                      smr_next_2 = 1'h1;
                  2'h?:
                      smr_next_3 = 1'h1;
                endcase
                (* full_case = 32'd1 *)
                (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:326" *)
                casez (\$500 )
                  3'h0:
                      smr_next_0 = 1'h1;
                  3'h1:
                      smr_next_1 = 1'h1;
                  3'h2:
                      smr_next_2 = 1'h1;
                  3'h?:
                      smr_next_3 = 1'h1;
                endcase
              end
            /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:332" */
            default:
              begin
                (* full_case = 32'd1 *)
                (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:333" *)
                casez (r_addr[1:0])
                  2'h0:
                      smr_next_0 = 1'h1;
                  2'h1:
                      smr_next_1 = 1'h1;
                  2'h2:
                      smr_next_2 = 1'h1;
                  2'h?:
                      smr_next_3 = 1'h1;
                endcase
                (* full_case = 32'd1 *)
                (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:334" *)
                casez (\$502 [1:0])
                  2'h0:
                      smr_next_0 = 1'h1;
                  2'h1:
                      smr_next_1 = 1'h1;
                  2'h2:
                      smr_next_2 = 1'h1;
                  2'h?:
                      smr_next_3 = 1'h1;
                endcase
                (* full_case = 32'd1 *)
                (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:335" *)
                casez (\$505 [1:0])
                  2'h0:
                      smr_next_0 = 1'h1;
                  2'h1:
                      smr_next_1 = 1'h1;
                  2'h2:
                      smr_next_2 = 1'h1;
                  2'h?:
                      smr_next_3 = 1'h1;
                endcase
              end
          endcase
    endcase
  end
  assign \$1  = \$6 ;
  assign \$8  = \$13 ;
  assign \$15  = \$20 ;
  assign \$22  = \$27 ;
  assign \$31  = \$32 ;
  assign \$35  = \$36 ;
  assign \$47  = \$48 ;
  assign \$59  = \$60 ;
  assign \$71  = \$72 ;
  assign \$83  = \$84 ;
  assign \$87  = \$88 ;
  assign \$99  = \$100 ;
  assign \$111  = \$112 ;
  assign \$123  = \$124 ;
  assign \$135  = \$136 ;
  assign \$139  = \$140 ;
  assign \$151  = \$152 ;
  assign \$163  = \$164 ;
  assign \$175  = \$176 ;
  assign \$187  = \$188 ;
  assign \$191  = \$192 ;
  assign \$203  = \$204 ;
  assign \$215  = \$216 ;
  assign \$227  = \$228 ;
  assign \$256  = \$257 ;
  assign \$259  = \$260 ;
  assign \$262  = \$269 ;
  assign \$271  = \$272 ;
  assign \$274  = \$283 ;
  assign \$285  = \$286 ;
  assign \$288  = \$289 ;
  assign \$291  = \$300 ;
  assign \$302  = \$303 ;
  assign \$305  = \$316 ;
  assign \$318  = \$319 ;
  assign \$321  = \$322 ;
  assign \$488  = \$489 ;
  assign \$495  = \$496 ;
  assign \$502  = \$503 ;
  assign \$505  = \$506 ;
  assign smr_3_restart = was_updated;
  assign smr_3_next = smr_next_3;
  assign smr_data_3 = smr_3_data;
  assign smr_3_mem_data = mem_data_3;
  assign mem_addr_3 = smr_3_mem_addr;
  assign smr_3_limit = \$27 [9:0];
  assign smr_2_restart = was_updated;
  assign smr_2_next = smr_next_2;
  assign smr_data_2 = smr_2_data;
  assign smr_2_mem_data = mem_data_2;
  assign mem_addr_2 = smr_2_mem_addr;
  assign smr_2_limit = \$20 [9:0];
  assign smr_1_restart = was_updated;
  assign smr_1_next = smr_next_1;
  assign smr_data_1 = smr_1_data;
  assign smr_1_mem_data = mem_data_1;
  assign mem_addr_1 = smr_1_mem_addr;
  assign smr_1_limit = \$13 [9:0];
  assign smr_0_restart = was_updated;
  assign smr_0_next = smr_next_0;
  assign smr_data_0 = smr_0_data;
  assign smr_0_mem_data = mem_data_0;
  assign mem_addr_0 = smr_0_mem_addr;
  assign smr_0_limit = \$6 [9:0];
  assign \$6  = { 2'h0, \$4 [12:2] };
  assign \$13  = { 2'h0, \$11 [12:2] };
  assign \$20  = { 2'h0, \$18 [12:2] };
  assign \$27  = { 2'h0, \$25 [12:2] };
  assign \$257  = { data_tmp_1, 1'h0 };
  assign \$260  = { data_tmp_2, 1'h0 };
  assign \$272  = { data_tmp_4, 1'h0 };
  assign \$286  = { data_tmp_7, 1'h0 };
  assign \$289  = { data_tmp_8, 1'h0 };
  assign \$303  = { data_tmp_11, 1'h0 };
  assign \$319  = { data_tmp_13, 1'h0 };
  assign \$322  = { data_tmp_14, 1'h0 };
  assign \$327  = { tmp[7], tmp[7:0], 2'h0 };
  assign \$371  = { tmp[23], tmp[23:16], 2'h0 };
  assign \$423  = { tmp[55], tmp[55:48], 2'h0 };
  assign \$471  = { tmp[71], tmp[71:64], 2'h0 };
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.seq.gate_calc" *)
(* generator = "Amaranth" *)
module gate_calc(clk, start_run, in_store_ready, fifo_has_space, all_output_finished, gate, rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$12  = 0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:107" *)
  wire \$1 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:107" *)
  wire \$3 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:107" *)
  wire \$5 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:92" *)
  input all_output_finished;
  wire all_output_finished;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:94" *)
  input fifo_has_space;
  wire fifo_has_space;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:95" *)
  output gate;
  wire gate;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:93" *)
  input in_store_ready;
  wire in_store_ready;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:99" *)
  reg running = 1'h0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:99" *)
  reg \running$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:91" *)
  input start_run;
  wire start_run;
  assign \$1  = running | (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:107" *) start_run;
  assign \$3  = \$1  & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:107" *) in_store_ready;
  assign \$5  = \$3  & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:107" *) fifo_has_space;
  always @(posedge clk)
    running <= \running$next ;
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$12 ) begin end
    \running$next  = running;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:100" *)
    casez (start_run)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:100" */
      1'h1:
          \running$next  = 1'h1;
    endcase
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:102" *)
    casez (all_output_finished)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:102" */
      1'h1:
          \running$next  = 1'h0;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \running$next  = 1'h0;
    endcase
  end
  assign gate = \$5 ;
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.seq.i_count" *)
(* generator = "Amaranth" *)
module i_count(clk, restart, done, max, en, rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$13  = 0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:63" *)
  wire [11:0] \$1 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:62" *)
  wire [11:0] \$10 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:67" *)
  wire \$12 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:63" *)
  wire [11:0] \$2 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:63" *)
  wire [11:0] \$4 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:62" *)
  wire [11:0] \$5 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:63" *)
  wire \$7 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:61" *)
  reg [10:0] count = 11'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:61" *)
  reg [10:0] \count$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:57" *)
  output done;
  reg done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:56" *)
  input en;
  wire en;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:58" *)
  input [10:0] max;
  wire [10:0] max;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:55" *)
  input restart;
  wire restart;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  assign \$10  = max - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:62" *) 1'h1;
  assign \$12  = count == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:67" *) \$10 ;
  always @(posedge clk)
    count <= \count$next ;
  assign \$2  = count + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:63" *) 1'h1;
  assign \$5  = max - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:62" *) 1'h1;
  assign \$7  = count == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:63" *) \$5 ;
  assign \$4  = \$7  ? (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:63" *) 12'h000 : \$2 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$13 ) begin end
    \count$next  = count;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:65" *)
    casez (en)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:65" */
      1'h1:
          \count$next  = \$4 [10:0];
    endcase
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:69" *)
    casez (restart)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:69" */
      1'h1:
          \count$next  = 11'h000;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \count$next  = 11'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$13 ) begin end
    done = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:65" *)
    casez (en)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:65" */
      1'h1:
          done = \$12 ;
    endcase
  end
  assign \$1  = \$4 ;
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.ins.input_width_count" *)
(* generator = "Amaranth" *)
module input_width_count(clk, max, restart, en, done, rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$14  = 0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:63" *)
  wire [8:0] \$1 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:62" *)
  wire [8:0] \$10 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:67" *)
  wire \$12 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:63" *)
  wire [8:0] \$2 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:63" *)
  wire [8:0] \$4 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:62" *)
  wire [8:0] \$5 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:63" *)
  wire \$7 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:61" *)
  reg [7:0] count = 8'h00;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:61" *)
  reg [7:0] \count$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:57" *)
  output done;
  reg done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:56" *)
  input en;
  wire en;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:58" *)
  input [7:0] max;
  wire [7:0] max;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:55" *)
  input restart;
  wire restart;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  assign \$10  = max - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:62" *) 1'h1;
  assign \$12  = count == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:67" *) \$10 ;
  always @(posedge clk)
    count <= \count$next ;
  assign \$2  = count + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:63" *) 1'h1;
  assign \$5  = max - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:62" *) 1'h1;
  assign \$7  = count == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:63" *) \$5 ;
  assign \$4  = \$7  ? (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:63" *) 9'h000 : \$2 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$14 ) begin end
    \count$next  = count;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:65" *)
    casez (en)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:65" */
      1'h1:
          \count$next  = \$4 [7:0];
    endcase
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:69" *)
    casez (restart)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:69" */
      1'h1:
          \count$next  = 8'h00;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \count$next  = 8'h00;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$14 ) begin end
    done = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:65" *)
    casez (en)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:65" */
      1'h1:
          done = \$12 ;
    endcase
  end
  assign \$1  = \$4 ;
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.ins" *)
(* generator = "Amaranth" *)
module ins(clk, w_data, w_en, w_ready, offset, restart, input_depth, r_finished, switch_PorD, input_width, pad, r_data, r_ready, r_next, rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$15  = 0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:698" *)
  wire \$1 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:470" *)
  wire \$100 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:484" *)
  wire \$102 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:484" *)
  wire \$104 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:484" *)
  wire \$106 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:484" *)
  wire \$108 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:692" *)
  wire \$11 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:486" *)
  wire \$110 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:484" *)
  wire \$112 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:484" *)
  wire \$114 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:486" *)
  wire \$116 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:484" *)
  wire \$118 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:484" *)
  wire \$120 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:486" *)
  wire \$122 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:484" *)
  wire \$124 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:484" *)
  wire \$126 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:486" *)
  wire \$128 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:692" *)
  wire \$13 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:484" *)
  wire \$130 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:484" *)
  wire \$132 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:486" *)
  wire \$134 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:497" *)
  wire \$136 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:498" *)
  wire \$138 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:499" *)
  wire [11:0] \$140 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:499" *)
  wire \$142 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:502" *)
  wire [11:0] \$144 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:502" *)
  wire [11:0] \$145 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:507" *)
  wire \$147 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:508" *)
  wire [11:0] \$149 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:692" *)
  wire \$15 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:508" *)
  wire [11:0] \$150 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:510" *)
  wire [12:0] \$152 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:510" *)
  wire [11:0] \$153 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:510" *)
  wire [12:0] \$155 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:497" *)
  wire \$157 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:498" *)
  wire \$159 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:505" *)
  wire [2:0] \$161 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:497" *)
  wire \$163 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:498" *)
  wire \$165 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:513" *)
  wire [11:0] \$167 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:513" *)
  wire [11:0] \$168 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:692" *)
  wire \$17 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:513" *)
  wire [11:0] \$170 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:513" *)
  wire [11:0] \$171 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:513" *)
  wire [11:0] \$173 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:513" *)
  wire [11:0] \$174 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:513" *)
  wire [11:0] \$176 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:513" *)
  wire [11:0] \$177 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:513" *)
  wire [11:0] \$179 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:513" *)
  wire [11:0] \$180 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:513" *)
  wire [11:0] \$182 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:513" *)
  wire [11:0] \$183 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:514" *)
  wire [33:0] \$185 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:514" *)
  wire [32:0] \$186 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:514" *)
  wire [33:0] \$188 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:692" *)
  wire \$19 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:514" *)
  wire [33:0] \$190 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:514" *)
  wire [32:0] \$191 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:514" *)
  wire [33:0] \$193 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:514" *)
  wire [33:0] \$195 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:514" *)
  wire [32:0] \$196 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:514" *)
  wire [33:0] \$198 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:514" *)
  wire [33:0] \$200 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:514" *)
  wire [32:0] \$201 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:514" *)
  wire [33:0] \$203 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:514" *)
  wire [33:0] \$205 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:514" *)
  wire [32:0] \$206 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:514" *)
  wire [33:0] \$208 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:692" *)
  wire \$21 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:514" *)
  wire [33:0] \$210 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:514" *)
  wire [32:0] \$211 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:514" *)
  wire [33:0] \$213 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:515" *)
  wire [34:0] \$215 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:515" *)
  wire [32:0] \$216 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:515" *)
  wire [33:0] \$218 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:515" *)
  wire [34:0] \$220 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:515" *)
  wire [34:0] \$222 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:515" *)
  wire [32:0] \$223 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:515" *)
  wire [33:0] \$225 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:515" *)
  wire [34:0] \$227 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:515" *)
  wire [34:0] \$229 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:692" *)
  wire \$23 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:515" *)
  wire [32:0] \$230 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:515" *)
  wire [33:0] \$232 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:515" *)
  wire [34:0] \$234 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:515" *)
  wire [34:0] \$236 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:515" *)
  wire [32:0] \$237 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:515" *)
  wire [33:0] \$239 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:515" *)
  wire [34:0] \$241 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:515" *)
  wire [34:0] \$243 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:515" *)
  wire [32:0] \$244 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:515" *)
  wire [33:0] \$246 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:515" *)
  wire [34:0] \$248 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:692" *)
  wire \$25 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:515" *)
  wire [34:0] \$250 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:515" *)
  wire [32:0] \$251 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:515" *)
  wire [33:0] \$253 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:515" *)
  wire [34:0] \$255 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:519" *)
  wire [32:0] \$257 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:519" *)
  wire [32:0] \$258 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:520" *)
  wire [33:0] \$260 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:520" *)
  wire [32:0] \$261 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:520" *)
  wire [33:0] \$263 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:554" *)
  wire \$265 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:556" *)
  wire \$267 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:555" *)
  wire [127:0] \$269 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:692" *)
  wire \$27 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:557" *)
  wire [127:0] \$271 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:560" *)
  wire \$273 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:565" *)
  wire \$275 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:568" *)
  wire \$277 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:571" *)
  wire \$279 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:574" *)
  wire \$281 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:593" *)
  wire \$283 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" *)
  wire \$285 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:617" *)
  wire [12:0] \$287 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:617" *)
  wire [12:0] \$288 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:692" *)
  wire \$29 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:617" *)
  wire [12:0] \$290 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:617" *)
  wire [12:0] \$291 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:617" *)
  wire [12:0] \$293 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:617" *)
  wire [12:0] \$294 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:617" *)
  wire [12:0] \$296 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:617" *)
  wire [12:0] \$297 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:617" *)
  wire [12:0] \$299 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:699" *)
  wire [11:0] \$3 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:617" *)
  wire [12:0] \$300 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:617" *)
  wire [12:0] \$302 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:617" *)
  wire [12:0] \$303 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:617" *)
  wire [12:0] \$305 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:617" *)
  wire [12:0] \$306 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:617" *)
  wire [12:0] \$308 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:617" *)
  wire [12:0] \$309 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:695" *)
  wire \$31 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:645" *)
  wire [15:0] \$311 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:645" *)
  wire [14:0] \$312 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [15:0] \$314 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" *)
  wire \$316 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:622" *)
  wire [8:0] \$318 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:695" *)
  wire \$32 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:622" *)
  wire [9:0] \$320 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [10:0] \$322 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [11:0] \$324 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" *)
  wire \$326 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:623" *)
  wire [11:0] \$328 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:623" *)
  wire [8:0] \$329 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [9:0] \$331 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:623" *)
  wire [8:0] \$333 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [9:0] \$335 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [10:0] \$337 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:695" *)
  wire \$34 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" *)
  wire \$340 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:624" *)
  wire [11:0] \$342 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:624" *)
  wire [8:0] \$343 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:624" *)
  wire [8:0] \$345 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [9:0] \$347 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [10:0] \$349 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" *)
  wire \$352 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:625" *)
  wire [11:0] \$354 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [8:0] \$355 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [8:0] \$357 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [9:0] \$359 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:698" *)
  wire \$36 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" *)
  wire \$362 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:626" *)
  wire [11:0] \$364 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:626" *)
  wire [8:0] \$365 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [9:0] \$367 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:626" *)
  wire [8:0] \$369 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [9:0] \$371 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [10:0] \$373 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" *)
  wire \$376 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:627" *)
  wire [11:0] \$378 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:627" *)
  wire [8:0] \$379 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:699" *)
  wire [11:0] \$38 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [9:0] \$381 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:627" *)
  wire [8:0] \$383 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [9:0] \$385 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [10:0] \$387 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" *)
  wire \$390 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:628" *)
  wire [11:0] \$392 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:628" *)
  wire [8:0] \$393 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:628" *)
  wire [8:0] \$395 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [9:0] \$397 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [8:0] \$399 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:699" *)
  wire \$40 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [10:0] \$401 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" *)
  wire \$404 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:629" *)
  wire [11:0] \$406 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [8:0] \$407 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:629" *)
  wire [8:0] \$409 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:629" *)
  wire [8:0] \$411 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [9:0] \$413 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [10:0] \$415 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" *)
  wire \$418 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:708" *)
  wire [11:0] \$42 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:630" *)
  wire [11:0] \$420 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:630" *)
  wire [8:0] \$421 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [9:0] \$423 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:630" *)
  wire [8:0] \$425 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [9:0] \$427 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [10:0] \$429 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:708" *)
  wire [11:0] \$43 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" *)
  wire \$432 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:631" *)
  wire [11:0] \$434 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:631" *)
  wire [8:0] \$435 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [9:0] \$437 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:631" *)
  wire [8:0] \$439 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [9:0] \$441 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [10:0] \$443 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" *)
  wire \$446 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:632" *)
  wire [11:0] \$448 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:632" *)
  wire [8:0] \$449 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:698" *)
  wire \$45 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [9:0] \$451 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:632" *)
  wire [8:0] \$453 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [9:0] \$455 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [10:0] \$457 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" *)
  wire \$460 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:633" *)
  wire [11:0] \$462 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:633" *)
  wire [8:0] \$463 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [9:0] \$465 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:633" *)
  wire [8:0] \$467 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [9:0] \$469 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:699" *)
  wire [11:0] \$47 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [10:0] \$471 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" *)
  wire \$474 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:634" *)
  wire [11:0] \$476 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:634" *)
  wire [8:0] \$477 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [9:0] \$479 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:634" *)
  wire [8:0] \$481 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [9:0] \$483 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [10:0] \$485 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" *)
  wire \$488 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:699" *)
  wire \$49 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:635" *)
  wire [11:0] \$490 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:635" *)
  wire [8:0] \$491 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [9:0] \$493 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:635" *)
  wire [8:0] \$495 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [9:0] \$497 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [10:0] \$499 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:699" *)
  wire \$5 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" *)
  wire \$502 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:636" *)
  wire [11:0] \$504 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:636" *)
  wire [8:0] \$505 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [9:0] \$507 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:636" *)
  wire [8:0] \$509 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:705" *)
  wire \$51 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [9:0] \$511 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [10:0] \$513 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" *)
  wire \$516 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:637" *)
  wire [11:0] \$518 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:637" *)
  wire [8:0] \$519 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [9:0] \$521 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:637" *)
  wire [8:0] \$523 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [9:0] \$525 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *)
  wire [10:0] \$527 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:450" *)
  wire [32:0] \$53 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:669" *)
  wire \$530 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:450" *)
  wire [32:0] \$54 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:451" *)
  wire \$56 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:452" *)
  wire \$58 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:484" *)
  wire \$60 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:484" *)
  wire \$62 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:486" *)
  wire \$64 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:468" *)
  wire [12:0] \$66 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:468" *)
  wire [11:0] \$67 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:468" *)
  wire [12:0] \$69 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:692" *)
  wire \$7 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:468" *)
  wire [12:0] \$71 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:470" *)
  wire \$73 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:468" *)
  wire [12:0] \$75 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:468" *)
  wire [11:0] \$76 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:468" *)
  wire [12:0] \$78 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:468" *)
  wire [12:0] \$80 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:470" *)
  wire \$82 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:468" *)
  wire [12:0] \$84 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:468" *)
  wire [11:0] \$85 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:468" *)
  wire [12:0] \$87 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:468" *)
  wire [12:0] \$89 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:692" *)
  wire \$9 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:470" *)
  wire \$91 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:468" *)
  wire [12:0] \$93 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:468" *)
  wire [11:0] \$94 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:468" *)
  wire [12:0] \$96 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:468" *)
  wire [12:0] \$98 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:542" *)
  reg [11:0] data_tmp_0 = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:542" *)
  reg [11:0] \data_tmp_0$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:542" *)
  reg [11:0] data_tmp_1 = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:542" *)
  reg [11:0] \data_tmp_1$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:542" *)
  reg [11:0] data_tmp_10 = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:542" *)
  reg [11:0] \data_tmp_10$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:542" *)
  reg [11:0] data_tmp_11 = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:542" *)
  reg [11:0] \data_tmp_11$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:542" *)
  reg [11:0] data_tmp_12 = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:542" *)
  reg [11:0] \data_tmp_12$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:542" *)
  reg [11:0] data_tmp_13 = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:542" *)
  reg [11:0] \data_tmp_13$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:542" *)
  reg [11:0] data_tmp_14 = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:542" *)
  reg [11:0] \data_tmp_14$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:542" *)
  reg [11:0] data_tmp_15 = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:542" *)
  reg [11:0] \data_tmp_15$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:542" *)
  reg [11:0] data_tmp_2 = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:542" *)
  reg [11:0] \data_tmp_2$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:542" *)
  reg [11:0] data_tmp_3 = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:542" *)
  reg [11:0] \data_tmp_3$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:542" *)
  reg [11:0] data_tmp_4 = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:542" *)
  reg [11:0] \data_tmp_4$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:542" *)
  reg [11:0] data_tmp_5 = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:542" *)
  reg [11:0] \data_tmp_5$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:542" *)
  reg [11:0] data_tmp_6 = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:542" *)
  reg [11:0] \data_tmp_6$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:542" *)
  reg [11:0] data_tmp_7 = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:542" *)
  reg [11:0] \data_tmp_7$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:542" *)
  reg [11:0] data_tmp_8 = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:542" *)
  reg [11:0] \data_tmp_8$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:542" *)
  reg [11:0] data_tmp_9 = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:542" *)
  reg [11:0] \data_tmp_9$next ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:209" *)
  reg [9:0] dp_0_r_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:210" *)
  wire [31:0] dp_0_r_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:207" *)
  wire [9:0] dp_0_w_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:208" *)
  wire [31:0] dp_0_w_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:206" *)
  wire dp_0_w_en;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:209" *)
  reg [9:0] dp_1_r_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:210" *)
  wire [31:0] dp_1_r_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:207" *)
  wire [9:0] dp_1_w_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:208" *)
  wire [31:0] dp_1_w_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:206" *)
  wire dp_1_w_en;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:209" *)
  reg [9:0] dp_2_r_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:210" *)
  wire [31:0] dp_2_r_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:207" *)
  wire [9:0] dp_2_w_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:208" *)
  wire [31:0] dp_2_w_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:206" *)
  wire dp_2_w_en;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:209" *)
  reg [9:0] dp_3_r_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:210" *)
  wire [31:0] dp_3_r_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:207" *)
  wire [9:0] dp_3_w_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:208" *)
  wire [31:0] dp_3_w_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:206" *)
  wire dp_3_w_en;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:478" *)
  reg full;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:431" *)
  input [10:0] input_depth;
  wire [10:0] input_depth;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:441" *)
  input [31:0] input_width;
  wire [31:0] input_width;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:57" *)
  wire input_width_count_done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:56" *)
  reg input_width_count_en;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:58" *)
  wire [7:0] input_width_count_max;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:55" *)
  wire input_width_count_restart;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:480" *)
  reg last_full = 1'h0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:480" *)
  reg \last_full$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:461" *)
  reg [8:0] mem_addrs_0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:461" *)
  reg [8:0] mem_addrs_1;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:461" *)
  reg [8:0] mem_addrs_2;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:461" *)
  reg [8:0] mem_addrs_3;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:440" *)
  input [11:0] offset;
  wire [11:0] offset;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:442" *)
  input [3:0] pad;
  wire [3:0] pad;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:447" *)
  reg [10:0] r_addr = 11'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:447" *)
  reg [10:0] \r_addr$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:445" *)
  reg r_curr_buf = 1'h0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:445" *)
  reg \r_curr_buf$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:436" *)
  output [191:0] r_data;
  reg [191:0] r_data = 192'h000000000000000000000000000000000000000000000000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:436" *)
  reg [191:0] \r_data$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:438" *)
  input r_finished;
  wire r_finished;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:727" *)
  reg r_full_0 = 1'h0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:727" *)
  reg \r_full_0$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:727" *)
  reg r_full_1 = 1'h0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:727" *)
  reg \r_full_1$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:437" *)
  input r_next;
  wire r_next;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:435" *)
  output r_ready;
  reg r_ready = 1'h0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:435" *)
  reg \r_ready$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:430" *)
  input restart;
  wire restart;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:275" *)
  wire [31:0] smr_0_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:272" *)
  wire [9:0] smr_0_limit;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:273" *)
  wire [8:0] smr_0_mem_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:274" *)
  wire [31:0] smr_0_mem_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:276" *)
  reg smr_0_next;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:277" *)
  reg smr_0_restart;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:275" *)
  wire [31:0] smr_1_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:272" *)
  wire [9:0] smr_1_limit;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:273" *)
  wire [8:0] smr_1_mem_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:274" *)
  wire [31:0] smr_1_mem_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:276" *)
  reg smr_1_next;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:277" *)
  reg smr_1_restart;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:275" *)
  wire [31:0] smr_2_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:272" *)
  wire [9:0] smr_2_limit;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:273" *)
  wire [8:0] smr_2_mem_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:274" *)
  wire [31:0] smr_2_mem_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:276" *)
  reg smr_2_next;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:277" *)
  reg smr_2_restart;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:275" *)
  wire [31:0] smr_3_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:272" *)
  wire [9:0] smr_3_limit;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:273" *)
  wire [8:0] smr_3_mem_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:274" *)
  wire [31:0] smr_3_mem_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:276" *)
  reg smr_3_next;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:277" *)
  reg smr_3_restart;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:559" *)
  reg [1:0] smr_no_d = 2'h0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:559" *)
  reg [1:0] \smr_no_d$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:552" *)
  wire [1:0] smr_no_p;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:439" *)
  input switch_PorD;
  wire switch_PorD;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:537" *)
  reg [127:0] tmp;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:539" *)
  reg [127:0] tmp1;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:541" *)
  reg [127:0] tmp2;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:685" *)
  reg [10:0] w_addr = 11'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:685" *)
  reg [10:0] \w_addr$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:683" *)
  reg w_curr_buf = 1'h0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:683" *)
  reg \w_curr_buf$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:432" *)
  input [31:0] w_data;
  wire [31:0] w_data;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:433" *)
  input w_en;
  wire w_en;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:434" *)
  output w_ready;
  reg w_ready;
  assign \$9  = ! (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:692" *) w_addr[1:0];
  assign \$100  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:470" *) switch_PorD;
  assign \$102  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:484" *) last_full;
  assign \$104  = full & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:484" *) \$102 ;
  assign \$106  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:484" *) last_full;
  assign \$108  = full & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:484" *) \$106 ;
  assign \$110  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:486" *) switch_PorD;
  assign \$112  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:484" *) last_full;
  assign \$114  = full & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:484" *) \$112 ;
  assign \$116  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:486" *) switch_PorD;
  assign \$118  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:484" *) last_full;
  assign \$11  = \$7  & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:692" *) \$9 ;
  assign \$120  = full & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:484" *) \$118 ;
  assign \$122  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:486" *) switch_PorD;
  assign \$124  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:484" *) last_full;
  assign \$126  = full & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:484" *) \$124 ;
  assign \$128  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:486" *) switch_PorD;
  assign \$130  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:484" *) last_full;
  assign \$132  = full & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:484" *) \$130 ;
  assign \$134  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:486" *) switch_PorD;
  assign \$136  = r_next & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:497" *) r_ready;
  assign \$138  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:498" *) switch_PorD;
  assign \$13  = w_en & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:692" *) w_ready;
  assign \$140  = input_depth - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:499" *) 2'h2;
  assign \$142  = r_addr == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:499" *) \$140 ;
  assign \$145  = r_addr + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:502" *) 2'h2;
  assign \$147  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:507" *) input_width_count_done;
  assign \$150  = r_addr + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:508" *) 1'h1;
  assign \$153  = r_addr + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:510" *) pad;
  assign \$155  = \$153  + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:510" *) 2'h2;
  assign \$157  = r_next & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:497" *) r_ready;
  assign \$15  = w_addr[1:0] == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:692" *) 1'h1;
  assign \$159  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:498" *) switch_PorD;
  assign \$161  = r_addr[1:0] + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:505" *) 1'h1;
  assign \$163  = r_next & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:497" *) r_ready;
  assign \$165  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:498" *) switch_PorD;
  assign \$168  = r_addr + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:513" *) 1'h1;
  assign \$171  = r_addr + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:513" *) 1'h1;
  assign \$174  = r_addr + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:513" *) 1'h1;
  assign \$177  = r_addr + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:513" *) 1'h1;
  assign \$17  = \$13  & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:692" *) \$15 ;
  assign \$180  = r_addr + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:513" *) 1'h1;
  assign \$183  = r_addr + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:513" *) 1'h1;
  assign \$186  = r_addr + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:514" *) input_width;
  assign \$188  = \$186  + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:514" *) pad;
  assign \$191  = r_addr + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:514" *) input_width;
  assign \$193  = \$191  + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:514" *) pad;
  assign \$196  = r_addr + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:514" *) input_width;
  assign \$198  = \$196  + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:514" *) pad;
  assign \$1  = w_en & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:698" *) w_ready;
  assign \$19  = w_en & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:692" *) w_ready;
  assign \$201  = r_addr + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:514" *) input_width;
  assign \$203  = \$201  + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:514" *) pad;
  assign \$206  = r_addr + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:514" *) input_width;
  assign \$208  = \$206  + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:514" *) pad;
  assign \$211  = r_addr + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:514" *) input_width;
  assign \$213  = \$211  + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:514" *) pad;
  assign \$216  = r_addr + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:515" *) input_width;
  assign \$218  = \$216  + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:515" *) pad;
  assign \$21  = w_addr[1:0] == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:692" *) 2'h2;
  assign \$220  = \$218  + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:515" *) 1'h1;
  assign \$223  = r_addr + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:515" *) input_width;
  assign \$225  = \$223  + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:515" *) pad;
  assign \$227  = \$225  + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:515" *) 1'h1;
  assign \$230  = r_addr + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:515" *) input_width;
  assign \$232  = \$230  + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:515" *) pad;
  assign \$234  = \$232  + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:515" *) 1'h1;
  assign \$237  = r_addr + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:515" *) input_width;
  assign \$23  = \$19  & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:692" *) \$21 ;
  assign \$239  = \$237  + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:515" *) pad;
  assign \$241  = \$239  + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:515" *) 1'h1;
  assign \$244  = r_addr + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:515" *) input_width;
  assign \$246  = \$244  + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:515" *) pad;
  assign \$248  = \$246  + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:515" *) 1'h1;
  assign \$251  = r_addr + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:515" *) input_width;
  assign \$253  = \$251  + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:515" *) pad;
  assign \$255  = \$253  + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:515" *) 1'h1;
  assign \$258  = input_width + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:519" *) pad;
  assign \$25  = w_en & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:692" *) w_ready;
  assign \$261  = input_width + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:520" *) pad;
  assign \$263  = \$261  + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:520" *) 1'h1;
  assign \$265  = ! (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:554" *) smr_no_p;
  assign \$267  = smr_no_p == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:556" *) 2'h2;
  assign \$269  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:555" *) { smr_1_data, smr_0_data };
  assign \$271  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:557" *) { smr_3_data, smr_2_data };
  assign \$273  = r_next & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:560" *) r_ready;
  assign \$275  = ! (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:565" *) smr_no_d;
  assign \$277  = smr_no_d == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:568" *) 1'h1;
  assign \$27  = w_addr[1:0] == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:692" *) 2'h3;
  assign \$279  = smr_no_d == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:571" *) 2'h2;
  assign \$281  = smr_no_d == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:574" *) 2'h3;
  assign \$283  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:593" *) switch_PorD;
  assign \$285  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" *) switch_PorD;
  assign \$288  = $signed(tmp[7:0]) + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:617" *) $signed(offset);
  assign \$291  = $signed(tmp[15:8]) + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:617" *) $signed(offset);
  assign \$294  = $signed(tmp[23:16]) + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:617" *) $signed(offset);
  assign \$297  = $signed(tmp[31:24]) + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:617" *) $signed(offset);
  assign \$29  = \$25  & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:692" *) \$27 ;
  assign \$300  = $signed(tmp[39:32]) + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:617" *) $signed(offset);
  assign \$303  = $signed(tmp[47:40]) + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:617" *) $signed(offset);
  assign \$306  = $signed(tmp[55:48]) + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:617" *) $signed(offset);
  assign \$309  = $signed(tmp[63:56]) + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:617" *) $signed(offset);
  assign \$314  = $signed(data_tmp_3) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$312 );
  assign \$316  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" *) switch_PorD;
  assign \$318  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:622" *) $signed(tmp[71:64]);
  assign \$320  = $signed(\$318 ) - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:622" *) $signed(tmp[39:32]);
  assign \$322  = $signed(\$320 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(tmp[103:96]);
  assign \$324  = $signed(tmp[7:0]) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$322 );
  assign \$326  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" *) switch_PorD;
  assign \$32  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:695" *) r_full_0;
  assign \$329  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:623" *) $signed(tmp[79:72]);
  assign \$331  = $signed(tmp[15:8]) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$329 );
  assign \$333  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:623" *) $signed(tmp[103:96]);
  assign \$335  = $signed(tmp[39:32]) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$333 );
  assign \$337  = $signed(\$331 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$335 );
  assign \$328  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:623" *) $signed(\$337 );
  assign \$340  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" *) switch_PorD;
  assign \$343  = $signed(tmp[71:64]) - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:624" *) $signed(tmp[55:48]);
  assign \$345  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:624" *) $signed(tmp[103:96]);
  assign \$347  = $signed(\$343 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$345 );
  assign \$34  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:695" *) r_full_1;
  assign \$349  = $signed(tmp[23:16]) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$347 );
  assign \$342  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:624" *) $signed(\$349 );
  assign \$352  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" *) switch_PorD;
  assign \$355  = $signed(tmp[31:24]) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(tmp[79:72]);
  assign \$357  = $signed(tmp[55:48]) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(tmp[103:96]);
  assign \$359  = $signed(\$355 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$357 );
  assign \$354  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:625" *) $signed(\$359 );
  assign \$362  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" *) switch_PorD;
  assign \$365  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:626" *) $signed(tmp[15:8]);
  assign \$367  = $signed(\$365 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(tmp[79:72]);
  assign \$36  = w_en & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:698" *) w_ready;
  assign \$369  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:626" *) $signed(tmp[103:96]);
  assign \$371  = $signed(tmp[39:32]) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$369 );
  assign \$373  = $signed(\$367 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$371 );
  assign \$364  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:626" *) $signed(\$373 );
  assign \$376  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" *) switch_PorD;
  assign \$379  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:627" *) $signed(tmp[79:72]);
  assign \$381  = $signed(tmp[15:8]) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$379 );
  assign \$383  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:627" *) $signed(tmp[47:40]);
  assign \$385  = $signed(\$383 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(tmp[111:104]);
  assign \$387  = $signed(\$381 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$385 );
  assign \$378  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:627" *) $signed(\$387 );
  assign \$38  = input_depth - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:699" *) 1'h1;
  assign \$390  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" *) switch_PorD;
  assign \$393  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:628" *) $signed(tmp[31:24]);
  assign \$395  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:628" *) $signed(tmp[79:72]);
  assign \$397  = $signed(\$393 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$395 );
  assign \$3  = input_depth - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:699" *) 1'h1;
  assign \$399  = $signed(tmp[55:48]) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(tmp[103:96]);
  assign \$401  = $signed(\$397 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$399 );
  assign \$392  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:628" *) $signed(\$401 );
  assign \$404  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" *) switch_PorD;
  assign \$407  = $signed(tmp[31:24]) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(tmp[79:72]);
  assign \$40  = w_addr == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:699" *) \$38 ;
  assign \$409  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:629" *) $signed(tmp[63:56]);
  assign \$411  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:629" *) $signed(tmp[111:104]);
  assign \$413  = $signed(\$409 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$411 );
  assign \$415  = $signed(\$407 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$413 );
  assign \$406  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:629" *) $signed(\$415 );
  assign \$418  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" *) switch_PorD;
  assign \$421  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:630" *) $signed(tmp[23:16]);
  assign \$423  = $signed(\$421 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(tmp[71:64]);
  assign \$425  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:630" *) $signed(tmp[103:96]);
  assign \$427  = $signed(tmp[55:48]) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$425 );
  assign \$429  = $signed(\$423 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$427 );
  assign \$420  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:630" *) $signed(\$429 );
  assign \$432  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" *) switch_PorD;
  assign \$435  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:631" *) $signed(tmp[31:24]);
  assign \$437  = $signed(\$435 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(tmp[79:72]);
  assign \$43  = w_addr + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:708" *) 1'h1;
  assign \$439  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:631" *) $signed(tmp[55:48]);
  assign \$441  = $signed(\$439 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(tmp[103:96]);
  assign \$443  = $signed(\$437 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$441 );
  assign \$434  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:631" *) $signed(\$443 );
  assign \$446  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" *) switch_PorD;
  assign \$449  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:632" *) $signed(tmp[87:80]);
  assign \$451  = $signed(tmp[23:16]) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$449 );
  assign \$453  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:632" *) $signed(tmp[55:48]);
  assign \$455  = $signed(\$453 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(tmp[119:112]);
  assign \$457  = $signed(\$451 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$455 );
  assign \$448  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:632" *) $signed(\$457 );
  assign \$45  = w_en & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:698" *) w_ready;
  assign \$460  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" *) switch_PorD;
  assign \$463  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:633" *) $signed(tmp[95:88]);
  assign \$465  = $signed(tmp[31:24]) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$463 );
  assign \$467  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:633" *) $signed(tmp[119:112]);
  assign \$469  = $signed(tmp[55:48]) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$467 );
  assign \$471  = $signed(\$465 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$469 );
  assign \$462  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:633" *) $signed(\$471 );
  assign \$474  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" *) switch_PorD;
  assign \$477  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:634" *) $signed(tmp[79:72]);
  assign \$47  = input_depth - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:699" *) 1'h1;
  assign \$479  = $signed(tmp[31:24]) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$477 );
  assign \$481  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:634" *) $signed(tmp[55:48]);
  assign \$483  = $signed(\$481 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(tmp[103:96]);
  assign \$485  = $signed(\$479 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$483 );
  assign \$476  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:634" *) $signed(\$485 );
  assign \$488  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" *) switch_PorD;
  assign \$491  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:635" *) $signed(tmp[31:24]);
  assign \$493  = $signed(\$491 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(tmp[79:72]);
  assign \$495  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:635" *) $signed(tmp[111:104]);
  assign \$497  = $signed(tmp[63:56]) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$495 );
  assign \$49  = w_addr == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:699" *) \$47 ;
  assign \$499  = $signed(\$493 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$497 );
  assign \$490  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:635" *) $signed(\$499 );
  assign \$502  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" *) switch_PorD;
  assign \$505  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:636" *) $signed(tmp[31:24]);
  assign \$507  = $signed(\$505 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(tmp[95:88]);
  assign \$509  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:636" *) $signed(tmp[119:112]);
  assign \$511  = $signed(tmp[55:48]) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$509 );
  assign \$513  = $signed(\$507 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$511 );
  assign \$504  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:636" *) $signed(\$513 );
  assign \$516  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" *) switch_PorD;
  assign \$51  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:705" *) w_curr_buf;
  assign \$519  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:637" *) $signed(tmp[95:88]);
  assign \$521  = $signed(tmp[31:24]) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$519 );
  assign \$523  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:637" *) $signed(tmp[63:56]);
  assign \$525  = $signed(\$523 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(tmp[127:120]);
  assign \$527  = $signed(\$521 ) + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:44" *) $signed(\$525 );
  assign \$518  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:637" *) $signed(\$527 );
  assign \$530  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:669" *) r_curr_buf;
  always @(posedge clk)
    r_full_0 <= \r_full_0$next ;
  always @(posedge clk)
    r_full_1 <= \r_full_1$next ;
  always @(posedge clk)
    w_addr <= \w_addr$next ;
  always @(posedge clk)
    w_curr_buf <= \w_curr_buf$next ;
  always @(posedge clk)
    last_full <= \last_full$next ;
  always @(posedge clk)
    r_ready <= \r_ready$next ;
  always @(posedge clk)
    r_addr <= \r_addr$next ;
  always @(posedge clk)
    smr_no_d <= \smr_no_d$next ;
  always @(posedge clk)
    r_data <= \r_data$next ;
  always @(posedge clk)
    data_tmp_0 <= \data_tmp_0$next ;
  always @(posedge clk)
    data_tmp_1 <= \data_tmp_1$next ;
  always @(posedge clk)
    data_tmp_2 <= \data_tmp_2$next ;
  always @(posedge clk)
    data_tmp_3 <= \data_tmp_3$next ;
  always @(posedge clk)
    data_tmp_4 <= \data_tmp_4$next ;
  always @(posedge clk)
    data_tmp_5 <= \data_tmp_5$next ;
  always @(posedge clk)
    data_tmp_6 <= \data_tmp_6$next ;
  always @(posedge clk)
    data_tmp_7 <= \data_tmp_7$next ;
  always @(posedge clk)
    data_tmp_8 <= \data_tmp_8$next ;
  assign \$54  = input_width - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:450" *) 1'h1;
  always @(posedge clk)
    data_tmp_9 <= \data_tmp_9$next ;
  always @(posedge clk)
    data_tmp_10 <= \data_tmp_10$next ;
  always @(posedge clk)
    data_tmp_11 <= \data_tmp_11$next ;
  always @(posedge clk)
    data_tmp_12 <= \data_tmp_12$next ;
  always @(posedge clk)
    data_tmp_13 <= \data_tmp_13$next ;
  always @(posedge clk)
    data_tmp_14 <= \data_tmp_14$next ;
  always @(posedge clk)
    data_tmp_15 <= \data_tmp_15$next ;
  always @(posedge clk)
    r_curr_buf <= \r_curr_buf$next ;
  assign \$56  = restart | (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:451" *) r_finished;
  assign \$58  = r_next & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:452" *) r_ready;
  assign \$5  = w_addr == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:699" *) \$3 ;
  assign \$60  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:484" *) last_full;
  assign \$62  = full & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:484" *) \$60 ;
  assign \$64  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:486" *) switch_PorD;
  assign \$67  = input_depth + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:468" *) 2'h3;
  assign \$69  = \$67  - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:468" *) 1'h0;
  assign \$73  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:470" *) switch_PorD;
  assign \$76  = input_depth + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:468" *) 2'h3;
  assign \$78  = \$76  - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:468" *) 1'h1;
  assign \$7  = w_en & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:692" *) w_ready;
  assign \$82  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:470" *) switch_PorD;
  assign \$85  = input_depth + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:468" *) 2'h3;
  assign \$87  = \$85  - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:468" *) 2'h2;
  assign \$91  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:470" *) switch_PorD;
  assign \$94  = input_depth + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:468" *) 2'h3;
  assign \$96  = \$94  - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:468" *) 2'h3;
  dp_0 dp_0 (
    .clk(clk),
    .r_addr(dp_0_r_addr),
    .r_data(dp_0_r_data),
    .w_addr(dp_0_w_addr),
    .w_data(dp_0_w_data),
    .w_en(dp_0_w_en)
  );
  dp_1 dp_1 (
    .clk(clk),
    .r_addr(dp_1_r_addr),
    .r_data(dp_1_r_data),
    .w_addr(dp_1_w_addr),
    .w_data(dp_1_w_data),
    .w_en(dp_1_w_en)
  );
  dp_2 dp_2 (
    .clk(clk),
    .r_addr(dp_2_r_addr),
    .r_data(dp_2_r_data),
    .w_addr(dp_2_w_addr),
    .w_data(dp_2_w_data),
    .w_en(dp_2_w_en)
  );
  dp_3 dp_3 (
    .clk(clk),
    .r_addr(dp_3_r_addr),
    .r_data(dp_3_r_data),
    .w_addr(dp_3_w_addr),
    .w_data(dp_3_w_data),
    .w_en(dp_3_w_en)
  );
  input_width_count input_width_count (
    .clk(clk),
    .done(input_width_count_done),
    .en(input_width_count_en),
    .max(input_width_count_max),
    .restart(input_width_count_restart),
    .rst(rst)
  );
  \smr_0$1  smr_0 (
    .clk(clk),
    .data(smr_0_data),
    .limit(smr_0_limit),
    .mem_addr(smr_0_mem_addr),
    .mem_data(smr_0_mem_data),
    .next(smr_0_next),
    .restart(smr_0_restart),
    .rst(rst)
  );
  \smr_1$2  smr_1 (
    .clk(clk),
    .data(smr_1_data),
    .limit(smr_1_limit),
    .mem_addr(smr_1_mem_addr),
    .mem_data(smr_1_mem_data),
    .next(smr_1_next),
    .restart(smr_1_restart),
    .rst(rst)
  );
  \smr_2$3  smr_2 (
    .clk(clk),
    .data(smr_2_data),
    .limit(smr_2_limit),
    .mem_addr(smr_2_mem_addr),
    .mem_data(smr_2_mem_data),
    .next(smr_2_next),
    .restart(smr_2_restart),
    .rst(rst)
  );
  \smr_3$4  smr_3 (
    .clk(clk),
    .data(smr_3_data),
    .limit(smr_3_limit),
    .mem_addr(smr_3_mem_addr),
    .mem_data(smr_3_mem_data),
    .next(smr_3_next),
    .restart(smr_3_restart),
    .rst(rst)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$15 ) begin end
    \r_full_0$next  = r_full_0;
    \r_full_1$next  = r_full_1;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:728" *)
    casez (restart)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:728" */
      1'h1:
        begin
          \r_full_0$next  = 1'h0;
          \r_full_1$next  = 1'h0;
        end
    endcase
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:698" *)
    casez (\$1 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:698" */
      1'h1:
          (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:699" *)
          casez (\$5 )
            /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:699" */
            1'h1:
                (* full_case = 32'd1 *)
                (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:704" *)
                casez (w_curr_buf)
                  1'h0:
                      \r_full_0$next  = 1'h1;
                  1'h?:
                      \r_full_1$next  = 1'h1;
                endcase
          endcase
    endcase
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:663" *)
    casez (r_finished)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:663" */
      1'h1:
          (* full_case = 32'd1 *)
          (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:666" *)
          casez (r_curr_buf)
            1'h0:
                \r_full_0$next  = 1'h0;
            1'h?:
                \r_full_1$next  = 1'h0;
          endcase
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
        begin
          \r_full_0$next  = 1'h0;
          \r_full_1$next  = 1'h0;
        end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$15 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:695" *)
    casez (w_curr_buf)
      1'h0:
          w_ready = \$32 ;
      1'h?:
          w_ready = \$34 ;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$15 ) begin end
    \w_addr$next  = w_addr;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:698" *)
    casez (\$36 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:698" */
      1'h1:
          (* full_case = 32'd1 *)
          (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:699" *)
          casez (\$40 )
            /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:699" */
            1'h1:
                \w_addr$next  = 11'h000;
            /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:707" */
            default:
                \w_addr$next  = \$43 [10:0];
          endcase
    endcase
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:710" *)
    casez (restart)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:710" */
      1'h1:
          \w_addr$next  = 11'h000;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \w_addr$next  = 11'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$15 ) begin end
    \w_curr_buf$next  = w_curr_buf;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:698" *)
    casez (\$45 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:698" */
      1'h1:
          (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:699" *)
          casez (\$49 )
            /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:699" */
            1'h1:
                \w_curr_buf$next  = \$51 ;
          endcase
    endcase
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:710" *)
    casez (restart)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:710" */
      1'h1:
          \w_curr_buf$next  = 1'h0;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \w_curr_buf$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$15 ) begin end
    input_width_count_en = \$58 ;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:484" *)
    casez (\$62 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:484" */
      1'h1:
          (* full_case = 32'd1 *)
          (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:486" *)
          casez (\$64 )
            /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:486" */
            1'h1:
                /* empty */;
            /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:488" */
            default:
                input_width_count_en = 1'h1;
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$15 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:470" *)
    casez (\$73 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:470" */
      1'h1:
          dp_0_r_addr = { r_curr_buf, smr_0_mem_addr };
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:472" */
      default:
          dp_0_r_addr = { r_curr_buf, mem_addrs_0 };
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$15 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:470" *)
    casez (\$82 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:470" */
      1'h1:
          dp_1_r_addr = { r_curr_buf, smr_1_mem_addr };
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:472" */
      default:
          dp_1_r_addr = { r_curr_buf, mem_addrs_1 };
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$15 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:470" *)
    casez (\$91 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:470" */
      1'h1:
          dp_2_r_addr = { r_curr_buf, smr_2_mem_addr };
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:472" */
      default:
          dp_2_r_addr = { r_curr_buf, mem_addrs_2 };
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$15 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:470" *)
    casez (\$100 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:470" */
      1'h1:
          dp_3_r_addr = { r_curr_buf, smr_3_mem_addr };
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:472" */
      default:
          dp_3_r_addr = { r_curr_buf, mem_addrs_3 };
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$15 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:479" *)
    casez (r_curr_buf)
      1'h0:
          full = r_full_0;
      1'h?:
          full = r_full_1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$15 ) begin end
    \last_full$next  = full;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:663" *)
    casez (r_finished)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:663" */
      1'h1:
          \last_full$next  = 1'h0;
    endcase
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:674" *)
    casez (restart)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:674" */
      1'h1:
          \last_full$next  = 1'h0;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \last_full$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$15 ) begin end
    \r_ready$next  = r_ready;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:484" *)
    casez (\$104 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:484" */
      1'h1:
          \r_ready$next  = 1'h1;
    endcase
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:663" *)
    casez (r_finished)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:663" */
      1'h1:
          \r_ready$next  = 1'h0;
    endcase
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:674" *)
    casez (restart)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:674" */
      1'h1:
          \r_ready$next  = 1'h0;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \r_ready$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$15 ) begin end
    smr_0_restart = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:484" *)
    casez (\$108 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:484" */
      1'h1:
          (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:486" *)
          casez (\$110 )
            /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:486" */
            1'h1:
                smr_0_restart = 1'h1;
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$15 ) begin end
    smr_1_restart = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:484" *)
    casez (\$114 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:484" */
      1'h1:
          (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:486" *)
          casez (\$116 )
            /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:486" */
            1'h1:
                smr_1_restart = 1'h1;
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$15 ) begin end
    smr_2_restart = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:484" *)
    casez (\$120 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:484" */
      1'h1:
          (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:486" *)
          casez (\$122 )
            /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:486" */
            1'h1:
                smr_2_restart = 1'h1;
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$15 ) begin end
    smr_3_restart = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:484" *)
    casez (\$126 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:484" */
      1'h1:
          (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:486" *)
          casez (\$128 )
            /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:486" */
            1'h1:
                smr_3_restart = 1'h1;
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$15 ) begin end
    \r_addr$next  = r_addr;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:484" *)
    casez (\$132 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:484" */
      1'h1:
          (* full_case = 32'd1 *)
          (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:486" *)
          casez (\$134 )
            /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:486" */
            1'h1:
                /* empty */;
            /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:488" */
            default:
                \r_addr$next  = 11'h001;
          endcase
    endcase
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:497" *)
    casez (\$136 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:497" */
      1'h1:
          (* full_case = 32'd1 *)
          (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:498" *)
          casez (\$138 )
            /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:498" */
            1'h1:
                (* full_case = 32'd1 *)
                (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:499" *)
                casez (\$142 )
                  /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:499" */
                  1'h1:
                      \r_addr$next  = 11'h000;
                  /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:501" */
                  default:
                      \r_addr$next  = \$145 [10:0];
                endcase
            /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:506" */
            default:
                (* full_case = 32'd1 *)
                (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:507" *)
                casez (\$147 )
                  /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:507" */
                  1'h1:
                      \r_addr$next  = \$150 [10:0];
                  /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:509" */
                  default:
                      \r_addr$next  = \$155 [10:0];
                endcase
          endcase
    endcase
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:663" *)
    casez (r_finished)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:663" */
      1'h1:
          \r_addr$next  = 11'h000;
    endcase
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:674" *)
    casez (restart)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:674" */
      1'h1:
          \r_addr$next  = 11'h000;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \r_addr$next  = 11'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$15 ) begin end
    smr_0_next = 1'h0;
    smr_1_next = 1'h0;
    smr_2_next = 1'h0;
    smr_3_next = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:497" *)
    casez (\$157 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:497" */
      1'h1:
          (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:498" *)
          casez (\$159 )
            /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:498" */
            1'h1:
              begin
                (* full_case = 32'd1 *)
                (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:504" *)
                casez (r_addr[1:0])
                  2'h0:
                      smr_0_next = 1'h1;
                  2'h1:
                      smr_1_next = 1'h1;
                  2'h2:
                      smr_2_next = 1'h1;
                  2'h?:
                      smr_3_next = 1'h1;
                endcase
                (* full_case = 32'd1 *)
                (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:505" *)
                casez (\$161 )
                  3'h0:
                      smr_0_next = 1'h1;
                  3'h1:
                      smr_1_next = 1'h1;
                  3'h2:
                      smr_2_next = 1'h1;
                  3'h?:
                      smr_3_next = 1'h1;
                endcase
              end
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$15 ) begin end
    mem_addrs_0 = 9'h000;
    mem_addrs_1 = 9'h000;
    mem_addrs_2 = 9'h000;
    mem_addrs_3 = 9'h000;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:497" *)
    casez (\$163 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:497" */
      1'h1:
          (* full_case = 32'd1 *)
          (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:498" *)
          casez (\$165 )
            /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:498" */
            1'h1:
                /* empty */;
            /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:506" */
            default:
              begin
                (* full_case = 32'd1 *)
                (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:512" *)
                casez (r_addr[1:0])
                  2'h0:
                      mem_addrs_0 = r_addr[10:2];
                  2'h1:
                      mem_addrs_1 = r_addr[10:2];
                  2'h2:
                      mem_addrs_2 = r_addr[10:2];
                  2'h?:
                      mem_addrs_3 = r_addr[10:2];
                endcase
                (* full_case = 32'd1 *)
                (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:513" *)
                casez (\$170 [1:0])
                  2'h0:
                      mem_addrs_0 = \$174 [10:2];
                  2'h1:
                      mem_addrs_1 = \$177 [10:2];
                  2'h2:
                      mem_addrs_2 = \$180 [10:2];
                  2'h?:
                      mem_addrs_3 = \$183 [10:2];
                endcase
                (* full_case = 32'd1 *)
                (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:514" *)
                casez (\$190 [1:0])
                  2'h0:
                      mem_addrs_0 = \$198 [10:2];
                  2'h1:
                      mem_addrs_1 = \$203 [10:2];
                  2'h2:
                      mem_addrs_2 = \$208 [10:2];
                  2'h?:
                      mem_addrs_3 = \$213 [10:2];
                endcase
                (* full_case = 32'd1 *)
                (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:515" *)
                casez (\$222 [1:0])
                  2'h0:
                      mem_addrs_0 = \$234 [10:2];
                  2'h1:
                      mem_addrs_1 = \$241 [10:2];
                  2'h2:
                      mem_addrs_2 = \$248 [10:2];
                  2'h?:
                      mem_addrs_3 = \$255 [10:2];
                endcase
              end
          endcase
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:516" */
      default:
        begin
          mem_addrs_0 = 9'h000;
          mem_addrs_1 = 9'h000;
          mem_addrs_2 = \$258 [10:2];
          mem_addrs_3 = \$263 [10:2];
        end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$15 ) begin end
    tmp1 = 128'h00000000000000000000000000000000;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:554" *)
    casez ({ \$267 , \$265  })
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:554" */
      2'b?1:
          tmp1 = \$269 ;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:556" */
      2'b1?:
          tmp1 = \$271 ;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$15 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:560" *)
    casez (\$273 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:560" */
      1'h1:
          \smr_no_d$next  = r_addr[1:0];
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:562" */
      default:
          \smr_no_d$next  = 2'h0;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \smr_no_d$next  = 2'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$15 ) begin end
    tmp2 = 128'h00000000000000000000000000000000;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:565" *)
    casez ({ \$281 , \$279 , \$277 , \$275  })
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:565" */
      4'b???1:
          tmp2 = { smr_3_mem_data, smr_2_mem_data, smr_1_mem_data, smr_0_mem_data };
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:568" */
      4'b??1?:
          tmp2 = { smr_0_mem_data, smr_3_mem_data, smr_2_mem_data, smr_1_mem_data };
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:571" */
      4'b?1??:
          tmp2 = { smr_1_mem_data, smr_0_mem_data, smr_3_mem_data, smr_2_mem_data };
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:574" */
      4'b1???:
          tmp2 = { smr_2_mem_data, smr_1_mem_data, smr_0_mem_data, smr_3_mem_data };
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$15 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:593" *)
    casez (\$283 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:593" */
      1'h1:
          tmp = tmp1;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:595" */
      default:
          tmp = tmp2;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$15 ) begin end
    \r_data$next [191:96] = r_data[191:96];
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" *)
    casez (\$285 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" */
      1'h1:
        begin
          \r_data$next [11:0] = \$288 [11:0];
          \r_data$next [23:12] = \$291 [11:0];
          \r_data$next [35:24] = \$294 [11:0];
          \r_data$next [47:36] = \$297 [11:0];
          \r_data$next [59:48] = \$300 [11:0];
          \r_data$next [71:60] = \$303 [11:0];
          \r_data$next [83:72] = \$306 [11:0];
          \r_data$next [95:84] = \$309 [11:0];
        end
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:619" */
      default:
        begin
          \r_data$next [11:0] = data_tmp_0;
          \r_data$next [23:12] = data_tmp_1;
          \r_data$next [35:24] = data_tmp_2;
          \r_data$next [47:36] = \$314 [11:0];
          \r_data$next [59:48] = data_tmp_4;
          \r_data$next [71:60] = data_tmp_5;
          \r_data$next [83:72] = data_tmp_6;
          \r_data$next [95:84] = data_tmp_7;
          \r_data$next [107:96] = data_tmp_8;
          \r_data$next [119:108] = data_tmp_9;
          \r_data$next [131:120] = data_tmp_10;
          \r_data$next [143:132] = data_tmp_11;
          \r_data$next [155:144] = data_tmp_12;
          \r_data$next [167:156] = data_tmp_13;
          \r_data$next [179:168] = data_tmp_14;
          \r_data$next [191:180] = data_tmp_15;
        end
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \r_data$next  = 192'h000000000000000000000000000000000000000000000000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$15 ) begin end
    \data_tmp_0$next  = data_tmp_0;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" *)
    casez (\$316 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:619" */
      default:
          \data_tmp_0$next  = \$324 ;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \data_tmp_0$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$15 ) begin end
    \data_tmp_1$next  = data_tmp_1;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" *)
    casez (\$326 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:619" */
      default:
          \data_tmp_1$next  = \$328 ;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \data_tmp_1$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$15 ) begin end
    \data_tmp_2$next  = data_tmp_2;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" *)
    casez (\$340 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:619" */
      default:
          \data_tmp_2$next  = \$342 ;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \data_tmp_2$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$15 ) begin end
    \data_tmp_3$next  = data_tmp_3;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" *)
    casez (\$352 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:619" */
      default:
          \data_tmp_3$next  = \$354 ;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \data_tmp_3$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$15 ) begin end
    \data_tmp_4$next  = data_tmp_4;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" *)
    casez (\$362 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:619" */
      default:
          \data_tmp_4$next  = \$364 ;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \data_tmp_4$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$15 ) begin end
    \data_tmp_5$next  = data_tmp_5;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" *)
    casez (\$376 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:619" */
      default:
          \data_tmp_5$next  = \$378 ;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \data_tmp_5$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$15 ) begin end
    \data_tmp_6$next  = data_tmp_6;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" *)
    casez (\$390 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:619" */
      default:
          \data_tmp_6$next  = \$392 ;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \data_tmp_6$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$15 ) begin end
    \data_tmp_7$next  = data_tmp_7;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" *)
    casez (\$404 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:619" */
      default:
          \data_tmp_7$next  = \$406 ;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \data_tmp_7$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$15 ) begin end
    \data_tmp_8$next  = data_tmp_8;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" *)
    casez (\$418 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:619" */
      default:
          \data_tmp_8$next  = \$420 ;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \data_tmp_8$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$15 ) begin end
    \data_tmp_9$next  = data_tmp_9;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" *)
    casez (\$432 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:619" */
      default:
          \data_tmp_9$next  = \$434 ;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \data_tmp_9$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$15 ) begin end
    \data_tmp_10$next  = data_tmp_10;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" *)
    casez (\$446 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:619" */
      default:
          \data_tmp_10$next  = \$448 ;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \data_tmp_10$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$15 ) begin end
    \data_tmp_11$next  = data_tmp_11;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" *)
    casez (\$460 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:619" */
      default:
          \data_tmp_11$next  = \$462 ;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \data_tmp_11$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$15 ) begin end
    \data_tmp_12$next  = data_tmp_12;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" *)
    casez (\$474 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:619" */
      default:
          \data_tmp_12$next  = \$476 ;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \data_tmp_12$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$15 ) begin end
    \data_tmp_13$next  = data_tmp_13;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" *)
    casez (\$488 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:619" */
      default:
          \data_tmp_13$next  = \$490 ;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \data_tmp_13$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$15 ) begin end
    \data_tmp_14$next  = data_tmp_14;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" *)
    casez (\$502 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:619" */
      default:
          \data_tmp_14$next  = \$504 ;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \data_tmp_14$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$15 ) begin end
    \data_tmp_15$next  = data_tmp_15;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" *)
    casez (\$516 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:616" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:619" */
      default:
          \data_tmp_15$next  = \$518 ;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \data_tmp_15$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$15 ) begin end
    \r_curr_buf$next  = r_curr_buf;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:663" *)
    casez (r_finished)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:663" */
      1'h1:
          \r_curr_buf$next  = \$530 ;
    endcase
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:674" *)
    casez (restart)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:674" */
      1'h1:
          \r_curr_buf$next  = 1'h0;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \r_curr_buf$next  = 1'h0;
    endcase
  end
  assign \$42  = \$43 ;
  assign \$53  = \$54 ;
  assign \$66  = \$71 ;
  assign \$75  = \$80 ;
  assign \$84  = \$89 ;
  assign \$93  = \$98 ;
  assign \$144  = \$145 ;
  assign \$149  = \$150 ;
  assign \$152  = \$155 ;
  assign \$167  = \$168 ;
  assign \$170  = \$171 ;
  assign \$173  = \$174 ;
  assign \$176  = \$177 ;
  assign \$179  = \$180 ;
  assign \$182  = \$183 ;
  assign \$185  = \$188 ;
  assign \$190  = \$193 ;
  assign \$195  = \$198 ;
  assign \$200  = \$203 ;
  assign \$205  = \$208 ;
  assign \$210  = \$213 ;
  assign \$215  = \$220 ;
  assign \$222  = \$227 ;
  assign \$229  = \$234 ;
  assign \$236  = \$241 ;
  assign \$243  = \$248 ;
  assign \$250  = \$255 ;
  assign \$257  = \$258 ;
  assign \$260  = \$263 ;
  assign \$287  = \$288 ;
  assign \$290  = \$291 ;
  assign \$293  = \$294 ;
  assign \$296  = \$297 ;
  assign \$299  = \$300 ;
  assign \$302  = \$303 ;
  assign \$305  = \$306 ;
  assign \$308  = \$309 ;
  assign \$311  = \$314 ;
  assign smr_no_p = r_addr[1:0];
  assign smr_3_limit = \$98 [9:0];
  assign smr_3_mem_data = dp_3_r_data;
  assign smr_2_limit = \$89 [9:0];
  assign smr_2_mem_data = dp_2_r_data;
  assign smr_1_limit = \$80 [9:0];
  assign smr_1_mem_data = dp_1_r_data;
  assign smr_0_limit = \$71 [9:0];
  assign smr_0_mem_data = dp_0_r_data;
  assign input_width_count_restart = \$56 ;
  assign input_width_count_max = \$54 [7:0];
  assign dp_3_w_en = \$29 ;
  assign dp_3_w_data = w_data;
  assign dp_3_w_addr = { w_curr_buf, w_addr[10:2] };
  assign dp_2_w_en = \$23 ;
  assign dp_2_w_data = w_data;
  assign dp_2_w_addr = { w_curr_buf, w_addr[10:2] };
  assign dp_1_w_en = \$17 ;
  assign dp_1_w_data = w_data;
  assign dp_1_w_addr = { w_curr_buf, w_addr[10:2] };
  assign dp_0_w_en = \$11 ;
  assign dp_0_w_data = w_data;
  assign dp_0_w_addr = { w_curr_buf, w_addr[10:2] };
  assign \$71  = { 2'h0, \$69 [12:2] };
  assign \$80  = { 2'h0, \$78 [12:2] };
  assign \$89  = { 2'h0, \$87 [12:2] };
  assign \$98  = { 2'h0, \$96 [12:2] };
  assign \$312  = { offset[11], offset, 2'h0 };
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.ins_set" *)
(* generator = "Amaranth" *)
module ins_set(clk, w_data, w_en, w_ready, in0, start, done, rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$16  = 0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:773" *)
  wire \$1 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:773" *)
  wire \$11 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:779" *)
  wire \$13 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:779" *)
  wire \$15 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:784" *)
  wire \$17 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:784" *)
  wire \$19 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:773" *)
  wire \$21 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:779" *)
  wire \$23 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:779" *)
  wire \$25 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:784" *)
  wire \$27 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:784" *)
  wire \$29 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:779" *)
  wire \$3 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:773" *)
  wire \$31 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:779" *)
  wire \$33 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:779" *)
  wire \$35 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:784" *)
  wire \$37 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:784" *)
  wire \$39 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:773" *)
  wire \$41 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:779" *)
  wire \$43 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:779" *)
  wire \$45 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:784" *)
  wire \$47 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:784" *)
  wire \$49 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:779" *)
  wire \$5 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:784" *)
  wire \$7 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:784" *)
  wire \$9 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:770" *)
  reg [31:0] buffer = 32'd0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:770" *)
  reg [31:0] \buffer$next ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:46" *)
  output done;
  reg done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:47" *)
  input [31:0] in0;
  wire [31:0] in0;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:45" *)
  input start;
  wire start;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:754" *)
  output [31:0] w_data;
  reg [31:0] w_data;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:755" *)
  output w_en;
  reg w_en;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:756" *)
  input w_ready;
  wire w_ready;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:771" *)
  reg waiting = 1'h0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:771" *)
  reg \waiting$next ;
  assign \$9  = waiting & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:784" *) \$7 ;
  assign \$11  = start & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:773" *) w_ready;
  assign \$13  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:779" *) w_ready;
  assign \$15  = start & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:779" *) \$13 ;
  assign \$17  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:784" *) w_ready;
  assign \$1  = start & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:773" *) w_ready;
  assign \$19  = waiting & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:784" *) \$17 ;
  assign \$21  = start & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:773" *) w_ready;
  assign \$23  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:779" *) w_ready;
  assign \$25  = start & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:779" *) \$23 ;
  assign \$27  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:784" *) w_ready;
  assign \$29  = waiting & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:784" *) \$27 ;
  assign \$31  = start & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:773" *) w_ready;
  assign \$33  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:779" *) w_ready;
  assign \$35  = start & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:779" *) \$33 ;
  assign \$37  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:784" *) w_ready;
  assign \$3  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:779" *) w_ready;
  assign \$39  = waiting & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:784" *) \$37 ;
  assign \$41  = start & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:773" *) w_ready;
  assign \$43  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:779" *) w_ready;
  assign \$45  = start & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:779" *) \$43 ;
  assign \$47  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:784" *) w_ready;
  assign \$49  = waiting & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:784" *) \$47 ;
  always @(posedge clk)
    waiting <= \waiting$next ;
  always @(posedge clk)
    buffer <= \buffer$next ;
  assign \$5  = start & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:779" *) \$3 ;
  assign \$7  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:784" *) w_ready;
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$16 ) begin end
    done = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:773" *)
    casez ({ \$9 , \$5 , \$1  })
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:773" */
      3'b??1:
          done = 1'h1;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:779" */
      3'b?1?:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:784" */
      3'b1??:
          done = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$16 ) begin end
    w_en = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:773" *)
    casez ({ \$19 , \$15 , \$11  })
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:773" */
      3'b??1:
          w_en = 1'h1;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:779" */
      3'b?1?:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:784" */
      3'b1??:
          w_en = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$16 ) begin end
    w_data = 32'd0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:773" *)
    casez ({ \$29 , \$25 , \$21  })
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:773" */
      3'b??1:
          w_data = in0;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:779" */
      3'b?1?:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:784" */
      3'b1??:
          w_data = in0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$16 ) begin end
    \waiting$next  = waiting;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:773" *)
    casez ({ \$39 , \$35 , \$31  })
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:773" */
      3'b??1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:779" */
      3'b?1?:
          \waiting$next  = 1'h1;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:784" */
      3'b1??:
          \waiting$next  = 1'h1;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \waiting$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$16 ) begin end
    \buffer$next  = buffer;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:773" *)
    casez ({ \$49 , \$45 , \$41  })
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:773" */
      3'b??1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:779" */
      3'b?1?:
          \buffer$next  = in0;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \buffer$next  = 32'd0;
    endcase
  end
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.mark_read" *)
(* generator = "Amaranth" *)
module mark_read(clk, set, in0, start, \output , done, rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$17  = 0;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:46" *)
  output done;
  reg done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:47" *)
  input [31:0] in0;
  wire [31:0] in0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:49" *)
  output [31:0] \output ;
  reg [31:0] \output ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:73" *)
  output set;
  reg set = 1'h0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:73" *)
  reg \set$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:45" *)
  input start;
  wire start;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:72" *)
  reg [31:0] value = 32'd0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:72" *)
  reg [31:0] \value$next ;
  always @(posedge clk)
    set <= \set$next ;
  always @(posedge clk)
    value <= \value$next ;
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$17 ) begin end
    \set$next  = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" *)
    casez (start)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" */
      1'h1:
          \set$next  = 1'h1;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \set$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$17 ) begin end
    \value$next  = value;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" *)
    casez (start)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" */
      1'h1:
          \value$next  = in0;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \value$next  = 32'd0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$17 ) begin end
    \output  = 32'd0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" *)
    casez (start)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" */
      1'h1:
          \output  = value;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$17 ) begin end
    done = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" *)
    casez (start)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" */
      1'h1:
          done = 1'h1;
    endcase
  end
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.mul" *)
(* generator = "Amaranth" *)
module mul(clk, f_data, i_data, \$signal , \$signal$1 , \$signal$2 , \$signal$3 , \$signal$4 , \$signal$5 , \$signal$6 , \$signal$7 , \$signal$8 , \$signal$9 , \$signal$10 , \$signal$11 , \$signal$12 , \$signal$13 , \$signal$14 , \$signal$15 , rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$18  = 0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:77" *)
  wire [23:0] \$16 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:77" *)
  wire [23:0] \$20 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:77" *)
  wire [23:0] \$24 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:77" *)
  wire [23:0] \$28 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:77" *)
  wire [23:0] \$32 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:77" *)
  wire [23:0] \$36 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:77" *)
  wire [23:0] \$40 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:77" *)
  wire [23:0] \$44 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:77" *)
  wire [23:0] \$48 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:77" *)
  wire [23:0] \$52 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:77" *)
  wire [23:0] \$56 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:77" *)
  wire [23:0] \$60 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:77" *)
  wire [23:0] \$64 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:77" *)
  wire [23:0] \$68 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:77" *)
  wire [23:0] \$72 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:77" *)
  wire [23:0] \$76 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:62" *)
  output [23:0] \$signal ;
  wire [23:0] \$signal ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:62" *)
  output [23:0] \$signal$1 ;
  wire [23:0] \$signal$1 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:62" *)
  output [23:0] \$signal$10 ;
  wire [23:0] \$signal$10 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:62" *)
  output [23:0] \$signal$11 ;
  wire [23:0] \$signal$11 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:62" *)
  output [23:0] \$signal$12 ;
  wire [23:0] \$signal$12 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:62" *)
  output [23:0] \$signal$13 ;
  wire [23:0] \$signal$13 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:62" *)
  output [23:0] \$signal$14 ;
  wire [23:0] \$signal$14 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:62" *)
  output [23:0] \$signal$15 ;
  wire [23:0] \$signal$15 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:62" *)
  output [23:0] \$signal$2 ;
  wire [23:0] \$signal$2 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:62" *)
  output [23:0] \$signal$3 ;
  wire [23:0] \$signal$3 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:62" *)
  output [23:0] \$signal$4 ;
  wire [23:0] \$signal$4 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:62" *)
  output [23:0] \$signal$5 ;
  wire [23:0] \$signal$5 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:62" *)
  output [23:0] \$signal$6 ;
  wire [23:0] \$signal$6 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:62" *)
  output [23:0] \$signal$7 ;
  wire [23:0] \$signal$7 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:62" *)
  output [23:0] \$signal$8 ;
  wire [23:0] \$signal$8 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:62" *)
  output [23:0] \$signal$9 ;
  wire [23:0] \$signal$9 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:57" *)
  input [191:0] f_data;
  wire [191:0] f_data;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:72" *)
  reg [11:0] f_tmp = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:72" *)
  reg [11:0] \f_tmp$18  = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:72" *)
  reg [11:0] \f_tmp$18$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:72" *)
  reg [11:0] \f_tmp$22  = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:72" *)
  reg [11:0] \f_tmp$22$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:72" *)
  reg [11:0] \f_tmp$26  = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:72" *)
  reg [11:0] \f_tmp$26$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:72" *)
  reg [11:0] \f_tmp$30  = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:72" *)
  reg [11:0] \f_tmp$30$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:72" *)
  reg [11:0] \f_tmp$34  = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:72" *)
  reg [11:0] \f_tmp$34$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:72" *)
  reg [11:0] \f_tmp$38  = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:72" *)
  reg [11:0] \f_tmp$38$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:72" *)
  reg [11:0] \f_tmp$42  = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:72" *)
  reg [11:0] \f_tmp$42$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:72" *)
  reg [11:0] \f_tmp$46  = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:72" *)
  reg [11:0] \f_tmp$46$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:72" *)
  reg [11:0] \f_tmp$50  = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:72" *)
  reg [11:0] \f_tmp$50$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:72" *)
  reg [11:0] \f_tmp$54  = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:72" *)
  reg [11:0] \f_tmp$54$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:72" *)
  reg [11:0] \f_tmp$58  = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:72" *)
  reg [11:0] \f_tmp$58$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:72" *)
  reg [11:0] \f_tmp$62  = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:72" *)
  reg [11:0] \f_tmp$62$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:72" *)
  reg [11:0] \f_tmp$66  = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:72" *)
  reg [11:0] \f_tmp$66$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:72" *)
  reg [11:0] \f_tmp$70  = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:72" *)
  reg [11:0] \f_tmp$70$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:72" *)
  reg [11:0] \f_tmp$74  = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:72" *)
  reg [11:0] \f_tmp$74$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:72" *)
  reg [11:0] \f_tmp$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:58" *)
  input [191:0] i_data;
  wire [191:0] i_data;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:74" *)
  reg [11:0] i_tmp = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:74" *)
  reg [11:0] \i_tmp$19  = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:74" *)
  reg [11:0] \i_tmp$19$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:74" *)
  reg [11:0] \i_tmp$23  = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:74" *)
  reg [11:0] \i_tmp$23$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:74" *)
  reg [11:0] \i_tmp$27  = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:74" *)
  reg [11:0] \i_tmp$27$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:74" *)
  reg [11:0] \i_tmp$31  = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:74" *)
  reg [11:0] \i_tmp$31$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:74" *)
  reg [11:0] \i_tmp$35  = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:74" *)
  reg [11:0] \i_tmp$35$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:74" *)
  reg [11:0] \i_tmp$39  = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:74" *)
  reg [11:0] \i_tmp$39$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:74" *)
  reg [11:0] \i_tmp$43  = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:74" *)
  reg [11:0] \i_tmp$43$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:74" *)
  reg [11:0] \i_tmp$47  = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:74" *)
  reg [11:0] \i_tmp$47$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:74" *)
  reg [11:0] \i_tmp$51  = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:74" *)
  reg [11:0] \i_tmp$51$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:74" *)
  reg [11:0] \i_tmp$55  = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:74" *)
  reg [11:0] \i_tmp$55$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:74" *)
  reg [11:0] \i_tmp$59  = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:74" *)
  reg [11:0] \i_tmp$59$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:74" *)
  reg [11:0] \i_tmp$63  = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:74" *)
  reg [11:0] \i_tmp$63$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:74" *)
  reg [11:0] \i_tmp$67  = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:74" *)
  reg [11:0] \i_tmp$67$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:74" *)
  reg [11:0] \i_tmp$71  = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:74" *)
  reg [11:0] \i_tmp$71$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:74" *)
  reg [11:0] \i_tmp$75  = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:74" *)
  reg [11:0] \i_tmp$75$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:74" *)
  reg [11:0] \i_tmp$next ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  always @(posedge clk)
    \f_tmp$58  <= \f_tmp$58$next ;
  always @(posedge clk)
    \i_tmp$59  <= \i_tmp$59$next ;
  always @(posedge clk)
    \f_tmp$62  <= \f_tmp$62$next ;
  always @(posedge clk)
    \i_tmp$63  <= \i_tmp$63$next ;
  always @(posedge clk)
    \f_tmp$66  <= \f_tmp$66$next ;
  always @(posedge clk)
    \i_tmp$67  <= \i_tmp$67$next ;
  always @(posedge clk)
    \f_tmp$70  <= \f_tmp$70$next ;
  always @(posedge clk)
    \i_tmp$71  <= \i_tmp$71$next ;
  always @(posedge clk)
    \f_tmp$74  <= \f_tmp$74$next ;
  always @(posedge clk)
    \i_tmp$75  <= \i_tmp$75$next ;
  assign \$16  = $signed(i_tmp) * (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:77" *) $signed(f_tmp);
  assign \$20  = $signed(\i_tmp$19 ) * (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:77" *) $signed(\f_tmp$18 );
  assign \$24  = $signed(\i_tmp$23 ) * (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:77" *) $signed(\f_tmp$22 );
  assign \$28  = $signed(\i_tmp$27 ) * (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:77" *) $signed(\f_tmp$26 );
  assign \$32  = $signed(\i_tmp$31 ) * (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:77" *) $signed(\f_tmp$30 );
  assign \$36  = $signed(\i_tmp$35 ) * (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:77" *) $signed(\f_tmp$34 );
  assign \$40  = $signed(\i_tmp$39 ) * (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:77" *) $signed(\f_tmp$38 );
  assign \$44  = $signed(\i_tmp$43 ) * (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:77" *) $signed(\f_tmp$42 );
  assign \$48  = $signed(\i_tmp$47 ) * (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:77" *) $signed(\f_tmp$46 );
  assign \$52  = $signed(\i_tmp$51 ) * (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:77" *) $signed(\f_tmp$50 );
  assign \$56  = $signed(\i_tmp$55 ) * (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:77" *) $signed(\f_tmp$54 );
  assign \$60  = $signed(\i_tmp$59 ) * (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:77" *) $signed(\f_tmp$58 );
  assign \$64  = $signed(\i_tmp$63 ) * (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:77" *) $signed(\f_tmp$62 );
  assign \$68  = $signed(\i_tmp$67 ) * (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:77" *) $signed(\f_tmp$66 );
  assign \$72  = $signed(\i_tmp$71 ) * (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:77" *) $signed(\f_tmp$70 );
  assign \$76  = $signed(\i_tmp$75 ) * (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/mul.py:77" *) $signed(\f_tmp$74 );
  always @(posedge clk)
    f_tmp <= \f_tmp$next ;
  always @(posedge clk)
    i_tmp <= \i_tmp$next ;
  always @(posedge clk)
    \f_tmp$18  <= \f_tmp$18$next ;
  always @(posedge clk)
    \i_tmp$19  <= \i_tmp$19$next ;
  always @(posedge clk)
    \f_tmp$22  <= \f_tmp$22$next ;
  always @(posedge clk)
    \i_tmp$23  <= \i_tmp$23$next ;
  always @(posedge clk)
    \f_tmp$26  <= \f_tmp$26$next ;
  always @(posedge clk)
    \i_tmp$27  <= \i_tmp$27$next ;
  always @(posedge clk)
    \f_tmp$30  <= \f_tmp$30$next ;
  always @(posedge clk)
    \i_tmp$31  <= \i_tmp$31$next ;
  always @(posedge clk)
    \f_tmp$34  <= \f_tmp$34$next ;
  always @(posedge clk)
    \i_tmp$35  <= \i_tmp$35$next ;
  always @(posedge clk)
    \f_tmp$38  <= \f_tmp$38$next ;
  always @(posedge clk)
    \i_tmp$39  <= \i_tmp$39$next ;
  always @(posedge clk)
    \f_tmp$42  <= \f_tmp$42$next ;
  always @(posedge clk)
    \i_tmp$43  <= \i_tmp$43$next ;
  always @(posedge clk)
    \f_tmp$46  <= \f_tmp$46$next ;
  always @(posedge clk)
    \i_tmp$47  <= \i_tmp$47$next ;
  always @(posedge clk)
    \f_tmp$50  <= \f_tmp$50$next ;
  always @(posedge clk)
    \i_tmp$51  <= \i_tmp$51$next ;
  always @(posedge clk)
    \f_tmp$54  <= \f_tmp$54$next ;
  always @(posedge clk)
    \i_tmp$55  <= \i_tmp$55$next ;
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$18 ) begin end
    \f_tmp$next  = f_data[11:0];
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \f_tmp$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$18 ) begin end
    \i_tmp$next  = i_data[11:0];
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \i_tmp$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$18 ) begin end
    \i_tmp$27$next  = i_data[47:36];
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \i_tmp$27$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$18 ) begin end
    \f_tmp$30$next  = f_data[59:48];
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \f_tmp$30$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$18 ) begin end
    \i_tmp$31$next  = i_data[59:48];
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \i_tmp$31$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$18 ) begin end
    \f_tmp$34$next  = f_data[71:60];
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \f_tmp$34$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$18 ) begin end
    \i_tmp$35$next  = i_data[71:60];
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \i_tmp$35$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$18 ) begin end
    \f_tmp$38$next  = f_data[83:72];
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \f_tmp$38$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$18 ) begin end
    \i_tmp$39$next  = i_data[83:72];
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \i_tmp$39$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$18 ) begin end
    \f_tmp$42$next  = f_data[95:84];
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \f_tmp$42$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$18 ) begin end
    \i_tmp$43$next  = i_data[95:84];
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \i_tmp$43$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$18 ) begin end
    \f_tmp$46$next  = f_data[107:96];
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \f_tmp$46$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$18 ) begin end
    \i_tmp$47$next  = i_data[107:96];
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \i_tmp$47$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$18 ) begin end
    \f_tmp$50$next  = f_data[119:108];
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \f_tmp$50$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$18 ) begin end
    \i_tmp$51$next  = i_data[119:108];
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \i_tmp$51$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$18 ) begin end
    \f_tmp$18$next  = f_data[23:12];
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \f_tmp$18$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$18 ) begin end
    \f_tmp$54$next  = f_data[131:120];
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \f_tmp$54$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$18 ) begin end
    \i_tmp$55$next  = i_data[131:120];
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \i_tmp$55$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$18 ) begin end
    \f_tmp$58$next  = f_data[143:132];
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \f_tmp$58$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$18 ) begin end
    \i_tmp$59$next  = i_data[143:132];
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \i_tmp$59$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$18 ) begin end
    \f_tmp$62$next  = f_data[155:144];
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \f_tmp$62$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$18 ) begin end
    \i_tmp$63$next  = i_data[155:144];
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \i_tmp$63$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$18 ) begin end
    \f_tmp$66$next  = f_data[167:156];
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \f_tmp$66$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$18 ) begin end
    \i_tmp$19$next  = i_data[23:12];
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \i_tmp$19$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$18 ) begin end
    \i_tmp$67$next  = i_data[167:156];
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \i_tmp$67$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$18 ) begin end
    \f_tmp$70$next  = f_data[179:168];
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \f_tmp$70$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$18 ) begin end
    \i_tmp$71$next  = i_data[179:168];
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \i_tmp$71$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$18 ) begin end
    \f_tmp$74$next  = f_data[191:180];
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \f_tmp$74$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$18 ) begin end
    \i_tmp$75$next  = i_data[191:180];
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \i_tmp$75$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$18 ) begin end
    \f_tmp$22$next  = f_data[35:24];
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \f_tmp$22$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$18 ) begin end
    \i_tmp$23$next  = i_data[35:24];
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \i_tmp$23$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$18 ) begin end
    \f_tmp$26$next  = f_data[47:36];
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \f_tmp$26$next  = 12'h000;
    endcase
  end
  assign \$signal$15  = \$76 ;
  assign \$signal$14  = \$72 ;
  assign \$signal$13  = \$68 ;
  assign \$signal$12  = \$64 ;
  assign \$signal$11  = \$60 ;
  assign \$signal$10  = \$56 ;
  assign \$signal$9  = \$52 ;
  assign \$signal$8  = \$48 ;
  assign \$signal$7  = \$44 ;
  assign \$signal$6  = \$40 ;
  assign \$signal$5  = \$36 ;
  assign \$signal$4  = \$32 ;
  assign \$signal$3  = \$28 ;
  assign \$signal$2  = \$24 ;
  assign \$signal$1  = \$20 ;
  assign \$signal  = \$16 ;
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.seq.mul_delay" *)
(* generator = "Amaranth" *)
module mul_delay(clk, cycles, \input , \output , rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$19  = 0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:47" *)
  wire \$1 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:49" *)
  wire \$3 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:51" *)
  wire \$5 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:53" *)
  wire \$7 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:40" *)
  input [3:0] cycles;
  wire [3:0] cycles;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:41" *)
  input \input ;
  wire \input ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:42" *)
  output \output ;
  reg \output ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:45" *)
  reg [5:0] shift_register = 6'h00;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:45" *)
  reg [5:0] \shift_register$next ;
  assign \$1  = cycles == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:47" *) 3'h5;
  assign \$3  = cycles == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:49" *) 3'h4;
  assign \$5  = cycles == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:51" *) 2'h3;
  assign \$7  = cycles == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:53" *) 2'h2;
  always @(posedge clk)
    shift_register <= \shift_register$next ;
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$19 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:47" *)
    casez ({ \$7 , \$5 , \$3 , \$1  })
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:47" */
      4'b???1:
          \output  = shift_register[4];
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:49" */
      4'b??1?:
          \output  = shift_register[3];
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:51" */
      4'b?1??:
          \output  = shift_register[2];
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:53" */
      4'b1???:
          \output  = shift_register[1];
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:55" */
      default:
          \output  = shift_register[0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$19 ) begin end
    \shift_register$next [5:1] = shift_register[4:0];
    \shift_register$next [0] = \input ;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \shift_register$next  = 6'h00;
    endcase
  end
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.oq_get" *)
(* generator = "Amaranth" *)
module oq_get(clk, data, ready, next, start, \output , done, rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$20  = 0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:375" *)
  wire \$1 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:375" *)
  wire \$11 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:382" *)
  wire \$13 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:382" *)
  wire \$15 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:375" *)
  wire \$17 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:375" *)
  wire \$19 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:382" *)
  wire \$21 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:382" *)
  wire \$23 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:375" *)
  wire \$25 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:375" *)
  wire \$27 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:382" *)
  wire \$29 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:375" *)
  wire \$3 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:382" *)
  wire \$31 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:382" *)
  wire \$5 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:382" *)
  wire \$7 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:375" *)
  wire \$9 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:369" *)
  input [31:0] data;
  wire [31:0] data;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:46" *)
  output done;
  reg done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:370" *)
  output next;
  reg next;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:49" *)
  output [31:0] \output ;
  reg [31:0] \output ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:371" *)
  input ready;
  wire ready;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:45" *)
  input start;
  wire start;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:374" *)
  reg waiting = 1'h0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:374" *)
  reg \waiting$next ;
  assign \$9  = waiting | (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:375" *) start;
  assign \$11  = ready & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:375" *) \$9 ;
  assign \$13  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:382" *) ready;
  assign \$15  = start & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:382" *) \$13 ;
  assign \$17  = waiting | (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:375" *) start;
  assign \$1  = waiting | (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:375" *) start;
  assign \$19  = ready & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:375" *) \$17 ;
  assign \$21  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:382" *) ready;
  assign \$23  = start & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:382" *) \$21 ;
  assign \$25  = waiting | (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:375" *) start;
  assign \$27  = ready & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:375" *) \$25 ;
  assign \$29  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:382" *) ready;
  assign \$31  = start & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:382" *) \$29 ;
  always @(posedge clk)
    waiting <= \waiting$next ;
  assign \$3  = ready & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:375" *) \$1 ;
  assign \$5  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:382" *) ready;
  assign \$7  = start & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:382" *) \$5 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$20 ) begin end
    \output  = 32'd0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:375" *)
    casez ({ \$7 , \$3  })
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:375" */
      2'b?1:
          \output  = data;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$20 ) begin end
    next = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:375" *)
    casez ({ \$15 , \$11  })
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:375" */
      2'b?1:
          next = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$20 ) begin end
    done = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:375" *)
    casez ({ \$23 , \$19  })
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:375" */
      2'b?1:
          done = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$20 ) begin end
    \waiting$next  = waiting;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:375" *)
    casez ({ \$31 , \$27  })
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:375" */
      2'b?1:
          \waiting$next  = 1'h0;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:382" */
      2'b1?:
          \waiting$next  = 1'h1;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \waiting$next  = 1'h0;
    endcase
  end
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.pp_0" *)
(* generator = "Amaranth" *)
module pp_0(clk, offset, activation_min, activation_max, bias, multiplier, shift, accumulator, result, rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$21  = 0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:159" *)
  wire [32:0] \$1 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:171" *)
  wire [62:0] \$11 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:171" *)
  wire [62:0] \$12 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:96" *)
  wire [32:0] \$14 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:96" *)
  wire [31:0] \$15 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:95" *)
  wire [31:0] \$17 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:95" *)
  wire \$18 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:93" *)
  wire [34:0] \$19 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:159" *)
  wire [32:0] \$2 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:60" *)
  wire [33:0] \$20 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:92" *)
  wire [33:0] \$22 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:92" *)
  wire [31:0] \$23 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:92" *)
  wire [32:0] \$25 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:93" *)
  wire [33:0] \$28 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:94" *)
  wire [34:0] \$31 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:92" *)
  wire [31:0] \$32 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:92" *)
  wire [32:0] \$34 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:94" *)
  wire [32:0] \$36 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:94" *)
  wire [33:0] \$38 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:166" *)
  wire \$4 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:95" *)
  wire \$41 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:96" *)
  wire [32:0] \$45 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:200" *)
  wire [32:0] \$47 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:200" *)
  wire [32:0] \$48 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:101" *)
  wire [31:0] \$50 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:101" *)
  wire [31:0] \$51 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:101" *)
  wire \$52 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:101" *)
  wire [31:0] \$55 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:100" *)
  wire \$56 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:166" *)
  wire \$6 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:169" *)
  wire [32:0] \$8 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:169" *)
  wire [32:0] \$9 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:148" *)
  input [31:0] accumulator;
  wire [31:0] accumulator;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:154" *)
  input [31:0] activation_max;
  wire [31:0] activation_max;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:153" *)
  input [31:0] activation_min;
  wire [31:0] activation_min;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:149" *)
  input [31:0] bias;
  wire [31:0] bias;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:164" *)
  reg [4:0] left_shift;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:170" *)
  wire [31:0] left_shifted;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:150" *)
  input [31:0] multiplier;
  wire [31:0] multiplier;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:152" *)
  input [31:0] offset;
  wire [31:0] offset;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:155" *)
  output [7:0] result;
  wire [7:0] result;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:186" *)
  reg [31:0] right_shifted = 32'd0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:186" *)
  reg [31:0] \right_shifted$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:165" *)
  reg [4:0] right_sr_0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:165" *)
  reg [4:0] right_sr_1 = 5'h00;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:165" *)
  reg [4:0] \right_sr_1$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:165" *)
  reg [4:0] right_sr_2 = 5'h00;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:165" *)
  reg [4:0] \right_sr_2$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:165" *)
  reg [4:0] right_sr_3 = 5'h00;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:165" *)
  reg [4:0] \right_sr_3$next ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:151" *)
  input [31:0] shift;
  wire [31:0] shift;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:58" *)
  wire [31:0] srdhm_a;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:59" *)
  wire [31:0] srdhm_b;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:60" *)
  wire [31:0] srdhm_result;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:158" *)
  wire [31:0] with_bias;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:198" *)
  wire [31:0] with_offset;
  assign \$9  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:169" *) $signed(shift);
  assign \$12  = $signed(with_bias) <<< (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:171" *) left_shift;
  assign \$15  = $signed(srdhm_result) >>> (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:96" *) right_sr_3;
  assign \$20  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:60" *) $signed(srdhm_result);
  assign \$23  = 1'h1 <<< (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:92" *) right_sr_3;
  assign \$25  = \$23  - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:92" *) 1'h1;
  assign \$22  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:92" *) \$25 ;
  assign \$28  = $signed(\$20 ) & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:93" *) $signed(\$22 );
  assign \$2  = $signed(accumulator) + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:159" *) $signed(bias);
  assign \$19  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:93" *) $signed(\$28 );
  assign \$32  = 1'h1 <<< (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:92" *) right_sr_3;
  assign \$34  = \$32  - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:92" *) 1'h1;
  assign \$38  = \$36  + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:94" *) srdhm_result[31];
  assign \$31  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:94" *) \$38 ;
  assign \$41  = $signed(\$19 ) > (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:95" *) $signed(\$31 );
  assign \$18  = \$41  ? (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:95" *) 1'h1 : 1'h0;
  assign \$17  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:95" *) \$18 ;
  assign \$45  = $signed(\$15 ) + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:96" *) $signed(\$17 );
  assign \$48  = $signed(right_shifted) + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:200" *) $signed(offset);
  assign \$4  = $signed(shift) > (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:166" *) $signed(32'd0);
  assign \$52  = $signed(with_offset) > (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:101" *) $signed(activation_max);
  assign \$51  = \$52  ? (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:101" *) activation_max : with_offset;
  assign \$56  = $signed(with_offset) < (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:100" *) $signed(activation_min);
  assign \$55  = \$56  ? (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:101" *) activation_min : \$51 ;
  always @(posedge clk)
    right_sr_1 <= \right_sr_1$next ;
  always @(posedge clk)
    right_sr_2 <= \right_sr_2$next ;
  always @(posedge clk)
    right_sr_3 <= \right_sr_3$next ;
  always @(posedge clk)
    right_shifted <= \right_shifted$next ;
  assign \$6  = $signed(shift) > (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:166" *) $signed(32'd0);
  srdhm srdhm (
    .a(srdhm_a),
    .b(srdhm_b),
    .clk(clk),
    .result(srdhm_result),
    .rst(rst)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$21 ) begin end
    left_shift = 5'h00;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:166" *)
    casez (\$4 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:166" */
      1'h1:
          left_shift = shift[4:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$21 ) begin end
    right_sr_0 = 5'h00;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:166" *)
    casez (\$6 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:166" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:168" */
      default:
          right_sr_0 = \$9 [4:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$21 ) begin end
    \right_sr_1$next  = right_sr_0;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \right_sr_1$next  = 5'h00;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$21 ) begin end
    \right_sr_2$next  = right_sr_1;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \right_sr_2$next  = 5'h00;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$21 ) begin end
    \right_sr_3$next  = right_sr_2;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \right_sr_3$next  = 5'h00;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$21 ) begin end
    \right_shifted$next  = \$45 [31:0];
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \right_shifted$next  = 32'd0;
    endcase
  end
  assign \$1  = \$2 ;
  assign \$8  = \$9 ;
  assign \$11  = \$12 ;
  assign \$14  = \$45 ;
  assign \$47  = \$48 ;
  assign \$50  = \$55 ;
  assign result = \$55 [7:0];
  assign with_offset = \$48 [31:0];
  assign srdhm_b = multiplier;
  assign srdhm_a = left_shifted;
  assign left_shifted = \$12 [31:0];
  assign with_bias = \$2 [31:0];
  assign \$36  = { 1'h0, \$34 [32:1] };
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.pp_1" *)
(* generator = "Amaranth" *)
module pp_1(clk, offset, activation_min, activation_max, bias, multiplier, shift, accumulator, result, rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$22  = 0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:159" *)
  wire [32:0] \$1 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:171" *)
  wire [62:0] \$11 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:171" *)
  wire [62:0] \$12 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:96" *)
  wire [32:0] \$14 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:96" *)
  wire [31:0] \$15 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:95" *)
  wire [31:0] \$17 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:95" *)
  wire \$18 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:93" *)
  wire [34:0] \$19 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:159" *)
  wire [32:0] \$2 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:60" *)
  wire [33:0] \$20 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:92" *)
  wire [33:0] \$22 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:92" *)
  wire [31:0] \$23 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:92" *)
  wire [32:0] \$25 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:93" *)
  wire [33:0] \$28 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:94" *)
  wire [34:0] \$31 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:92" *)
  wire [31:0] \$32 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:92" *)
  wire [32:0] \$34 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:94" *)
  wire [32:0] \$36 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:94" *)
  wire [33:0] \$38 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:166" *)
  wire \$4 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:95" *)
  wire \$41 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:96" *)
  wire [32:0] \$45 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:200" *)
  wire [32:0] \$47 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:200" *)
  wire [32:0] \$48 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:101" *)
  wire [31:0] \$50 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:101" *)
  wire [31:0] \$51 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:101" *)
  wire \$52 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:101" *)
  wire [31:0] \$55 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:100" *)
  wire \$56 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:166" *)
  wire \$6 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:169" *)
  wire [32:0] \$8 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:169" *)
  wire [32:0] \$9 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:148" *)
  input [31:0] accumulator;
  wire [31:0] accumulator;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:154" *)
  input [31:0] activation_max;
  wire [31:0] activation_max;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:153" *)
  input [31:0] activation_min;
  wire [31:0] activation_min;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:149" *)
  input [31:0] bias;
  wire [31:0] bias;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:164" *)
  reg [4:0] left_shift;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:170" *)
  wire [31:0] left_shifted;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:150" *)
  input [31:0] multiplier;
  wire [31:0] multiplier;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:152" *)
  input [31:0] offset;
  wire [31:0] offset;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:155" *)
  output [7:0] result;
  wire [7:0] result;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:186" *)
  reg [31:0] right_shifted = 32'd0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:186" *)
  reg [31:0] \right_shifted$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:165" *)
  reg [4:0] right_sr_0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:165" *)
  reg [4:0] right_sr_1 = 5'h00;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:165" *)
  reg [4:0] \right_sr_1$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:165" *)
  reg [4:0] right_sr_2 = 5'h00;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:165" *)
  reg [4:0] \right_sr_2$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:165" *)
  reg [4:0] right_sr_3 = 5'h00;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:165" *)
  reg [4:0] \right_sr_3$next ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:151" *)
  input [31:0] shift;
  wire [31:0] shift;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:58" *)
  wire [31:0] srdhm_a;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:59" *)
  wire [31:0] srdhm_b;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:60" *)
  wire [31:0] srdhm_result;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:158" *)
  wire [31:0] with_bias;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:198" *)
  wire [31:0] with_offset;
  assign \$9  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:169" *) $signed(shift);
  assign \$12  = $signed(with_bias) <<< (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:171" *) left_shift;
  assign \$15  = $signed(srdhm_result) >>> (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:96" *) right_sr_3;
  assign \$20  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:60" *) $signed(srdhm_result);
  assign \$23  = 1'h1 <<< (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:92" *) right_sr_3;
  assign \$25  = \$23  - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:92" *) 1'h1;
  assign \$22  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:92" *) \$25 ;
  assign \$28  = $signed(\$20 ) & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:93" *) $signed(\$22 );
  assign \$2  = $signed(accumulator) + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:159" *) $signed(bias);
  assign \$19  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:93" *) $signed(\$28 );
  assign \$32  = 1'h1 <<< (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:92" *) right_sr_3;
  assign \$34  = \$32  - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:92" *) 1'h1;
  assign \$38  = \$36  + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:94" *) srdhm_result[31];
  assign \$31  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:94" *) \$38 ;
  assign \$41  = $signed(\$19 ) > (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:95" *) $signed(\$31 );
  assign \$18  = \$41  ? (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:95" *) 1'h1 : 1'h0;
  assign \$17  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:95" *) \$18 ;
  assign \$45  = $signed(\$15 ) + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:96" *) $signed(\$17 );
  assign \$48  = $signed(right_shifted) + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:200" *) $signed(offset);
  assign \$4  = $signed(shift) > (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:166" *) $signed(32'd0);
  assign \$52  = $signed(with_offset) > (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:101" *) $signed(activation_max);
  assign \$51  = \$52  ? (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:101" *) activation_max : with_offset;
  assign \$56  = $signed(with_offset) < (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:100" *) $signed(activation_min);
  assign \$55  = \$56  ? (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:101" *) activation_min : \$51 ;
  always @(posedge clk)
    right_sr_1 <= \right_sr_1$next ;
  always @(posedge clk)
    right_sr_2 <= \right_sr_2$next ;
  always @(posedge clk)
    right_sr_3 <= \right_sr_3$next ;
  always @(posedge clk)
    right_shifted <= \right_shifted$next ;
  assign \$6  = $signed(shift) > (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:166" *) $signed(32'd0);
  \srdhm$5  srdhm (
    .a(srdhm_a),
    .b(srdhm_b),
    .clk(clk),
    .result(srdhm_result),
    .rst(rst)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$22 ) begin end
    left_shift = 5'h00;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:166" *)
    casez (\$4 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:166" */
      1'h1:
          left_shift = shift[4:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$22 ) begin end
    right_sr_0 = 5'h00;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:166" *)
    casez (\$6 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:166" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:168" */
      default:
          right_sr_0 = \$9 [4:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$22 ) begin end
    \right_sr_1$next  = right_sr_0;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \right_sr_1$next  = 5'h00;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$22 ) begin end
    \right_sr_2$next  = right_sr_1;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \right_sr_2$next  = 5'h00;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$22 ) begin end
    \right_sr_3$next  = right_sr_2;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \right_sr_3$next  = 5'h00;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$22 ) begin end
    \right_shifted$next  = \$45 [31:0];
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \right_shifted$next  = 32'd0;
    endcase
  end
  assign \$1  = \$2 ;
  assign \$8  = \$9 ;
  assign \$11  = \$12 ;
  assign \$14  = \$45 ;
  assign \$47  = \$48 ;
  assign \$50  = \$55 ;
  assign result = \$55 [7:0];
  assign with_offset = \$48 [31:0];
  assign srdhm_b = multiplier;
  assign srdhm_a = left_shifted;
  assign left_shifted = \$12 [31:0];
  assign with_bias = \$2 [31:0];
  assign \$36  = { 1'h0, \$34 [32:1] };
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.pp_2" *)
(* generator = "Amaranth" *)
module pp_2(clk, offset, activation_min, activation_max, bias, multiplier, shift, accumulator, result, rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$23  = 0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:159" *)
  wire [32:0] \$1 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:171" *)
  wire [62:0] \$11 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:171" *)
  wire [62:0] \$12 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:96" *)
  wire [32:0] \$14 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:96" *)
  wire [31:0] \$15 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:95" *)
  wire [31:0] \$17 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:95" *)
  wire \$18 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:93" *)
  wire [34:0] \$19 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:159" *)
  wire [32:0] \$2 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:60" *)
  wire [33:0] \$20 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:92" *)
  wire [33:0] \$22 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:92" *)
  wire [31:0] \$23 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:92" *)
  wire [32:0] \$25 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:93" *)
  wire [33:0] \$28 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:94" *)
  wire [34:0] \$31 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:92" *)
  wire [31:0] \$32 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:92" *)
  wire [32:0] \$34 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:94" *)
  wire [32:0] \$36 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:94" *)
  wire [33:0] \$38 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:166" *)
  wire \$4 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:95" *)
  wire \$41 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:96" *)
  wire [32:0] \$45 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:200" *)
  wire [32:0] \$47 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:200" *)
  wire [32:0] \$48 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:101" *)
  wire [31:0] \$50 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:101" *)
  wire [31:0] \$51 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:101" *)
  wire \$52 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:101" *)
  wire [31:0] \$55 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:100" *)
  wire \$56 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:166" *)
  wire \$6 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:169" *)
  wire [32:0] \$8 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:169" *)
  wire [32:0] \$9 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:148" *)
  input [31:0] accumulator;
  wire [31:0] accumulator;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:154" *)
  input [31:0] activation_max;
  wire [31:0] activation_max;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:153" *)
  input [31:0] activation_min;
  wire [31:0] activation_min;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:149" *)
  input [31:0] bias;
  wire [31:0] bias;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:164" *)
  reg [4:0] left_shift;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:170" *)
  wire [31:0] left_shifted;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:150" *)
  input [31:0] multiplier;
  wire [31:0] multiplier;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:152" *)
  input [31:0] offset;
  wire [31:0] offset;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:155" *)
  output [7:0] result;
  wire [7:0] result;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:186" *)
  reg [31:0] right_shifted = 32'd0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:186" *)
  reg [31:0] \right_shifted$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:165" *)
  reg [4:0] right_sr_0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:165" *)
  reg [4:0] right_sr_1 = 5'h00;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:165" *)
  reg [4:0] \right_sr_1$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:165" *)
  reg [4:0] right_sr_2 = 5'h00;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:165" *)
  reg [4:0] \right_sr_2$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:165" *)
  reg [4:0] right_sr_3 = 5'h00;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:165" *)
  reg [4:0] \right_sr_3$next ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:151" *)
  input [31:0] shift;
  wire [31:0] shift;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:58" *)
  wire [31:0] srdhm_a;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:59" *)
  wire [31:0] srdhm_b;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:60" *)
  wire [31:0] srdhm_result;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:158" *)
  wire [31:0] with_bias;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:198" *)
  wire [31:0] with_offset;
  assign \$9  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:169" *) $signed(shift);
  assign \$12  = $signed(with_bias) <<< (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:171" *) left_shift;
  assign \$15  = $signed(srdhm_result) >>> (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:96" *) right_sr_3;
  assign \$20  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:60" *) $signed(srdhm_result);
  assign \$23  = 1'h1 <<< (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:92" *) right_sr_3;
  assign \$25  = \$23  - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:92" *) 1'h1;
  assign \$22  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:92" *) \$25 ;
  assign \$28  = $signed(\$20 ) & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:93" *) $signed(\$22 );
  assign \$2  = $signed(accumulator) + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:159" *) $signed(bias);
  assign \$19  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:93" *) $signed(\$28 );
  assign \$32  = 1'h1 <<< (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:92" *) right_sr_3;
  assign \$34  = \$32  - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:92" *) 1'h1;
  assign \$38  = \$36  + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:94" *) srdhm_result[31];
  assign \$31  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:94" *) \$38 ;
  assign \$41  = $signed(\$19 ) > (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:95" *) $signed(\$31 );
  assign \$18  = \$41  ? (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:95" *) 1'h1 : 1'h0;
  assign \$17  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:95" *) \$18 ;
  assign \$45  = $signed(\$15 ) + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:96" *) $signed(\$17 );
  assign \$48  = $signed(right_shifted) + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:200" *) $signed(offset);
  assign \$4  = $signed(shift) > (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:166" *) $signed(32'd0);
  assign \$52  = $signed(with_offset) > (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:101" *) $signed(activation_max);
  assign \$51  = \$52  ? (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:101" *) activation_max : with_offset;
  assign \$56  = $signed(with_offset) < (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:100" *) $signed(activation_min);
  assign \$55  = \$56  ? (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:101" *) activation_min : \$51 ;
  always @(posedge clk)
    right_sr_1 <= \right_sr_1$next ;
  always @(posedge clk)
    right_sr_2 <= \right_sr_2$next ;
  always @(posedge clk)
    right_sr_3 <= \right_sr_3$next ;
  always @(posedge clk)
    right_shifted <= \right_shifted$next ;
  assign \$6  = $signed(shift) > (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:166" *) $signed(32'd0);
  \srdhm$6  srdhm (
    .a(srdhm_a),
    .b(srdhm_b),
    .clk(clk),
    .result(srdhm_result),
    .rst(rst)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$23 ) begin end
    left_shift = 5'h00;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:166" *)
    casez (\$4 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:166" */
      1'h1:
          left_shift = shift[4:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$23 ) begin end
    right_sr_0 = 5'h00;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:166" *)
    casez (\$6 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:166" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:168" */
      default:
          right_sr_0 = \$9 [4:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$23 ) begin end
    \right_sr_1$next  = right_sr_0;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \right_sr_1$next  = 5'h00;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$23 ) begin end
    \right_sr_2$next  = right_sr_1;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \right_sr_2$next  = 5'h00;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$23 ) begin end
    \right_sr_3$next  = right_sr_2;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \right_sr_3$next  = 5'h00;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$23 ) begin end
    \right_shifted$next  = \$45 [31:0];
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \right_shifted$next  = 32'd0;
    endcase
  end
  assign \$1  = \$2 ;
  assign \$8  = \$9 ;
  assign \$11  = \$12 ;
  assign \$14  = \$45 ;
  assign \$47  = \$48 ;
  assign \$50  = \$55 ;
  assign result = \$55 [7:0];
  assign with_offset = \$48 [31:0];
  assign srdhm_b = multiplier;
  assign srdhm_a = left_shifted;
  assign left_shifted = \$12 [31:0];
  assign with_bias = \$2 [31:0];
  assign \$36  = { 1'h0, \$34 [32:1] };
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.pp_3" *)
(* generator = "Amaranth" *)
module pp_3(clk, offset, activation_min, activation_max, bias, multiplier, shift, accumulator, result, rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$24  = 0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:159" *)
  wire [32:0] \$1 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:171" *)
  wire [62:0] \$11 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:171" *)
  wire [62:0] \$12 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:96" *)
  wire [32:0] \$14 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:96" *)
  wire [31:0] \$15 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:95" *)
  wire [31:0] \$17 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:95" *)
  wire \$18 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:93" *)
  wire [34:0] \$19 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:159" *)
  wire [32:0] \$2 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:60" *)
  wire [33:0] \$20 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:92" *)
  wire [33:0] \$22 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:92" *)
  wire [31:0] \$23 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:92" *)
  wire [32:0] \$25 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:93" *)
  wire [33:0] \$28 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:94" *)
  wire [34:0] \$31 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:92" *)
  wire [31:0] \$32 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:92" *)
  wire [32:0] \$34 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:94" *)
  wire [32:0] \$36 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:94" *)
  wire [33:0] \$38 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:166" *)
  wire \$4 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:95" *)
  wire \$41 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:96" *)
  wire [32:0] \$45 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:200" *)
  wire [32:0] \$47 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:200" *)
  wire [32:0] \$48 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:101" *)
  wire [31:0] \$50 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:101" *)
  wire [31:0] \$51 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:101" *)
  wire \$52 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:101" *)
  wire [31:0] \$55 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:100" *)
  wire \$56 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:166" *)
  wire \$6 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:169" *)
  wire [32:0] \$8 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:169" *)
  wire [32:0] \$9 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:148" *)
  input [31:0] accumulator;
  wire [31:0] accumulator;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:154" *)
  input [31:0] activation_max;
  wire [31:0] activation_max;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:153" *)
  input [31:0] activation_min;
  wire [31:0] activation_min;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:149" *)
  input [31:0] bias;
  wire [31:0] bias;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:164" *)
  reg [4:0] left_shift;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:170" *)
  wire [31:0] left_shifted;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:150" *)
  input [31:0] multiplier;
  wire [31:0] multiplier;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:152" *)
  input [31:0] offset;
  wire [31:0] offset;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:155" *)
  output [7:0] result;
  wire [7:0] result;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:186" *)
  reg [31:0] right_shifted = 32'd0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:186" *)
  reg [31:0] \right_shifted$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:165" *)
  reg [4:0] right_sr_0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:165" *)
  reg [4:0] right_sr_1 = 5'h00;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:165" *)
  reg [4:0] \right_sr_1$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:165" *)
  reg [4:0] right_sr_2 = 5'h00;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:165" *)
  reg [4:0] \right_sr_2$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:165" *)
  reg [4:0] right_sr_3 = 5'h00;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:165" *)
  reg [4:0] \right_sr_3$next ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:151" *)
  input [31:0] shift;
  wire [31:0] shift;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:58" *)
  wire [31:0] srdhm_a;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:59" *)
  wire [31:0] srdhm_b;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:60" *)
  wire [31:0] srdhm_result;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:158" *)
  wire [31:0] with_bias;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:198" *)
  wire [31:0] with_offset;
  assign \$9  = - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:169" *) $signed(shift);
  assign \$12  = $signed(with_bias) <<< (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:171" *) left_shift;
  assign \$15  = $signed(srdhm_result) >>> (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:96" *) right_sr_3;
  assign \$20  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:60" *) $signed(srdhm_result);
  assign \$23  = 1'h1 <<< (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:92" *) right_sr_3;
  assign \$25  = \$23  - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:92" *) 1'h1;
  assign \$22  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:92" *) \$25 ;
  assign \$28  = $signed(\$20 ) & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:93" *) $signed(\$22 );
  assign \$2  = $signed(accumulator) + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:159" *) $signed(bias);
  assign \$19  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:93" *) $signed(\$28 );
  assign \$32  = 1'h1 <<< (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:92" *) right_sr_3;
  assign \$34  = \$32  - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:92" *) 1'h1;
  assign \$38  = \$36  + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:94" *) srdhm_result[31];
  assign \$31  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:94" *) \$38 ;
  assign \$41  = $signed(\$19 ) > (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:95" *) $signed(\$31 );
  assign \$18  = \$41  ? (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:95" *) 1'h1 : 1'h0;
  assign \$17  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:95" *) \$18 ;
  assign \$45  = $signed(\$15 ) + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:96" *) $signed(\$17 );
  assign \$48  = $signed(right_shifted) + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:200" *) $signed(offset);
  assign \$4  = $signed(shift) > (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:166" *) $signed(32'd0);
  assign \$52  = $signed(with_offset) > (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:101" *) $signed(activation_max);
  assign \$51  = \$52  ? (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:101" *) activation_max : with_offset;
  assign \$56  = $signed(with_offset) < (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:100" *) $signed(activation_min);
  assign \$55  = \$56  ? (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:101" *) activation_min : \$51 ;
  always @(posedge clk)
    right_sr_1 <= \right_sr_1$next ;
  always @(posedge clk)
    right_sr_2 <= \right_sr_2$next ;
  always @(posedge clk)
    right_sr_3 <= \right_sr_3$next ;
  always @(posedge clk)
    right_shifted <= \right_shifted$next ;
  assign \$6  = $signed(shift) > (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:166" *) $signed(32'd0);
  \srdhm$7  srdhm (
    .a(srdhm_a),
    .b(srdhm_b),
    .clk(clk),
    .result(srdhm_result),
    .rst(rst)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$24 ) begin end
    left_shift = 5'h00;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:166" *)
    casez (\$4 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:166" */
      1'h1:
          left_shift = shift[4:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$24 ) begin end
    right_sr_0 = 5'h00;
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:166" *)
    casez (\$6 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:166" */
      1'h1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:168" */
      default:
          right_sr_0 = \$9 [4:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$24 ) begin end
    \right_sr_1$next  = right_sr_0;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \right_sr_1$next  = 5'h00;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$24 ) begin end
    \right_sr_2$next  = right_sr_1;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \right_sr_2$next  = 5'h00;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$24 ) begin end
    \right_sr_3$next  = right_sr_2;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \right_sr_3$next  = 5'h00;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$24 ) begin end
    \right_shifted$next  = \$45 [31:0];
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \right_shifted$next  = 32'd0;
    endcase
  end
  assign \$1  = \$2 ;
  assign \$8  = \$9 ;
  assign \$11  = \$12 ;
  assign \$14  = \$45 ;
  assign \$47  = \$48 ;
  assign \$50  = \$55 ;
  assign result = \$55 [7:0];
  assign with_offset = \$48 [31:0];
  assign srdhm_b = multiplier;
  assign srdhm_a = left_shifted;
  assign left_shifted = \$12 [31:0];
  assign with_bias = \$2 [31:0];
  assign \$36  = { 1'h0, \$34 [32:1] };
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.seq.pp_delay" *)
(* generator = "Amaranth" *)
module pp_delay(clk, cycles, \input , \output , rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$25  = 0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:47" *)
  wire \$1 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:49" *)
  wire \$3 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:51" *)
  wire \$5 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:53" *)
  wire \$7 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:40" *)
  input [3:0] cycles;
  wire [3:0] cycles;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:41" *)
  input \input ;
  wire \input ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:42" *)
  output \output ;
  reg \output ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:45" *)
  reg [5:0] shift_register = 6'h00;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:45" *)
  reg [5:0] \shift_register$next ;
  assign \$1  = cycles == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:47" *) 3'h5;
  assign \$3  = cycles == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:49" *) 3'h4;
  assign \$5  = cycles == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:51" *) 2'h3;
  assign \$7  = cycles == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:53" *) 2'h2;
  always @(posedge clk)
    shift_register <= \shift_register$next ;
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$25 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:47" *)
    casez ({ \$7 , \$5 , \$3 , \$1  })
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:47" */
      4'b???1:
          \output  = shift_register[4];
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:49" */
      4'b??1?:
          \output  = shift_register[3];
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:51" */
      4'b?1??:
          \output  = shift_register[2];
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:53" */
      4'b1???:
          \output  = shift_register[1];
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:55" */
      default:
          \output  = shift_register[0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$25 ) begin end
    \shift_register$next [5:1] = shift_register[4:0];
    \shift_register$next [0] = \input ;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \shift_register$next  = 6'h00;
    endcase
  end
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.seq" *)
(* generator = "Amaranth" *)
module seq(clk, restart, num_tile, switch_PorD, start_run, in_store_ready, fifo_has_space, filter_value_words, input_depth_words, gate, filter_next, all_output_finished, mul_done, acc_done, pp_done, out_word_done, rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$26  = 0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:186" *)
  wire \$1 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:224" *)
  wire \$11 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:249" *)
  wire \$13 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:193" *)
  wire \$3 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ast.py:254" *)
  wire [11:0] \$5 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:210" *)
  wire \$7 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ast.py:254" *)
  wire [10:0] \$9 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:156" *)
  output acc_done;
  wire acc_done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:154" *)
  output all_output_finished;
  wire all_output_finished;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:40" *)
  wire [3:0] depth2_delay_cycles;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:41" *)
  wire depth2_delay_input;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:42" *)
  wire depth2_delay_output;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:57" *)
  wire f_count_done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:56" *)
  wire f_count_en;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:58" *)
  reg [11:0] f_count_max;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:55" *)
  wire f_count_restart;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:148" *)
  input fifo_has_space;
  wire fifo_has_space;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:163" *)
  output filter_next;
  reg filter_next;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:150" *)
  input [11:0] filter_value_words;
  wire [11:0] filter_value_words;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:57" *)
  wire fnext_count_done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:56" *)
  wire fnext_count_en;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:58" *)
  wire [15:0] fnext_count_max;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:55" *)
  wire fnext_count_restart;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:57" *)
  wire four_count_done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:56" *)
  wire four_count_en;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:58" *)
  wire [2:0] four_count_max;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:55" *)
  wire four_count_restart;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:153" *)
  output gate;
  wire gate;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:92" *)
  wire gate_calc_all_output_finished;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:94" *)
  wire gate_calc_fifo_has_space;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:95" *)
  wire gate_calc_gate;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:93" *)
  wire gate_calc_in_store_ready;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:91" *)
  wire gate_calc_start_run;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:57" *)
  wire i_count_done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:56" *)
  wire i_count_en;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:58" *)
  reg [10:0] i_count_max;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:55" *)
  wire i_count_restart;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:147" *)
  input in_store_ready;
  wire in_store_ready;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:152" *)
  input [10:0] input_depth_words;
  wire [10:0] input_depth_words;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:40" *)
  reg [3:0] mul_delay_cycles;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:41" *)
  wire mul_delay_input;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:42" *)
  wire mul_delay_output;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:155" *)
  output mul_done;
  wire mul_done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:162" *)
  input [15:0] num_tile;
  wire [15:0] num_tile;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:158" *)
  output out_word_done;
  reg out_word_done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:40" *)
  wire [3:0] pp_delay_cycles;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:41" *)
  wire pp_delay_input;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/delay.py:42" *)
  wire pp_delay_output;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:157" *)
  output pp_done;
  wire pp_done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:159" *)
  input restart;
  wire restart;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:146" *)
  input start_run;
  wire start_run;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:161" *)
  input switch_PorD;
  wire switch_PorD;
  assign \$9  = + (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ast.py:254" *) input_depth_words[10:1];
  assign \$11  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:224" *) switch_PorD;
  assign \$13  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:249" *) switch_PorD;
  assign \$1  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:186" *) switch_PorD;
  assign \$3  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:193" *) switch_PorD;
  assign \$5  = + (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ast.py:254" *) filter_value_words[11:1];
  assign \$7  = ~ (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:210" *) switch_PorD;
  depth2_delay depth2_delay (
    .clk(clk),
    .cycles(4'h4),
    .\input (depth2_delay_input),
    .\output (depth2_delay_output),
    .rst(rst)
  );
  f_count f_count (
    .clk(clk),
    .done(f_count_done),
    .en(f_count_en),
    .max(f_count_max),
    .restart(f_count_restart),
    .rst(rst)
  );
  fnext_count fnext_count (
    .clk(clk),
    .done(fnext_count_done),
    .en(fnext_count_en),
    .max(fnext_count_max),
    .restart(fnext_count_restart),
    .rst(rst)
  );
  four_count four_count (
    .clk(clk),
    .done(four_count_done),
    .en(four_count_en),
    .max(3'h4),
    .restart(four_count_restart),
    .rst(rst)
  );
  gate_calc gate_calc (
    .all_output_finished(gate_calc_all_output_finished),
    .clk(clk),
    .fifo_has_space(gate_calc_fifo_has_space),
    .gate(gate_calc_gate),
    .in_store_ready(gate_calc_in_store_ready),
    .rst(rst),
    .start_run(gate_calc_start_run)
  );
  i_count i_count (
    .clk(clk),
    .done(i_count_done),
    .en(i_count_en),
    .max(i_count_max),
    .restart(i_count_restart),
    .rst(rst)
  );
  mul_delay mul_delay (
    .clk(clk),
    .cycles(mul_delay_cycles),
    .\input (mul_delay_input),
    .\output (mul_delay_output),
    .rst(rst)
  );
  pp_delay pp_delay (
    .clk(clk),
    .cycles(4'h4),
    .\input (pp_delay_input),
    .\output (pp_delay_output),
    .rst(rst)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$26 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:210" *)
    casez (\$7 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:210" */
      1'h1:
          i_count_max = \$9 ;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:212" */
      default:
          i_count_max = num_tile[10:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$26 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:224" *)
    casez (\$11 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:224" */
      1'h1:
          mul_delay_cycles = 4'h3;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:226" */
      default:
          mul_delay_cycles = 4'h5;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$26 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:249" *)
    casez (\$13 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:249" */
      1'h1:
          out_word_done = four_count_done;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:251" */
      default:
          out_word_done = depth2_delay_output;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$26 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:186" *)
    casez (\$1 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:186" */
      1'h1:
          filter_next = gate;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:188" */
      default:
          filter_next = fnext_count_done;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$26 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:193" *)
    casez (\$3 )
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:193" */
      1'h1:
          f_count_max = \$5 ;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/sequencing.py:195" */
      default:
          f_count_max = num_tile[11:0];
    endcase
  end
  assign depth2_delay_input = mul_done;
  assign depth2_delay_cycles = 4'h4;
  assign four_count_en = pp_delay_output;
  assign pp_done = pp_delay_output;
  assign pp_delay_input = acc_done;
  assign pp_delay_cycles = 4'h4;
  assign i_count_en = mul_delay_output;
  assign mul_done = mul_delay_output;
  assign mul_delay_input = gate;
  assign four_count_restart = restart;
  assign four_count_max = 3'h4;
  assign acc_done = i_count_done;
  assign i_count_restart = restart;
  assign all_output_finished = f_count_done;
  assign f_count_en = gate;
  assign f_count_restart = restart;
  assign fnext_count_max = num_tile;
  assign fnext_count_en = gate;
  assign fnext_count_restart = restart;
  assign gate = gate_calc_gate;
  assign gate_calc_all_output_finished = all_output_finished;
  assign gate_calc_fifo_has_space = fifo_has_space;
  assign gate_calc_in_store_ready = in_store_ready;
  assign gate_calc_start_run = start_run;
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.set_activation_max" *)
(* generator = "Amaranth" *)
module set_activation_max(clk, value, in0, start, \output , done, rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$27  = 0;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:46" *)
  output done;
  reg done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:47" *)
  input [31:0] in0;
  wire [31:0] in0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:49" *)
  output [31:0] \output ;
  reg [31:0] \output ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:73" *)
  reg set = 1'h0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:73" *)
  reg \set$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:45" *)
  input start;
  wire start;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:72" *)
  output [31:0] value;
  reg [31:0] value = 32'd0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:72" *)
  reg [31:0] \value$next ;
  always @(posedge clk)
    set <= \set$next ;
  always @(posedge clk)
    value <= \value$next ;
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$27 ) begin end
    \set$next  = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" *)
    casez (start)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" */
      1'h1:
          \set$next  = 1'h1;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \set$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$27 ) begin end
    \value$next  = value;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" *)
    casez (start)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" */
      1'h1:
          \value$next  = in0;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \value$next  = 32'd0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$27 ) begin end
    \output  = 32'd0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" *)
    casez (start)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" */
      1'h1:
          \output  = value;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$27 ) begin end
    done = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" *)
    casez (start)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" */
      1'h1:
          done = 1'h1;
    endcase
  end
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.set_activation_min" *)
(* generator = "Amaranth" *)
module set_activation_min(clk, value, in0, start, \output , done, rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$28  = 0;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:46" *)
  output done;
  reg done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:47" *)
  input [31:0] in0;
  wire [31:0] in0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:49" *)
  output [31:0] \output ;
  reg [31:0] \output ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:73" *)
  reg set = 1'h0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:73" *)
  reg \set$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:45" *)
  input start;
  wire start;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:72" *)
  output [31:0] value;
  reg [31:0] value = 32'd0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:72" *)
  reg [31:0] \value$next ;
  always @(posedge clk)
    set <= \set$next ;
  always @(posedge clk)
    value <= \value$next ;
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$28 ) begin end
    \set$next  = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" *)
    casez (start)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" */
      1'h1:
          \set$next  = 1'h1;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \set$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$28 ) begin end
    \value$next  = value;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" *)
    casez (start)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" */
      1'h1:
          \value$next  = in0;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \value$next  = 32'd0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$28 ) begin end
    \output  = 32'd0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" *)
    casez (start)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" */
      1'h1:
          \output  = value;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$28 ) begin end
    done = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" *)
    casez (start)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" */
      1'h1:
          done = 1'h1;
    endcase
  end
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.set_input_depth_words" *)
(* generator = "Amaranth" *)
module set_input_depth_words(clk, set, value, in0, start, \output , done, rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$29  = 0;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:46" *)
  output done;
  reg done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:47" *)
  input [31:0] in0;
  wire [31:0] in0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:49" *)
  output [31:0] \output ;
  reg [31:0] \output ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:73" *)
  output set;
  reg set = 1'h0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:73" *)
  reg \set$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:45" *)
  input start;
  wire start;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:72" *)
  output [31:0] value;
  reg [31:0] value = 32'd0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:72" *)
  reg [31:0] \value$next ;
  always @(posedge clk)
    set <= \set$next ;
  always @(posedge clk)
    value <= \value$next ;
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$29 ) begin end
    \set$next  = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" *)
    casez (start)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" */
      1'h1:
          \set$next  = 1'h1;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \set$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$29 ) begin end
    \value$next  = value;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" *)
    casez (start)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" */
      1'h1:
          \value$next  = in0;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \value$next  = 32'd0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$29 ) begin end
    \output  = 32'd0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" *)
    casez (start)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" */
      1'h1:
          \output  = value;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$29 ) begin end
    done = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" *)
    casez (start)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" */
      1'h1:
          done = 1'h1;
    endcase
  end
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.set_input_offset" *)
(* generator = "Amaranth" *)
module set_input_offset(clk, value, in0, start, \output , done, rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$30  = 0;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:46" *)
  output done;
  reg done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:47" *)
  input [31:0] in0;
  wire [31:0] in0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:49" *)
  output [31:0] \output ;
  reg [31:0] \output ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:73" *)
  reg set = 1'h0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:73" *)
  reg \set$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:45" *)
  input start;
  wire start;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:72" *)
  output [31:0] value;
  reg [31:0] value = 32'd0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:72" *)
  reg [31:0] \value$next ;
  always @(posedge clk)
    set <= \set$next ;
  always @(posedge clk)
    value <= \value$next ;
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$30 ) begin end
    \set$next  = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" *)
    casez (start)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" */
      1'h1:
          \set$next  = 1'h1;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \set$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$30 ) begin end
    \value$next  = value;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" *)
    casez (start)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" */
      1'h1:
          \value$next  = in0;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \value$next  = 32'd0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$30 ) begin end
    \output  = 32'd0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" *)
    casez (start)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" */
      1'h1:
          \output  = value;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$30 ) begin end
    done = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" *)
    casez (start)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" */
      1'h1:
          done = 1'h1;
    endcase
  end
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.set_input_width" *)
(* generator = "Amaranth" *)
module set_input_width(clk, value, in0, start, \output , done, rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$31  = 0;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:46" *)
  output done;
  reg done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:47" *)
  input [31:0] in0;
  wire [31:0] in0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:49" *)
  output [31:0] \output ;
  reg [31:0] \output ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:73" *)
  reg set = 1'h0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:73" *)
  reg \set$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:45" *)
  input start;
  wire start;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:72" *)
  output [31:0] value;
  reg [31:0] value = 32'd0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:72" *)
  reg [31:0] \value$next ;
  always @(posedge clk)
    set <= \set$next ;
  always @(posedge clk)
    value <= \value$next ;
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$31 ) begin end
    \set$next  = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" *)
    casez (start)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" */
      1'h1:
          \set$next  = 1'h1;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \set$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$31 ) begin end
    \value$next  = value;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" *)
    casez (start)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" */
      1'h1:
          \value$next  = in0;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \value$next  = 32'd0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$31 ) begin end
    \output  = 32'd0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" *)
    casez (start)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" */
      1'h1:
          \output  = value;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$31 ) begin end
    done = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" *)
    casez (start)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" */
      1'h1:
          done = 1'h1;
    endcase
  end
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.set_num_tile" *)
(* generator = "Amaranth" *)
module set_num_tile(clk, value, in0, start, \output , done, rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$32  = 0;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:46" *)
  output done;
  reg done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:47" *)
  input [31:0] in0;
  wire [31:0] in0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:49" *)
  output [31:0] \output ;
  reg [31:0] \output ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:73" *)
  reg set = 1'h0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:73" *)
  reg \set$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:45" *)
  input start;
  wire start;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:72" *)
  output [31:0] value;
  reg [31:0] value = 32'd0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:72" *)
  reg [31:0] \value$next ;
  always @(posedge clk)
    set <= \set$next ;
  always @(posedge clk)
    value <= \value$next ;
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$32 ) begin end
    \set$next  = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" *)
    casez (start)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" */
      1'h1:
          \set$next  = 1'h1;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \set$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$32 ) begin end
    \value$next  = value;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" *)
    casez (start)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" */
      1'h1:
          \value$next  = in0;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \value$next  = 32'd0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$32 ) begin end
    \output  = 32'd0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" *)
    casez (start)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" */
      1'h1:
          \output  = value;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$32 ) begin end
    done = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" *)
    casez (start)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" */
      1'h1:
          done = 1'h1;
    endcase
  end
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.set_output_batch_size" *)
(* generator = "Amaranth" *)
module set_output_batch_size(clk, set, in0, start, \output , done, rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$33  = 0;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:46" *)
  output done;
  reg done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:47" *)
  input [31:0] in0;
  wire [31:0] in0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:49" *)
  output [31:0] \output ;
  reg [31:0] \output ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:73" *)
  output set;
  reg set = 1'h0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:73" *)
  reg \set$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:45" *)
  input start;
  wire start;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:72" *)
  reg [31:0] value = 32'd0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:72" *)
  reg [31:0] \value$next ;
  always @(posedge clk)
    set <= \set$next ;
  always @(posedge clk)
    value <= \value$next ;
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$33 ) begin end
    \set$next  = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" *)
    casez (start)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" */
      1'h1:
          \set$next  = 1'h1;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \set$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$33 ) begin end
    \value$next  = value;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" *)
    casez (start)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" */
      1'h1:
          \value$next  = in0;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \value$next  = 32'd0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$33 ) begin end
    \output  = 32'd0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" *)
    casez (start)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" */
      1'h1:
          \output  = value;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$33 ) begin end
    done = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" *)
    casez (start)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" */
      1'h1:
          done = 1'h1;
    endcase
  end
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.set_output_depth" *)
(* generator = "Amaranth" *)
module set_output_depth(clk, in0, start, \output , done, rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$34  = 0;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:46" *)
  output done;
  reg done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:47" *)
  input [31:0] in0;
  wire [31:0] in0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:49" *)
  output [31:0] \output ;
  reg [31:0] \output ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:73" *)
  reg set = 1'h0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:73" *)
  reg \set$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:45" *)
  input start;
  wire start;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:72" *)
  reg [31:0] value = 32'd0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:72" *)
  reg [31:0] \value$next ;
  always @(posedge clk)
    set <= \set$next ;
  always @(posedge clk)
    value <= \value$next ;
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$34 ) begin end
    \set$next  = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" *)
    casez (start)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" */
      1'h1:
          \set$next  = 1'h1;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \set$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$34 ) begin end
    \value$next  = value;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" *)
    casez (start)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" */
      1'h1:
          \value$next  = in0;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \value$next  = 32'd0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$34 ) begin end
    \output  = 32'd0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" *)
    casez (start)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" */
      1'h1:
          \output  = value;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$34 ) begin end
    done = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" *)
    casez (start)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" */
      1'h1:
          done = 1'h1;
    endcase
  end
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.set_output_offset" *)
(* generator = "Amaranth" *)
module set_output_offset(clk, value, in0, start, \output , done, rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$35  = 0;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:46" *)
  output done;
  reg done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:47" *)
  input [31:0] in0;
  wire [31:0] in0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:49" *)
  output [31:0] \output ;
  reg [31:0] \output ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:73" *)
  reg set = 1'h0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:73" *)
  reg \set$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:45" *)
  input start;
  wire start;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:72" *)
  output [31:0] value;
  reg [31:0] value = 32'd0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:72" *)
  reg [31:0] \value$next ;
  always @(posedge clk)
    set <= \set$next ;
  always @(posedge clk)
    value <= \value$next ;
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$35 ) begin end
    \set$next  = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" *)
    casez (start)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" */
      1'h1:
          \set$next  = 1'h1;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \set$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$35 ) begin end
    \value$next  = value;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" *)
    casez (start)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" */
      1'h1:
          \value$next  = in0;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \value$next  = 32'd0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$35 ) begin end
    \output  = 32'd0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" *)
    casez (start)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" */
      1'h1:
          \output  = value;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$35 ) begin end
    done = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" *)
    casez (start)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" */
      1'h1:
          done = 1'h1;
    endcase
  end
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.set_switch_PorD" *)
(* generator = "Amaranth" *)
module set_switch_PorD(clk, value, in0, start, \output , done, rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$36  = 0;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:46" *)
  output done;
  reg done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:47" *)
  input [31:0] in0;
  wire [31:0] in0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:49" *)
  output [31:0] \output ;
  reg [31:0] \output ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:73" *)
  reg set = 1'h0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:73" *)
  reg \set$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:45" *)
  input start;
  wire start;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:72" *)
  output [31:0] value;
  reg [31:0] value = 32'd0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:72" *)
  reg [31:0] \value$next ;
  always @(posedge clk)
    set <= \set$next ;
  always @(posedge clk)
    value <= \value$next ;
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$36 ) begin end
    \set$next  = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" *)
    casez (start)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" */
      1'h1:
          \set$next  = 1'h1;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \set$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$36 ) begin end
    \value$next  = value;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" *)
    casez (start)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" */
      1'h1:
          \value$next  = in0;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \value$next  = 32'd0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$36 ) begin end
    \output  = 32'd0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" *)
    casez (start)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" */
      1'h1:
          \output  = value;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$36 ) begin end
    done = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" *)
    casez (start)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" */
      1'h1:
          done = 1'h1;
    endcase
  end
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.fvf.smr_0" *)
(* generator = "Amaranth" *)
module smr_0(clk, limit, mem_addr, mem_data, data, next, restart, rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$37  = 0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *)
  wire [9:0] \$1 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:302" *)
  wire \$11 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *)
  wire [9:0] \$3 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *)
  wire [10:0] \$4 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *)
  wire \$6 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:294" *)
  wire \$9 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:275" *)
  output [31:0] data;
  reg [31:0] data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:289" *)
  wire [9:0] incremented_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:300" *)
  reg [31:0] last_data = 32'd0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:300" *)
  reg [31:0] \last_data$next ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:287" *)
  reg [8:0] last_mem_addr = 9'h000;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:287" *)
  reg [8:0] \last_mem_addr$next ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:272" *)
  input [9:0] limit;
  wire [9:0] limit;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:273" *)
  output [8:0] mem_addr;
  reg [8:0] mem_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:274" *)
  input [31:0] mem_data;
  wire [31:0] mem_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:276" *)
  input next;
  wire next;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:277" *)
  input restart;
  wire restart;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:283" *)
  reg was_next = 1'h0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:283" *)
  reg \was_next$next ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:281" *)
  reg was_restart = 1'h0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:281" *)
  reg \was_restart$next ;
  assign \$9  = was_next | (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:294" *) was_restart;
  assign \$11  = was_restart | (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:302" *) was_next;
  always @(posedge clk)
    was_restart <= \was_restart$next ;
  always @(posedge clk)
    was_next <= \was_next$next ;
  always @(posedge clk)
    last_mem_addr <= \last_mem_addr$next ;
  always @(posedge clk)
    last_data <= \last_data$next ;
  assign \$1  = last_mem_addr + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *) 1'h1;
  assign \$4  = limit - (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *) 1'h1;
  assign \$6  = last_mem_addr == (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *) \$4 ;
  assign \$3  = \$6  ? (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *) 10'h000 : \$1 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$37 ) begin end
    \was_restart$next  = restart;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \was_restart$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$37 ) begin end
    \was_next$next  = next;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \was_next$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$37 ) begin end
    \last_mem_addr$next  = mem_addr;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \last_mem_addr$next  = 9'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$37 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:292" *)
    casez ({ \$9 , restart })
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:292" */
      2'b?1:
          mem_addr = 9'h000;
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:294" */
      2'b1?:
          mem_addr = incremented_addr[8:0];
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:296" */
      default:
          mem_addr = last_mem_addr;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$37 ) begin end
    \last_data$next  = data;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \last_data$next  = 32'd0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$37 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:302" *)
    casez (\$11 )
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:302" */
      1'h1:
          data = mem_data;
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:304" */
      default:
          data = last_data;
    endcase
  end
  assign incremented_addr = \$3 ;
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.ins.smr_0" *)
(* generator = "Amaranth" *)
module \smr_0$1 (clk, mem_data, limit, mem_addr, restart, next, data, rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$38  = 0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *)
  wire [9:0] \$1 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:302" *)
  wire \$11 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *)
  wire [9:0] \$3 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *)
  wire [10:0] \$4 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *)
  wire \$6 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:294" *)
  wire \$9 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:275" *)
  output [31:0] data;
  reg [31:0] data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:289" *)
  wire [9:0] incremented_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:300" *)
  reg [31:0] last_data = 32'd0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:300" *)
  reg [31:0] \last_data$next ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:287" *)
  reg [8:0] last_mem_addr = 9'h000;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:287" *)
  reg [8:0] \last_mem_addr$next ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:272" *)
  input [9:0] limit;
  wire [9:0] limit;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:273" *)
  output [8:0] mem_addr;
  reg [8:0] mem_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:274" *)
  input [31:0] mem_data;
  wire [31:0] mem_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:276" *)
  input next;
  wire next;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:277" *)
  input restart;
  wire restart;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:283" *)
  reg was_next = 1'h0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:283" *)
  reg \was_next$next ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:281" *)
  reg was_restart = 1'h0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:281" *)
  reg \was_restart$next ;
  assign \$9  = was_next | (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:294" *) was_restart;
  assign \$11  = was_restart | (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:302" *) was_next;
  always @(posedge clk)
    was_restart <= \was_restart$next ;
  always @(posedge clk)
    was_next <= \was_next$next ;
  always @(posedge clk)
    last_mem_addr <= \last_mem_addr$next ;
  always @(posedge clk)
    last_data <= \last_data$next ;
  assign \$1  = last_mem_addr + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *) 1'h1;
  assign \$4  = limit - (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *) 1'h1;
  assign \$6  = last_mem_addr == (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *) \$4 ;
  assign \$3  = \$6  ? (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *) 10'h000 : \$1 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$38 ) begin end
    \was_restart$next  = restart;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \was_restart$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$38 ) begin end
    \was_next$next  = next;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \was_next$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$38 ) begin end
    \last_mem_addr$next  = mem_addr;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \last_mem_addr$next  = 9'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$38 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:292" *)
    casez ({ \$9 , restart })
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:292" */
      2'b?1:
          mem_addr = 9'h000;
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:294" */
      2'b1?:
          mem_addr = incremented_addr[8:0];
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:296" */
      default:
          mem_addr = last_mem_addr;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$38 ) begin end
    \last_data$next  = data;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \last_data$next  = 32'd0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$38 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:302" *)
    casez (\$11 )
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:302" */
      1'h1:
          data = mem_data;
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:304" */
      default:
          data = last_data;
    endcase
  end
  assign incremented_addr = \$3 ;
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.fvf.smr_1" *)
(* generator = "Amaranth" *)
module smr_1(clk, limit, mem_addr, mem_data, data, next, restart, rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$39  = 0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *)
  wire [9:0] \$1 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:302" *)
  wire \$11 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *)
  wire [9:0] \$3 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *)
  wire [10:0] \$4 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *)
  wire \$6 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:294" *)
  wire \$9 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:275" *)
  output [31:0] data;
  reg [31:0] data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:289" *)
  wire [9:0] incremented_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:300" *)
  reg [31:0] last_data = 32'd0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:300" *)
  reg [31:0] \last_data$next ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:287" *)
  reg [8:0] last_mem_addr = 9'h000;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:287" *)
  reg [8:0] \last_mem_addr$next ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:272" *)
  input [9:0] limit;
  wire [9:0] limit;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:273" *)
  output [8:0] mem_addr;
  reg [8:0] mem_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:274" *)
  input [31:0] mem_data;
  wire [31:0] mem_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:276" *)
  input next;
  wire next;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:277" *)
  input restart;
  wire restart;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:283" *)
  reg was_next = 1'h0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:283" *)
  reg \was_next$next ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:281" *)
  reg was_restart = 1'h0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:281" *)
  reg \was_restart$next ;
  assign \$9  = was_next | (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:294" *) was_restart;
  assign \$11  = was_restart | (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:302" *) was_next;
  always @(posedge clk)
    was_restart <= \was_restart$next ;
  always @(posedge clk)
    was_next <= \was_next$next ;
  always @(posedge clk)
    last_mem_addr <= \last_mem_addr$next ;
  always @(posedge clk)
    last_data <= \last_data$next ;
  assign \$1  = last_mem_addr + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *) 1'h1;
  assign \$4  = limit - (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *) 1'h1;
  assign \$6  = last_mem_addr == (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *) \$4 ;
  assign \$3  = \$6  ? (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *) 10'h000 : \$1 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$39 ) begin end
    \was_restart$next  = restart;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \was_restart$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$39 ) begin end
    \was_next$next  = next;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \was_next$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$39 ) begin end
    \last_mem_addr$next  = mem_addr;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \last_mem_addr$next  = 9'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$39 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:292" *)
    casez ({ \$9 , restart })
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:292" */
      2'b?1:
          mem_addr = 9'h000;
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:294" */
      2'b1?:
          mem_addr = incremented_addr[8:0];
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:296" */
      default:
          mem_addr = last_mem_addr;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$39 ) begin end
    \last_data$next  = data;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \last_data$next  = 32'd0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$39 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:302" *)
    casez (\$11 )
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:302" */
      1'h1:
          data = mem_data;
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:304" */
      default:
          data = last_data;
    endcase
  end
  assign incremented_addr = \$3 ;
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.ins.smr_1" *)
(* generator = "Amaranth" *)
module \smr_1$2 (clk, mem_data, limit, mem_addr, restart, next, data, rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$40  = 0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *)
  wire [9:0] \$1 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:302" *)
  wire \$11 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *)
  wire [9:0] \$3 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *)
  wire [10:0] \$4 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *)
  wire \$6 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:294" *)
  wire \$9 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:275" *)
  output [31:0] data;
  reg [31:0] data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:289" *)
  wire [9:0] incremented_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:300" *)
  reg [31:0] last_data = 32'd0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:300" *)
  reg [31:0] \last_data$next ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:287" *)
  reg [8:0] last_mem_addr = 9'h000;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:287" *)
  reg [8:0] \last_mem_addr$next ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:272" *)
  input [9:0] limit;
  wire [9:0] limit;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:273" *)
  output [8:0] mem_addr;
  reg [8:0] mem_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:274" *)
  input [31:0] mem_data;
  wire [31:0] mem_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:276" *)
  input next;
  wire next;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:277" *)
  input restart;
  wire restart;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:283" *)
  reg was_next = 1'h0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:283" *)
  reg \was_next$next ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:281" *)
  reg was_restart = 1'h0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:281" *)
  reg \was_restart$next ;
  assign \$9  = was_next | (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:294" *) was_restart;
  assign \$11  = was_restart | (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:302" *) was_next;
  always @(posedge clk)
    was_restart <= \was_restart$next ;
  always @(posedge clk)
    was_next <= \was_next$next ;
  always @(posedge clk)
    last_mem_addr <= \last_mem_addr$next ;
  always @(posedge clk)
    last_data <= \last_data$next ;
  assign \$1  = last_mem_addr + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *) 1'h1;
  assign \$4  = limit - (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *) 1'h1;
  assign \$6  = last_mem_addr == (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *) \$4 ;
  assign \$3  = \$6  ? (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *) 10'h000 : \$1 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$40 ) begin end
    \was_restart$next  = restart;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \was_restart$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$40 ) begin end
    \was_next$next  = next;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \was_next$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$40 ) begin end
    \last_mem_addr$next  = mem_addr;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \last_mem_addr$next  = 9'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$40 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:292" *)
    casez ({ \$9 , restart })
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:292" */
      2'b?1:
          mem_addr = 9'h000;
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:294" */
      2'b1?:
          mem_addr = incremented_addr[8:0];
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:296" */
      default:
          mem_addr = last_mem_addr;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$40 ) begin end
    \last_data$next  = data;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \last_data$next  = 32'd0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$40 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:302" *)
    casez (\$11 )
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:302" */
      1'h1:
          data = mem_data;
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:304" */
      default:
          data = last_data;
    endcase
  end
  assign incremented_addr = \$3 ;
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.fvf.smr_2" *)
(* generator = "Amaranth" *)
module smr_2(clk, limit, mem_addr, mem_data, data, next, restart, rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$41  = 0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *)
  wire [9:0] \$1 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:302" *)
  wire \$11 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *)
  wire [9:0] \$3 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *)
  wire [10:0] \$4 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *)
  wire \$6 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:294" *)
  wire \$9 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:275" *)
  output [31:0] data;
  reg [31:0] data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:289" *)
  wire [9:0] incremented_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:300" *)
  reg [31:0] last_data = 32'd0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:300" *)
  reg [31:0] \last_data$next ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:287" *)
  reg [8:0] last_mem_addr = 9'h000;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:287" *)
  reg [8:0] \last_mem_addr$next ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:272" *)
  input [9:0] limit;
  wire [9:0] limit;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:273" *)
  output [8:0] mem_addr;
  reg [8:0] mem_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:274" *)
  input [31:0] mem_data;
  wire [31:0] mem_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:276" *)
  input next;
  wire next;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:277" *)
  input restart;
  wire restart;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:283" *)
  reg was_next = 1'h0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:283" *)
  reg \was_next$next ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:281" *)
  reg was_restart = 1'h0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:281" *)
  reg \was_restart$next ;
  assign \$9  = was_next | (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:294" *) was_restart;
  assign \$11  = was_restart | (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:302" *) was_next;
  always @(posedge clk)
    was_restart <= \was_restart$next ;
  always @(posedge clk)
    was_next <= \was_next$next ;
  always @(posedge clk)
    last_mem_addr <= \last_mem_addr$next ;
  always @(posedge clk)
    last_data <= \last_data$next ;
  assign \$1  = last_mem_addr + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *) 1'h1;
  assign \$4  = limit - (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *) 1'h1;
  assign \$6  = last_mem_addr == (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *) \$4 ;
  assign \$3  = \$6  ? (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *) 10'h000 : \$1 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$41 ) begin end
    \was_restart$next  = restart;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \was_restart$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$41 ) begin end
    \was_next$next  = next;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \was_next$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$41 ) begin end
    \last_mem_addr$next  = mem_addr;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \last_mem_addr$next  = 9'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$41 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:292" *)
    casez ({ \$9 , restart })
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:292" */
      2'b?1:
          mem_addr = 9'h000;
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:294" */
      2'b1?:
          mem_addr = incremented_addr[8:0];
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:296" */
      default:
          mem_addr = last_mem_addr;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$41 ) begin end
    \last_data$next  = data;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \last_data$next  = 32'd0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$41 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:302" *)
    casez (\$11 )
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:302" */
      1'h1:
          data = mem_data;
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:304" */
      default:
          data = last_data;
    endcase
  end
  assign incremented_addr = \$3 ;
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.ins.smr_2" *)
(* generator = "Amaranth" *)
module \smr_2$3 (clk, mem_data, limit, mem_addr, restart, next, data, rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$42  = 0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *)
  wire [9:0] \$1 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:302" *)
  wire \$11 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *)
  wire [9:0] \$3 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *)
  wire [10:0] \$4 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *)
  wire \$6 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:294" *)
  wire \$9 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:275" *)
  output [31:0] data;
  reg [31:0] data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:289" *)
  wire [9:0] incremented_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:300" *)
  reg [31:0] last_data = 32'd0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:300" *)
  reg [31:0] \last_data$next ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:287" *)
  reg [8:0] last_mem_addr = 9'h000;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:287" *)
  reg [8:0] \last_mem_addr$next ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:272" *)
  input [9:0] limit;
  wire [9:0] limit;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:273" *)
  output [8:0] mem_addr;
  reg [8:0] mem_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:274" *)
  input [31:0] mem_data;
  wire [31:0] mem_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:276" *)
  input next;
  wire next;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:277" *)
  input restart;
  wire restart;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:283" *)
  reg was_next = 1'h0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:283" *)
  reg \was_next$next ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:281" *)
  reg was_restart = 1'h0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:281" *)
  reg \was_restart$next ;
  assign \$9  = was_next | (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:294" *) was_restart;
  assign \$11  = was_restart | (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:302" *) was_next;
  always @(posedge clk)
    was_restart <= \was_restart$next ;
  always @(posedge clk)
    was_next <= \was_next$next ;
  always @(posedge clk)
    last_mem_addr <= \last_mem_addr$next ;
  always @(posedge clk)
    last_data <= \last_data$next ;
  assign \$1  = last_mem_addr + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *) 1'h1;
  assign \$4  = limit - (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *) 1'h1;
  assign \$6  = last_mem_addr == (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *) \$4 ;
  assign \$3  = \$6  ? (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *) 10'h000 : \$1 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$42 ) begin end
    \was_restart$next  = restart;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \was_restart$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$42 ) begin end
    \was_next$next  = next;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \was_next$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$42 ) begin end
    \last_mem_addr$next  = mem_addr;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \last_mem_addr$next  = 9'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$42 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:292" *)
    casez ({ \$9 , restart })
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:292" */
      2'b?1:
          mem_addr = 9'h000;
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:294" */
      2'b1?:
          mem_addr = incremented_addr[8:0];
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:296" */
      default:
          mem_addr = last_mem_addr;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$42 ) begin end
    \last_data$next  = data;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \last_data$next  = 32'd0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$42 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:302" *)
    casez (\$11 )
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:302" */
      1'h1:
          data = mem_data;
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:304" */
      default:
          data = last_data;
    endcase
  end
  assign incremented_addr = \$3 ;
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.fvf.smr_3" *)
(* generator = "Amaranth" *)
module smr_3(clk, limit, mem_addr, mem_data, data, next, restart, rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$43  = 0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *)
  wire [9:0] \$1 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:302" *)
  wire \$11 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *)
  wire [9:0] \$3 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *)
  wire [10:0] \$4 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *)
  wire \$6 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:294" *)
  wire \$9 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:275" *)
  output [31:0] data;
  reg [31:0] data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:289" *)
  wire [9:0] incremented_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:300" *)
  reg [31:0] last_data = 32'd0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:300" *)
  reg [31:0] \last_data$next ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:287" *)
  reg [8:0] last_mem_addr = 9'h000;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:287" *)
  reg [8:0] \last_mem_addr$next ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:272" *)
  input [9:0] limit;
  wire [9:0] limit;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:273" *)
  output [8:0] mem_addr;
  reg [8:0] mem_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:274" *)
  input [31:0] mem_data;
  wire [31:0] mem_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:276" *)
  input next;
  wire next;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:277" *)
  input restart;
  wire restart;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:283" *)
  reg was_next = 1'h0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:283" *)
  reg \was_next$next ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:281" *)
  reg was_restart = 1'h0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:281" *)
  reg \was_restart$next ;
  assign \$9  = was_next | (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:294" *) was_restart;
  assign \$11  = was_restart | (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:302" *) was_next;
  always @(posedge clk)
    was_restart <= \was_restart$next ;
  always @(posedge clk)
    was_next <= \was_next$next ;
  always @(posedge clk)
    last_mem_addr <= \last_mem_addr$next ;
  always @(posedge clk)
    last_data <= \last_data$next ;
  assign \$1  = last_mem_addr + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *) 1'h1;
  assign \$4  = limit - (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *) 1'h1;
  assign \$6  = last_mem_addr == (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *) \$4 ;
  assign \$3  = \$6  ? (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *) 10'h000 : \$1 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$43 ) begin end
    \was_restart$next  = restart;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \was_restart$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$43 ) begin end
    \was_next$next  = next;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \was_next$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$43 ) begin end
    \last_mem_addr$next  = mem_addr;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \last_mem_addr$next  = 9'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$43 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:292" *)
    casez ({ \$9 , restart })
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:292" */
      2'b?1:
          mem_addr = 9'h000;
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:294" */
      2'b1?:
          mem_addr = incremented_addr[8:0];
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:296" */
      default:
          mem_addr = last_mem_addr;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$43 ) begin end
    \last_data$next  = data;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \last_data$next  = 32'd0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$43 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:302" *)
    casez (\$11 )
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:302" */
      1'h1:
          data = mem_data;
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:304" */
      default:
          data = last_data;
    endcase
  end
  assign incremented_addr = \$3 ;
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.ins.smr_3" *)
(* generator = "Amaranth" *)
module \smr_3$4 (clk, mem_data, limit, mem_addr, restart, next, data, rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$44  = 0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *)
  wire [9:0] \$1 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:302" *)
  wire \$11 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *)
  wire [9:0] \$3 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *)
  wire [10:0] \$4 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *)
  wire \$6 ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:294" *)
  wire \$9 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:275" *)
  output [31:0] data;
  reg [31:0] data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:289" *)
  wire [9:0] incremented_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:300" *)
  reg [31:0] last_data = 32'd0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:300" *)
  reg [31:0] \last_data$next ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:287" *)
  reg [8:0] last_mem_addr = 9'h000;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:287" *)
  reg [8:0] \last_mem_addr$next ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:272" *)
  input [9:0] limit;
  wire [9:0] limit;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:273" *)
  output [8:0] mem_addr;
  reg [8:0] mem_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:274" *)
  input [31:0] mem_data;
  wire [31:0] mem_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:276" *)
  input next;
  wire next;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:277" *)
  input restart;
  wire restart;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:283" *)
  reg was_next = 1'h0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:283" *)
  reg \was_next$next ;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:281" *)
  reg was_restart = 1'h0;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:281" *)
  reg \was_restart$next ;
  assign \$9  = was_next | (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:294" *) was_restart;
  assign \$11  = was_restart | (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:302" *) was_next;
  always @(posedge clk)
    was_restart <= \was_restart$next ;
  always @(posedge clk)
    was_next <= \was_next$next ;
  always @(posedge clk)
    last_mem_addr <= \last_mem_addr$next ;
  always @(posedge clk)
    last_data <= \last_data$next ;
  assign \$1  = last_mem_addr + (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *) 1'h1;
  assign \$4  = limit - (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *) 1'h1;
  assign \$6  = last_mem_addr == (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *) \$4 ;
  assign \$3  = \$6  ? (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:291" *) 10'h000 : \$1 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$44 ) begin end
    \was_restart$next  = restart;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \was_restart$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$44 ) begin end
    \was_next$next  = next;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \was_next$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$44 ) begin end
    \last_mem_addr$next  = mem_addr;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \last_mem_addr$next  = 9'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$44 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:292" *)
    casez ({ \$9 , restart })
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:292" */
      2'b?1:
          mem_addr = 9'h000;
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:294" */
      2'b1?:
          mem_addr = incremented_addr[8:0];
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:296" */
      default:
          mem_addr = last_mem_addr;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$44 ) begin end
    \last_data$next  = data;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \last_data$next  = 32'd0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$44 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:302" *)
    casez (\$11 )
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:302" */
      1'h1:
          data = mem_data;
      /* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:304" */
      default:
          data = last_data;
    endcase
  end
  assign incremented_addr = \$3 ;
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.pp_0.srdhm" *)
(* generator = "Amaranth" *)
module srdhm(clk, a, b, result, rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$45  = 0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:63" *)
  wire [32:0] \$1 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:79" *)
  wire [63:0] \$11 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:83" *)
  wire [33:0] \$13 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:83" *)
  wire [64:0] \$14 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:83" *)
  wire [64:0] \$15 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:83" *)
  wire [33:0] \$17 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:78" *)
  wire \$3 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:64" *)
  wire [32:0] \$5 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:78" *)
  wire \$7 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:78" *)
  wire \$9 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:58" *)
  input [31:0] a;
  wire [31:0] a;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:65" *)
  reg [63:0] ab = 64'h0000000000000000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:65" *)
  reg [63:0] \ab$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:63" *)
  reg [31:0] areg = 32'd0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:63" *)
  reg [31:0] \areg$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:59" *)
  input [31:0] b;
  wire [31:0] b;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:64" *)
  reg [31:0] breg = 32'd0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:64" *)
  reg [31:0] \breg$next ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:66" *)
  reg overflow = 1'h0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:66" *)
  reg \overflow$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:60" *)
  output [31:0] result;
  reg [31:0] result = 32'd0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:60" *)
  reg [31:0] \result$next ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  assign \$9  = \$3  & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:78" *) \$7 ;
  assign \$11  = $signed(areg) * (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:79" *) $signed(breg);
  assign \$15  = $signed(ab) + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:83" *) $signed(64'h0000000040000000);
  assign \$17  = overflow ? (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:83" *) 34'h07fffffff : \$14 [64:31];
  always @(posedge clk)
    areg <= \areg$next ;
  assign \$1  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:63" *) $signed(areg);
  always @(posedge clk)
    breg <= \breg$next ;
  always @(posedge clk)
    overflow <= \overflow$next ;
  always @(posedge clk)
    ab <= \ab$next ;
  always @(posedge clk)
    result <= \result$next ;
  assign \$3  = $signed(\$1 ) == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:78" *) $signed(33'h080000000);
  assign \$5  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:64" *) $signed(breg);
  assign \$7  = $signed(\$5 ) == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:78" *) $signed(33'h080000000);
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$45 ) begin end
    \areg$next  = a;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \areg$next  = 32'd0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$45 ) begin end
    \breg$next  = b;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \breg$next  = 32'd0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$45 ) begin end
    \overflow$next  = \$9 ;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \overflow$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$45 ) begin end
    \ab$next  = \$11 ;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \ab$next  = 64'h0000000000000000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$45 ) begin end
    \result$next  = \$17 [31:0];
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \result$next  = 32'd0;
    endcase
  end
  assign \$14  = \$15 ;
  assign \$13  = \$17 ;
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.pp_1.srdhm" *)
(* generator = "Amaranth" *)
module \srdhm$5 (clk, a, b, result, rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$46  = 0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:63" *)
  wire [32:0] \$1 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:79" *)
  wire [63:0] \$11 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:83" *)
  wire [33:0] \$13 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:83" *)
  wire [64:0] \$14 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:83" *)
  wire [64:0] \$15 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:83" *)
  wire [33:0] \$17 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:78" *)
  wire \$3 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:64" *)
  wire [32:0] \$5 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:78" *)
  wire \$7 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:78" *)
  wire \$9 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:58" *)
  input [31:0] a;
  wire [31:0] a;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:65" *)
  reg [63:0] ab = 64'h0000000000000000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:65" *)
  reg [63:0] \ab$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:63" *)
  reg [31:0] areg = 32'd0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:63" *)
  reg [31:0] \areg$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:59" *)
  input [31:0] b;
  wire [31:0] b;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:64" *)
  reg [31:0] breg = 32'd0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:64" *)
  reg [31:0] \breg$next ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:66" *)
  reg overflow = 1'h0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:66" *)
  reg \overflow$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:60" *)
  output [31:0] result;
  reg [31:0] result = 32'd0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:60" *)
  reg [31:0] \result$next ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  assign \$9  = \$3  & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:78" *) \$7 ;
  assign \$11  = $signed(areg) * (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:79" *) $signed(breg);
  assign \$15  = $signed(ab) + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:83" *) $signed(64'h0000000040000000);
  assign \$17  = overflow ? (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:83" *) 34'h07fffffff : \$14 [64:31];
  always @(posedge clk)
    areg <= \areg$next ;
  assign \$1  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:63" *) $signed(areg);
  always @(posedge clk)
    breg <= \breg$next ;
  always @(posedge clk)
    overflow <= \overflow$next ;
  always @(posedge clk)
    ab <= \ab$next ;
  always @(posedge clk)
    result <= \result$next ;
  assign \$3  = $signed(\$1 ) == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:78" *) $signed(33'h080000000);
  assign \$5  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:64" *) $signed(breg);
  assign \$7  = $signed(\$5 ) == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:78" *) $signed(33'h080000000);
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$46 ) begin end
    \areg$next  = a;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \areg$next  = 32'd0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$46 ) begin end
    \breg$next  = b;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \breg$next  = 32'd0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$46 ) begin end
    \overflow$next  = \$9 ;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \overflow$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$46 ) begin end
    \ab$next  = \$11 ;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \ab$next  = 64'h0000000000000000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$46 ) begin end
    \result$next  = \$17 [31:0];
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \result$next  = 32'd0;
    endcase
  end
  assign \$14  = \$15 ;
  assign \$13  = \$17 ;
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.pp_2.srdhm" *)
(* generator = "Amaranth" *)
module \srdhm$6 (clk, a, b, result, rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$47  = 0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:63" *)
  wire [32:0] \$1 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:79" *)
  wire [63:0] \$11 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:83" *)
  wire [33:0] \$13 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:83" *)
  wire [64:0] \$14 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:83" *)
  wire [64:0] \$15 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:83" *)
  wire [33:0] \$17 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:78" *)
  wire \$3 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:64" *)
  wire [32:0] \$5 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:78" *)
  wire \$7 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:78" *)
  wire \$9 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:58" *)
  input [31:0] a;
  wire [31:0] a;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:65" *)
  reg [63:0] ab = 64'h0000000000000000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:65" *)
  reg [63:0] \ab$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:63" *)
  reg [31:0] areg = 32'd0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:63" *)
  reg [31:0] \areg$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:59" *)
  input [31:0] b;
  wire [31:0] b;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:64" *)
  reg [31:0] breg = 32'd0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:64" *)
  reg [31:0] \breg$next ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:66" *)
  reg overflow = 1'h0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:66" *)
  reg \overflow$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:60" *)
  output [31:0] result;
  reg [31:0] result = 32'd0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:60" *)
  reg [31:0] \result$next ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  assign \$9  = \$3  & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:78" *) \$7 ;
  assign \$11  = $signed(areg) * (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:79" *) $signed(breg);
  assign \$15  = $signed(ab) + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:83" *) $signed(64'h0000000040000000);
  assign \$17  = overflow ? (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:83" *) 34'h07fffffff : \$14 [64:31];
  always @(posedge clk)
    areg <= \areg$next ;
  assign \$1  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:63" *) $signed(areg);
  always @(posedge clk)
    breg <= \breg$next ;
  always @(posedge clk)
    overflow <= \overflow$next ;
  always @(posedge clk)
    ab <= \ab$next ;
  always @(posedge clk)
    result <= \result$next ;
  assign \$3  = $signed(\$1 ) == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:78" *) $signed(33'h080000000);
  assign \$5  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:64" *) $signed(breg);
  assign \$7  = $signed(\$5 ) == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:78" *) $signed(33'h080000000);
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$47 ) begin end
    \areg$next  = a;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \areg$next  = 32'd0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$47 ) begin end
    \breg$next  = b;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \breg$next  = 32'd0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$47 ) begin end
    \overflow$next  = \$9 ;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \overflow$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$47 ) begin end
    \ab$next  = \$11 ;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \ab$next  = 64'h0000000000000000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$47 ) begin end
    \result$next  = \$17 [31:0];
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \result$next  = 32'd0;
    endcase
  end
  assign \$14  = \$15 ;
  assign \$13  = \$17 ;
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.pp_3.srdhm" *)
(* generator = "Amaranth" *)
module \srdhm$7 (clk, a, b, result, rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$48  = 0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:63" *)
  wire [32:0] \$1 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:79" *)
  wire [63:0] \$11 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:83" *)
  wire [33:0] \$13 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:83" *)
  wire [64:0] \$14 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:83" *)
  wire [64:0] \$15 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:83" *)
  wire [33:0] \$17 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:78" *)
  wire \$3 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:64" *)
  wire [32:0] \$5 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:78" *)
  wire \$7 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:78" *)
  wire \$9 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:58" *)
  input [31:0] a;
  wire [31:0] a;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:65" *)
  reg [63:0] ab = 64'h0000000000000000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:65" *)
  reg [63:0] \ab$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:63" *)
  reg [31:0] areg = 32'd0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:63" *)
  reg [31:0] \areg$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:59" *)
  input [31:0] b;
  wire [31:0] b;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:64" *)
  reg [31:0] breg = 32'd0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:64" *)
  reg [31:0] \breg$next ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:66" *)
  reg overflow = 1'h0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:66" *)
  reg \overflow$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:60" *)
  output [31:0] result;
  reg [31:0] result = 32'd0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:60" *)
  reg [31:0] \result$next ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  assign \$9  = \$3  & (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:78" *) \$7 ;
  assign \$11  = $signed(areg) * (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:79" *) $signed(breg);
  assign \$15  = $signed(ab) + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:83" *) $signed(64'h0000000040000000);
  assign \$17  = overflow ? (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:83" *) 34'h07fffffff : \$14 [64:31];
  always @(posedge clk)
    areg <= \areg$next ;
  assign \$1  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:63" *) $signed(areg);
  always @(posedge clk)
    breg <= \breg$next ;
  always @(posedge clk)
    overflow <= \overflow$next ;
  always @(posedge clk)
    ab <= \ab$next ;
  always @(posedge clk)
    result <= \result$next ;
  assign \$3  = $signed(\$1 ) == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:78" *) $signed(33'h080000000);
  assign \$5  = + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:64" *) $signed(breg);
  assign \$7  = $signed(\$5 ) == (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/post_process.py:78" *) $signed(33'h080000000);
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$48 ) begin end
    \areg$next  = a;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \areg$next  = 32'd0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$48 ) begin end
    \breg$next  = b;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \breg$next  = 32'd0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$48 ) begin end
    \overflow$next  = \$9 ;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \overflow$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$48 ) begin end
    \ab$next  = \$11 ;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \ab$next  = 64'h0000000000000000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$48 ) begin end
    \result$next  = \$17 [31:0];
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \result$next  = 32'd0;
    endcase
  end
  assign \$14  = \$15 ;
  assign \$13  = \$17 ;
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.start_run" *)
(* generator = "Amaranth" *)
module start_run(clk, set, in0, start, \output , done, rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$49  = 0;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:46" *)
  output done;
  reg done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:47" *)
  input [31:0] in0;
  wire [31:0] in0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:49" *)
  output [31:0] \output ;
  reg [31:0] \output ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:73" *)
  output set;
  reg set = 1'h0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:73" *)
  reg \set$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:45" *)
  input start;
  wire start;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:72" *)
  reg [31:0] value = 32'd0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:72" *)
  reg [31:0] \value$next ;
  always @(posedge clk)
    set <= \set$next ;
  always @(posedge clk)
    value <= \value$next ;
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$49 ) begin end
    \set$next  = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" *)
    casez (start)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" */
      1'h1:
          \set$next  = 1'h1;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \set$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$49 ) begin end
    \value$next  = value;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" *)
    casez (start)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" */
      1'h1:
          \value$next  = in0;
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \value$next  = 32'd0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$49 ) begin end
    \output  = 32'd0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" *)
    casez (start)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" */
      1'h1:
          \output  = value;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$49 ) begin end
    done = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" *)
    casez (start)
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:77" */
      1'h1:
          done = 1'h1;
    endcase
  end
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.store_filter_values_dp_0" *)
(* generator = "Amaranth" *)
module store_filter_values_dp_0(w_en, w_addr, w_data, r_addr, r_data, clk);
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:215" *)
  wire [8:0] mem_r_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:215" *)
  wire [31:0] mem_r_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:215" *)
  wire mem_r_en;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:214" *)
  wire [8:0] mem_w_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:214" *)
  wire [31:0] mem_w_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:214" *)
  wire mem_w_en;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:209" *)
  input [8:0] r_addr;
  wire [8:0] r_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:210" *)
  output [31:0] r_data;
  wire [31:0] r_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:207" *)
  input [8:0] w_addr;
  wire [8:0] w_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:208" *)
  input [31:0] w_data;
  wire [31:0] w_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:206" *)
  input w_en;
  wire w_en;
  reg [31:0] mem [511:0];
  initial begin
    mem[0] = 32'd0;
    mem[1] = 32'd0;
    mem[2] = 32'd0;
    mem[3] = 32'd0;
    mem[4] = 32'd0;
    mem[5] = 32'd0;
    mem[6] = 32'd0;
    mem[7] = 32'd0;
    mem[8] = 32'd0;
    mem[9] = 32'd0;
    mem[10] = 32'd0;
    mem[11] = 32'd0;
    mem[12] = 32'd0;
    mem[13] = 32'd0;
    mem[14] = 32'd0;
    mem[15] = 32'd0;
    mem[16] = 32'd0;
    mem[17] = 32'd0;
    mem[18] = 32'd0;
    mem[19] = 32'd0;
    mem[20] = 32'd0;
    mem[21] = 32'd0;
    mem[22] = 32'd0;
    mem[23] = 32'd0;
    mem[24] = 32'd0;
    mem[25] = 32'd0;
    mem[26] = 32'd0;
    mem[27] = 32'd0;
    mem[28] = 32'd0;
    mem[29] = 32'd0;
    mem[30] = 32'd0;
    mem[31] = 32'd0;
    mem[32] = 32'd0;
    mem[33] = 32'd0;
    mem[34] = 32'd0;
    mem[35] = 32'd0;
    mem[36] = 32'd0;
    mem[37] = 32'd0;
    mem[38] = 32'd0;
    mem[39] = 32'd0;
    mem[40] = 32'd0;
    mem[41] = 32'd0;
    mem[42] = 32'd0;
    mem[43] = 32'd0;
    mem[44] = 32'd0;
    mem[45] = 32'd0;
    mem[46] = 32'd0;
    mem[47] = 32'd0;
    mem[48] = 32'd0;
    mem[49] = 32'd0;
    mem[50] = 32'd0;
    mem[51] = 32'd0;
    mem[52] = 32'd0;
    mem[53] = 32'd0;
    mem[54] = 32'd0;
    mem[55] = 32'd0;
    mem[56] = 32'd0;
    mem[57] = 32'd0;
    mem[58] = 32'd0;
    mem[59] = 32'd0;
    mem[60] = 32'd0;
    mem[61] = 32'd0;
    mem[62] = 32'd0;
    mem[63] = 32'd0;
    mem[64] = 32'd0;
    mem[65] = 32'd0;
    mem[66] = 32'd0;
    mem[67] = 32'd0;
    mem[68] = 32'd0;
    mem[69] = 32'd0;
    mem[70] = 32'd0;
    mem[71] = 32'd0;
    mem[72] = 32'd0;
    mem[73] = 32'd0;
    mem[74] = 32'd0;
    mem[75] = 32'd0;
    mem[76] = 32'd0;
    mem[77] = 32'd0;
    mem[78] = 32'd0;
    mem[79] = 32'd0;
    mem[80] = 32'd0;
    mem[81] = 32'd0;
    mem[82] = 32'd0;
    mem[83] = 32'd0;
    mem[84] = 32'd0;
    mem[85] = 32'd0;
    mem[86] = 32'd0;
    mem[87] = 32'd0;
    mem[88] = 32'd0;
    mem[89] = 32'd0;
    mem[90] = 32'd0;
    mem[91] = 32'd0;
    mem[92] = 32'd0;
    mem[93] = 32'd0;
    mem[94] = 32'd0;
    mem[95] = 32'd0;
    mem[96] = 32'd0;
    mem[97] = 32'd0;
    mem[98] = 32'd0;
    mem[99] = 32'd0;
    mem[100] = 32'd0;
    mem[101] = 32'd0;
    mem[102] = 32'd0;
    mem[103] = 32'd0;
    mem[104] = 32'd0;
    mem[105] = 32'd0;
    mem[106] = 32'd0;
    mem[107] = 32'd0;
    mem[108] = 32'd0;
    mem[109] = 32'd0;
    mem[110] = 32'd0;
    mem[111] = 32'd0;
    mem[112] = 32'd0;
    mem[113] = 32'd0;
    mem[114] = 32'd0;
    mem[115] = 32'd0;
    mem[116] = 32'd0;
    mem[117] = 32'd0;
    mem[118] = 32'd0;
    mem[119] = 32'd0;
    mem[120] = 32'd0;
    mem[121] = 32'd0;
    mem[122] = 32'd0;
    mem[123] = 32'd0;
    mem[124] = 32'd0;
    mem[125] = 32'd0;
    mem[126] = 32'd0;
    mem[127] = 32'd0;
    mem[128] = 32'd0;
    mem[129] = 32'd0;
    mem[130] = 32'd0;
    mem[131] = 32'd0;
    mem[132] = 32'd0;
    mem[133] = 32'd0;
    mem[134] = 32'd0;
    mem[135] = 32'd0;
    mem[136] = 32'd0;
    mem[137] = 32'd0;
    mem[138] = 32'd0;
    mem[139] = 32'd0;
    mem[140] = 32'd0;
    mem[141] = 32'd0;
    mem[142] = 32'd0;
    mem[143] = 32'd0;
    mem[144] = 32'd0;
    mem[145] = 32'd0;
    mem[146] = 32'd0;
    mem[147] = 32'd0;
    mem[148] = 32'd0;
    mem[149] = 32'd0;
    mem[150] = 32'd0;
    mem[151] = 32'd0;
    mem[152] = 32'd0;
    mem[153] = 32'd0;
    mem[154] = 32'd0;
    mem[155] = 32'd0;
    mem[156] = 32'd0;
    mem[157] = 32'd0;
    mem[158] = 32'd0;
    mem[159] = 32'd0;
    mem[160] = 32'd0;
    mem[161] = 32'd0;
    mem[162] = 32'd0;
    mem[163] = 32'd0;
    mem[164] = 32'd0;
    mem[165] = 32'd0;
    mem[166] = 32'd0;
    mem[167] = 32'd0;
    mem[168] = 32'd0;
    mem[169] = 32'd0;
    mem[170] = 32'd0;
    mem[171] = 32'd0;
    mem[172] = 32'd0;
    mem[173] = 32'd0;
    mem[174] = 32'd0;
    mem[175] = 32'd0;
    mem[176] = 32'd0;
    mem[177] = 32'd0;
    mem[178] = 32'd0;
    mem[179] = 32'd0;
    mem[180] = 32'd0;
    mem[181] = 32'd0;
    mem[182] = 32'd0;
    mem[183] = 32'd0;
    mem[184] = 32'd0;
    mem[185] = 32'd0;
    mem[186] = 32'd0;
    mem[187] = 32'd0;
    mem[188] = 32'd0;
    mem[189] = 32'd0;
    mem[190] = 32'd0;
    mem[191] = 32'd0;
    mem[192] = 32'd0;
    mem[193] = 32'd0;
    mem[194] = 32'd0;
    mem[195] = 32'd0;
    mem[196] = 32'd0;
    mem[197] = 32'd0;
    mem[198] = 32'd0;
    mem[199] = 32'd0;
    mem[200] = 32'd0;
    mem[201] = 32'd0;
    mem[202] = 32'd0;
    mem[203] = 32'd0;
    mem[204] = 32'd0;
    mem[205] = 32'd0;
    mem[206] = 32'd0;
    mem[207] = 32'd0;
    mem[208] = 32'd0;
    mem[209] = 32'd0;
    mem[210] = 32'd0;
    mem[211] = 32'd0;
    mem[212] = 32'd0;
    mem[213] = 32'd0;
    mem[214] = 32'd0;
    mem[215] = 32'd0;
    mem[216] = 32'd0;
    mem[217] = 32'd0;
    mem[218] = 32'd0;
    mem[219] = 32'd0;
    mem[220] = 32'd0;
    mem[221] = 32'd0;
    mem[222] = 32'd0;
    mem[223] = 32'd0;
    mem[224] = 32'd0;
    mem[225] = 32'd0;
    mem[226] = 32'd0;
    mem[227] = 32'd0;
    mem[228] = 32'd0;
    mem[229] = 32'd0;
    mem[230] = 32'd0;
    mem[231] = 32'd0;
    mem[232] = 32'd0;
    mem[233] = 32'd0;
    mem[234] = 32'd0;
    mem[235] = 32'd0;
    mem[236] = 32'd0;
    mem[237] = 32'd0;
    mem[238] = 32'd0;
    mem[239] = 32'd0;
    mem[240] = 32'd0;
    mem[241] = 32'd0;
    mem[242] = 32'd0;
    mem[243] = 32'd0;
    mem[244] = 32'd0;
    mem[245] = 32'd0;
    mem[246] = 32'd0;
    mem[247] = 32'd0;
    mem[248] = 32'd0;
    mem[249] = 32'd0;
    mem[250] = 32'd0;
    mem[251] = 32'd0;
    mem[252] = 32'd0;
    mem[253] = 32'd0;
    mem[254] = 32'd0;
    mem[255] = 32'd0;
    mem[256] = 32'd0;
    mem[257] = 32'd0;
    mem[258] = 32'd0;
    mem[259] = 32'd0;
    mem[260] = 32'd0;
    mem[261] = 32'd0;
    mem[262] = 32'd0;
    mem[263] = 32'd0;
    mem[264] = 32'd0;
    mem[265] = 32'd0;
    mem[266] = 32'd0;
    mem[267] = 32'd0;
    mem[268] = 32'd0;
    mem[269] = 32'd0;
    mem[270] = 32'd0;
    mem[271] = 32'd0;
    mem[272] = 32'd0;
    mem[273] = 32'd0;
    mem[274] = 32'd0;
    mem[275] = 32'd0;
    mem[276] = 32'd0;
    mem[277] = 32'd0;
    mem[278] = 32'd0;
    mem[279] = 32'd0;
    mem[280] = 32'd0;
    mem[281] = 32'd0;
    mem[282] = 32'd0;
    mem[283] = 32'd0;
    mem[284] = 32'd0;
    mem[285] = 32'd0;
    mem[286] = 32'd0;
    mem[287] = 32'd0;
    mem[288] = 32'd0;
    mem[289] = 32'd0;
    mem[290] = 32'd0;
    mem[291] = 32'd0;
    mem[292] = 32'd0;
    mem[293] = 32'd0;
    mem[294] = 32'd0;
    mem[295] = 32'd0;
    mem[296] = 32'd0;
    mem[297] = 32'd0;
    mem[298] = 32'd0;
    mem[299] = 32'd0;
    mem[300] = 32'd0;
    mem[301] = 32'd0;
    mem[302] = 32'd0;
    mem[303] = 32'd0;
    mem[304] = 32'd0;
    mem[305] = 32'd0;
    mem[306] = 32'd0;
    mem[307] = 32'd0;
    mem[308] = 32'd0;
    mem[309] = 32'd0;
    mem[310] = 32'd0;
    mem[311] = 32'd0;
    mem[312] = 32'd0;
    mem[313] = 32'd0;
    mem[314] = 32'd0;
    mem[315] = 32'd0;
    mem[316] = 32'd0;
    mem[317] = 32'd0;
    mem[318] = 32'd0;
    mem[319] = 32'd0;
    mem[320] = 32'd0;
    mem[321] = 32'd0;
    mem[322] = 32'd0;
    mem[323] = 32'd0;
    mem[324] = 32'd0;
    mem[325] = 32'd0;
    mem[326] = 32'd0;
    mem[327] = 32'd0;
    mem[328] = 32'd0;
    mem[329] = 32'd0;
    mem[330] = 32'd0;
    mem[331] = 32'd0;
    mem[332] = 32'd0;
    mem[333] = 32'd0;
    mem[334] = 32'd0;
    mem[335] = 32'd0;
    mem[336] = 32'd0;
    mem[337] = 32'd0;
    mem[338] = 32'd0;
    mem[339] = 32'd0;
    mem[340] = 32'd0;
    mem[341] = 32'd0;
    mem[342] = 32'd0;
    mem[343] = 32'd0;
    mem[344] = 32'd0;
    mem[345] = 32'd0;
    mem[346] = 32'd0;
    mem[347] = 32'd0;
    mem[348] = 32'd0;
    mem[349] = 32'd0;
    mem[350] = 32'd0;
    mem[351] = 32'd0;
    mem[352] = 32'd0;
    mem[353] = 32'd0;
    mem[354] = 32'd0;
    mem[355] = 32'd0;
    mem[356] = 32'd0;
    mem[357] = 32'd0;
    mem[358] = 32'd0;
    mem[359] = 32'd0;
    mem[360] = 32'd0;
    mem[361] = 32'd0;
    mem[362] = 32'd0;
    mem[363] = 32'd0;
    mem[364] = 32'd0;
    mem[365] = 32'd0;
    mem[366] = 32'd0;
    mem[367] = 32'd0;
    mem[368] = 32'd0;
    mem[369] = 32'd0;
    mem[370] = 32'd0;
    mem[371] = 32'd0;
    mem[372] = 32'd0;
    mem[373] = 32'd0;
    mem[374] = 32'd0;
    mem[375] = 32'd0;
    mem[376] = 32'd0;
    mem[377] = 32'd0;
    mem[378] = 32'd0;
    mem[379] = 32'd0;
    mem[380] = 32'd0;
    mem[381] = 32'd0;
    mem[382] = 32'd0;
    mem[383] = 32'd0;
    mem[384] = 32'd0;
    mem[385] = 32'd0;
    mem[386] = 32'd0;
    mem[387] = 32'd0;
    mem[388] = 32'd0;
    mem[389] = 32'd0;
    mem[390] = 32'd0;
    mem[391] = 32'd0;
    mem[392] = 32'd0;
    mem[393] = 32'd0;
    mem[394] = 32'd0;
    mem[395] = 32'd0;
    mem[396] = 32'd0;
    mem[397] = 32'd0;
    mem[398] = 32'd0;
    mem[399] = 32'd0;
    mem[400] = 32'd0;
    mem[401] = 32'd0;
    mem[402] = 32'd0;
    mem[403] = 32'd0;
    mem[404] = 32'd0;
    mem[405] = 32'd0;
    mem[406] = 32'd0;
    mem[407] = 32'd0;
    mem[408] = 32'd0;
    mem[409] = 32'd0;
    mem[410] = 32'd0;
    mem[411] = 32'd0;
    mem[412] = 32'd0;
    mem[413] = 32'd0;
    mem[414] = 32'd0;
    mem[415] = 32'd0;
    mem[416] = 32'd0;
    mem[417] = 32'd0;
    mem[418] = 32'd0;
    mem[419] = 32'd0;
    mem[420] = 32'd0;
    mem[421] = 32'd0;
    mem[422] = 32'd0;
    mem[423] = 32'd0;
    mem[424] = 32'd0;
    mem[425] = 32'd0;
    mem[426] = 32'd0;
    mem[427] = 32'd0;
    mem[428] = 32'd0;
    mem[429] = 32'd0;
    mem[430] = 32'd0;
    mem[431] = 32'd0;
    mem[432] = 32'd0;
    mem[433] = 32'd0;
    mem[434] = 32'd0;
    mem[435] = 32'd0;
    mem[436] = 32'd0;
    mem[437] = 32'd0;
    mem[438] = 32'd0;
    mem[439] = 32'd0;
    mem[440] = 32'd0;
    mem[441] = 32'd0;
    mem[442] = 32'd0;
    mem[443] = 32'd0;
    mem[444] = 32'd0;
    mem[445] = 32'd0;
    mem[446] = 32'd0;
    mem[447] = 32'd0;
    mem[448] = 32'd0;
    mem[449] = 32'd0;
    mem[450] = 32'd0;
    mem[451] = 32'd0;
    mem[452] = 32'd0;
    mem[453] = 32'd0;
    mem[454] = 32'd0;
    mem[455] = 32'd0;
    mem[456] = 32'd0;
    mem[457] = 32'd0;
    mem[458] = 32'd0;
    mem[459] = 32'd0;
    mem[460] = 32'd0;
    mem[461] = 32'd0;
    mem[462] = 32'd0;
    mem[463] = 32'd0;
    mem[464] = 32'd0;
    mem[465] = 32'd0;
    mem[466] = 32'd0;
    mem[467] = 32'd0;
    mem[468] = 32'd0;
    mem[469] = 32'd0;
    mem[470] = 32'd0;
    mem[471] = 32'd0;
    mem[472] = 32'd0;
    mem[473] = 32'd0;
    mem[474] = 32'd0;
    mem[475] = 32'd0;
    mem[476] = 32'd0;
    mem[477] = 32'd0;
    mem[478] = 32'd0;
    mem[479] = 32'd0;
    mem[480] = 32'd0;
    mem[481] = 32'd0;
    mem[482] = 32'd0;
    mem[483] = 32'd0;
    mem[484] = 32'd0;
    mem[485] = 32'd0;
    mem[486] = 32'd0;
    mem[487] = 32'd0;
    mem[488] = 32'd0;
    mem[489] = 32'd0;
    mem[490] = 32'd0;
    mem[491] = 32'd0;
    mem[492] = 32'd0;
    mem[493] = 32'd0;
    mem[494] = 32'd0;
    mem[495] = 32'd0;
    mem[496] = 32'd0;
    mem[497] = 32'd0;
    mem[498] = 32'd0;
    mem[499] = 32'd0;
    mem[500] = 32'd0;
    mem[501] = 32'd0;
    mem[502] = 32'd0;
    mem[503] = 32'd0;
    mem[504] = 32'd0;
    mem[505] = 32'd0;
    mem[506] = 32'd0;
    mem[507] = 32'd0;
    mem[508] = 32'd0;
    mem[509] = 32'd0;
    mem[510] = 32'd0;
    mem[511] = 32'd0;
  end
  always @(posedge clk) begin
    if (mem_w_en)
      mem[mem_w_addr] <= mem_w_data;
  end
  reg [31:0] _0_;
  always @(posedge clk) begin
    _0_ <= mem[mem_r_addr];
  end
  assign mem_r_data = _0_;
  assign r_data = mem_r_data;
  assign mem_r_addr = r_addr;
  assign mem_r_en = 1'h1;
  assign mem_w_data = w_data;
  assign mem_w_addr = w_addr;
  assign mem_w_en = w_en;
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.store_filter_values_dp_1" *)
(* generator = "Amaranth" *)
module store_filter_values_dp_1(w_en, w_addr, w_data, r_addr, r_data, clk);
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:215" *)
  wire [8:0] mem_r_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:215" *)
  wire [31:0] mem_r_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:215" *)
  wire mem_r_en;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:214" *)
  wire [8:0] mem_w_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:214" *)
  wire [31:0] mem_w_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:214" *)
  wire mem_w_en;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:209" *)
  input [8:0] r_addr;
  wire [8:0] r_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:210" *)
  output [31:0] r_data;
  wire [31:0] r_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:207" *)
  input [8:0] w_addr;
  wire [8:0] w_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:208" *)
  input [31:0] w_data;
  wire [31:0] w_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:206" *)
  input w_en;
  wire w_en;
  reg [31:0] mem [511:0];
  initial begin
    mem[0] = 32'd0;
    mem[1] = 32'd0;
    mem[2] = 32'd0;
    mem[3] = 32'd0;
    mem[4] = 32'd0;
    mem[5] = 32'd0;
    mem[6] = 32'd0;
    mem[7] = 32'd0;
    mem[8] = 32'd0;
    mem[9] = 32'd0;
    mem[10] = 32'd0;
    mem[11] = 32'd0;
    mem[12] = 32'd0;
    mem[13] = 32'd0;
    mem[14] = 32'd0;
    mem[15] = 32'd0;
    mem[16] = 32'd0;
    mem[17] = 32'd0;
    mem[18] = 32'd0;
    mem[19] = 32'd0;
    mem[20] = 32'd0;
    mem[21] = 32'd0;
    mem[22] = 32'd0;
    mem[23] = 32'd0;
    mem[24] = 32'd0;
    mem[25] = 32'd0;
    mem[26] = 32'd0;
    mem[27] = 32'd0;
    mem[28] = 32'd0;
    mem[29] = 32'd0;
    mem[30] = 32'd0;
    mem[31] = 32'd0;
    mem[32] = 32'd0;
    mem[33] = 32'd0;
    mem[34] = 32'd0;
    mem[35] = 32'd0;
    mem[36] = 32'd0;
    mem[37] = 32'd0;
    mem[38] = 32'd0;
    mem[39] = 32'd0;
    mem[40] = 32'd0;
    mem[41] = 32'd0;
    mem[42] = 32'd0;
    mem[43] = 32'd0;
    mem[44] = 32'd0;
    mem[45] = 32'd0;
    mem[46] = 32'd0;
    mem[47] = 32'd0;
    mem[48] = 32'd0;
    mem[49] = 32'd0;
    mem[50] = 32'd0;
    mem[51] = 32'd0;
    mem[52] = 32'd0;
    mem[53] = 32'd0;
    mem[54] = 32'd0;
    mem[55] = 32'd0;
    mem[56] = 32'd0;
    mem[57] = 32'd0;
    mem[58] = 32'd0;
    mem[59] = 32'd0;
    mem[60] = 32'd0;
    mem[61] = 32'd0;
    mem[62] = 32'd0;
    mem[63] = 32'd0;
    mem[64] = 32'd0;
    mem[65] = 32'd0;
    mem[66] = 32'd0;
    mem[67] = 32'd0;
    mem[68] = 32'd0;
    mem[69] = 32'd0;
    mem[70] = 32'd0;
    mem[71] = 32'd0;
    mem[72] = 32'd0;
    mem[73] = 32'd0;
    mem[74] = 32'd0;
    mem[75] = 32'd0;
    mem[76] = 32'd0;
    mem[77] = 32'd0;
    mem[78] = 32'd0;
    mem[79] = 32'd0;
    mem[80] = 32'd0;
    mem[81] = 32'd0;
    mem[82] = 32'd0;
    mem[83] = 32'd0;
    mem[84] = 32'd0;
    mem[85] = 32'd0;
    mem[86] = 32'd0;
    mem[87] = 32'd0;
    mem[88] = 32'd0;
    mem[89] = 32'd0;
    mem[90] = 32'd0;
    mem[91] = 32'd0;
    mem[92] = 32'd0;
    mem[93] = 32'd0;
    mem[94] = 32'd0;
    mem[95] = 32'd0;
    mem[96] = 32'd0;
    mem[97] = 32'd0;
    mem[98] = 32'd0;
    mem[99] = 32'd0;
    mem[100] = 32'd0;
    mem[101] = 32'd0;
    mem[102] = 32'd0;
    mem[103] = 32'd0;
    mem[104] = 32'd0;
    mem[105] = 32'd0;
    mem[106] = 32'd0;
    mem[107] = 32'd0;
    mem[108] = 32'd0;
    mem[109] = 32'd0;
    mem[110] = 32'd0;
    mem[111] = 32'd0;
    mem[112] = 32'd0;
    mem[113] = 32'd0;
    mem[114] = 32'd0;
    mem[115] = 32'd0;
    mem[116] = 32'd0;
    mem[117] = 32'd0;
    mem[118] = 32'd0;
    mem[119] = 32'd0;
    mem[120] = 32'd0;
    mem[121] = 32'd0;
    mem[122] = 32'd0;
    mem[123] = 32'd0;
    mem[124] = 32'd0;
    mem[125] = 32'd0;
    mem[126] = 32'd0;
    mem[127] = 32'd0;
    mem[128] = 32'd0;
    mem[129] = 32'd0;
    mem[130] = 32'd0;
    mem[131] = 32'd0;
    mem[132] = 32'd0;
    mem[133] = 32'd0;
    mem[134] = 32'd0;
    mem[135] = 32'd0;
    mem[136] = 32'd0;
    mem[137] = 32'd0;
    mem[138] = 32'd0;
    mem[139] = 32'd0;
    mem[140] = 32'd0;
    mem[141] = 32'd0;
    mem[142] = 32'd0;
    mem[143] = 32'd0;
    mem[144] = 32'd0;
    mem[145] = 32'd0;
    mem[146] = 32'd0;
    mem[147] = 32'd0;
    mem[148] = 32'd0;
    mem[149] = 32'd0;
    mem[150] = 32'd0;
    mem[151] = 32'd0;
    mem[152] = 32'd0;
    mem[153] = 32'd0;
    mem[154] = 32'd0;
    mem[155] = 32'd0;
    mem[156] = 32'd0;
    mem[157] = 32'd0;
    mem[158] = 32'd0;
    mem[159] = 32'd0;
    mem[160] = 32'd0;
    mem[161] = 32'd0;
    mem[162] = 32'd0;
    mem[163] = 32'd0;
    mem[164] = 32'd0;
    mem[165] = 32'd0;
    mem[166] = 32'd0;
    mem[167] = 32'd0;
    mem[168] = 32'd0;
    mem[169] = 32'd0;
    mem[170] = 32'd0;
    mem[171] = 32'd0;
    mem[172] = 32'd0;
    mem[173] = 32'd0;
    mem[174] = 32'd0;
    mem[175] = 32'd0;
    mem[176] = 32'd0;
    mem[177] = 32'd0;
    mem[178] = 32'd0;
    mem[179] = 32'd0;
    mem[180] = 32'd0;
    mem[181] = 32'd0;
    mem[182] = 32'd0;
    mem[183] = 32'd0;
    mem[184] = 32'd0;
    mem[185] = 32'd0;
    mem[186] = 32'd0;
    mem[187] = 32'd0;
    mem[188] = 32'd0;
    mem[189] = 32'd0;
    mem[190] = 32'd0;
    mem[191] = 32'd0;
    mem[192] = 32'd0;
    mem[193] = 32'd0;
    mem[194] = 32'd0;
    mem[195] = 32'd0;
    mem[196] = 32'd0;
    mem[197] = 32'd0;
    mem[198] = 32'd0;
    mem[199] = 32'd0;
    mem[200] = 32'd0;
    mem[201] = 32'd0;
    mem[202] = 32'd0;
    mem[203] = 32'd0;
    mem[204] = 32'd0;
    mem[205] = 32'd0;
    mem[206] = 32'd0;
    mem[207] = 32'd0;
    mem[208] = 32'd0;
    mem[209] = 32'd0;
    mem[210] = 32'd0;
    mem[211] = 32'd0;
    mem[212] = 32'd0;
    mem[213] = 32'd0;
    mem[214] = 32'd0;
    mem[215] = 32'd0;
    mem[216] = 32'd0;
    mem[217] = 32'd0;
    mem[218] = 32'd0;
    mem[219] = 32'd0;
    mem[220] = 32'd0;
    mem[221] = 32'd0;
    mem[222] = 32'd0;
    mem[223] = 32'd0;
    mem[224] = 32'd0;
    mem[225] = 32'd0;
    mem[226] = 32'd0;
    mem[227] = 32'd0;
    mem[228] = 32'd0;
    mem[229] = 32'd0;
    mem[230] = 32'd0;
    mem[231] = 32'd0;
    mem[232] = 32'd0;
    mem[233] = 32'd0;
    mem[234] = 32'd0;
    mem[235] = 32'd0;
    mem[236] = 32'd0;
    mem[237] = 32'd0;
    mem[238] = 32'd0;
    mem[239] = 32'd0;
    mem[240] = 32'd0;
    mem[241] = 32'd0;
    mem[242] = 32'd0;
    mem[243] = 32'd0;
    mem[244] = 32'd0;
    mem[245] = 32'd0;
    mem[246] = 32'd0;
    mem[247] = 32'd0;
    mem[248] = 32'd0;
    mem[249] = 32'd0;
    mem[250] = 32'd0;
    mem[251] = 32'd0;
    mem[252] = 32'd0;
    mem[253] = 32'd0;
    mem[254] = 32'd0;
    mem[255] = 32'd0;
    mem[256] = 32'd0;
    mem[257] = 32'd0;
    mem[258] = 32'd0;
    mem[259] = 32'd0;
    mem[260] = 32'd0;
    mem[261] = 32'd0;
    mem[262] = 32'd0;
    mem[263] = 32'd0;
    mem[264] = 32'd0;
    mem[265] = 32'd0;
    mem[266] = 32'd0;
    mem[267] = 32'd0;
    mem[268] = 32'd0;
    mem[269] = 32'd0;
    mem[270] = 32'd0;
    mem[271] = 32'd0;
    mem[272] = 32'd0;
    mem[273] = 32'd0;
    mem[274] = 32'd0;
    mem[275] = 32'd0;
    mem[276] = 32'd0;
    mem[277] = 32'd0;
    mem[278] = 32'd0;
    mem[279] = 32'd0;
    mem[280] = 32'd0;
    mem[281] = 32'd0;
    mem[282] = 32'd0;
    mem[283] = 32'd0;
    mem[284] = 32'd0;
    mem[285] = 32'd0;
    mem[286] = 32'd0;
    mem[287] = 32'd0;
    mem[288] = 32'd0;
    mem[289] = 32'd0;
    mem[290] = 32'd0;
    mem[291] = 32'd0;
    mem[292] = 32'd0;
    mem[293] = 32'd0;
    mem[294] = 32'd0;
    mem[295] = 32'd0;
    mem[296] = 32'd0;
    mem[297] = 32'd0;
    mem[298] = 32'd0;
    mem[299] = 32'd0;
    mem[300] = 32'd0;
    mem[301] = 32'd0;
    mem[302] = 32'd0;
    mem[303] = 32'd0;
    mem[304] = 32'd0;
    mem[305] = 32'd0;
    mem[306] = 32'd0;
    mem[307] = 32'd0;
    mem[308] = 32'd0;
    mem[309] = 32'd0;
    mem[310] = 32'd0;
    mem[311] = 32'd0;
    mem[312] = 32'd0;
    mem[313] = 32'd0;
    mem[314] = 32'd0;
    mem[315] = 32'd0;
    mem[316] = 32'd0;
    mem[317] = 32'd0;
    mem[318] = 32'd0;
    mem[319] = 32'd0;
    mem[320] = 32'd0;
    mem[321] = 32'd0;
    mem[322] = 32'd0;
    mem[323] = 32'd0;
    mem[324] = 32'd0;
    mem[325] = 32'd0;
    mem[326] = 32'd0;
    mem[327] = 32'd0;
    mem[328] = 32'd0;
    mem[329] = 32'd0;
    mem[330] = 32'd0;
    mem[331] = 32'd0;
    mem[332] = 32'd0;
    mem[333] = 32'd0;
    mem[334] = 32'd0;
    mem[335] = 32'd0;
    mem[336] = 32'd0;
    mem[337] = 32'd0;
    mem[338] = 32'd0;
    mem[339] = 32'd0;
    mem[340] = 32'd0;
    mem[341] = 32'd0;
    mem[342] = 32'd0;
    mem[343] = 32'd0;
    mem[344] = 32'd0;
    mem[345] = 32'd0;
    mem[346] = 32'd0;
    mem[347] = 32'd0;
    mem[348] = 32'd0;
    mem[349] = 32'd0;
    mem[350] = 32'd0;
    mem[351] = 32'd0;
    mem[352] = 32'd0;
    mem[353] = 32'd0;
    mem[354] = 32'd0;
    mem[355] = 32'd0;
    mem[356] = 32'd0;
    mem[357] = 32'd0;
    mem[358] = 32'd0;
    mem[359] = 32'd0;
    mem[360] = 32'd0;
    mem[361] = 32'd0;
    mem[362] = 32'd0;
    mem[363] = 32'd0;
    mem[364] = 32'd0;
    mem[365] = 32'd0;
    mem[366] = 32'd0;
    mem[367] = 32'd0;
    mem[368] = 32'd0;
    mem[369] = 32'd0;
    mem[370] = 32'd0;
    mem[371] = 32'd0;
    mem[372] = 32'd0;
    mem[373] = 32'd0;
    mem[374] = 32'd0;
    mem[375] = 32'd0;
    mem[376] = 32'd0;
    mem[377] = 32'd0;
    mem[378] = 32'd0;
    mem[379] = 32'd0;
    mem[380] = 32'd0;
    mem[381] = 32'd0;
    mem[382] = 32'd0;
    mem[383] = 32'd0;
    mem[384] = 32'd0;
    mem[385] = 32'd0;
    mem[386] = 32'd0;
    mem[387] = 32'd0;
    mem[388] = 32'd0;
    mem[389] = 32'd0;
    mem[390] = 32'd0;
    mem[391] = 32'd0;
    mem[392] = 32'd0;
    mem[393] = 32'd0;
    mem[394] = 32'd0;
    mem[395] = 32'd0;
    mem[396] = 32'd0;
    mem[397] = 32'd0;
    mem[398] = 32'd0;
    mem[399] = 32'd0;
    mem[400] = 32'd0;
    mem[401] = 32'd0;
    mem[402] = 32'd0;
    mem[403] = 32'd0;
    mem[404] = 32'd0;
    mem[405] = 32'd0;
    mem[406] = 32'd0;
    mem[407] = 32'd0;
    mem[408] = 32'd0;
    mem[409] = 32'd0;
    mem[410] = 32'd0;
    mem[411] = 32'd0;
    mem[412] = 32'd0;
    mem[413] = 32'd0;
    mem[414] = 32'd0;
    mem[415] = 32'd0;
    mem[416] = 32'd0;
    mem[417] = 32'd0;
    mem[418] = 32'd0;
    mem[419] = 32'd0;
    mem[420] = 32'd0;
    mem[421] = 32'd0;
    mem[422] = 32'd0;
    mem[423] = 32'd0;
    mem[424] = 32'd0;
    mem[425] = 32'd0;
    mem[426] = 32'd0;
    mem[427] = 32'd0;
    mem[428] = 32'd0;
    mem[429] = 32'd0;
    mem[430] = 32'd0;
    mem[431] = 32'd0;
    mem[432] = 32'd0;
    mem[433] = 32'd0;
    mem[434] = 32'd0;
    mem[435] = 32'd0;
    mem[436] = 32'd0;
    mem[437] = 32'd0;
    mem[438] = 32'd0;
    mem[439] = 32'd0;
    mem[440] = 32'd0;
    mem[441] = 32'd0;
    mem[442] = 32'd0;
    mem[443] = 32'd0;
    mem[444] = 32'd0;
    mem[445] = 32'd0;
    mem[446] = 32'd0;
    mem[447] = 32'd0;
    mem[448] = 32'd0;
    mem[449] = 32'd0;
    mem[450] = 32'd0;
    mem[451] = 32'd0;
    mem[452] = 32'd0;
    mem[453] = 32'd0;
    mem[454] = 32'd0;
    mem[455] = 32'd0;
    mem[456] = 32'd0;
    mem[457] = 32'd0;
    mem[458] = 32'd0;
    mem[459] = 32'd0;
    mem[460] = 32'd0;
    mem[461] = 32'd0;
    mem[462] = 32'd0;
    mem[463] = 32'd0;
    mem[464] = 32'd0;
    mem[465] = 32'd0;
    mem[466] = 32'd0;
    mem[467] = 32'd0;
    mem[468] = 32'd0;
    mem[469] = 32'd0;
    mem[470] = 32'd0;
    mem[471] = 32'd0;
    mem[472] = 32'd0;
    mem[473] = 32'd0;
    mem[474] = 32'd0;
    mem[475] = 32'd0;
    mem[476] = 32'd0;
    mem[477] = 32'd0;
    mem[478] = 32'd0;
    mem[479] = 32'd0;
    mem[480] = 32'd0;
    mem[481] = 32'd0;
    mem[482] = 32'd0;
    mem[483] = 32'd0;
    mem[484] = 32'd0;
    mem[485] = 32'd0;
    mem[486] = 32'd0;
    mem[487] = 32'd0;
    mem[488] = 32'd0;
    mem[489] = 32'd0;
    mem[490] = 32'd0;
    mem[491] = 32'd0;
    mem[492] = 32'd0;
    mem[493] = 32'd0;
    mem[494] = 32'd0;
    mem[495] = 32'd0;
    mem[496] = 32'd0;
    mem[497] = 32'd0;
    mem[498] = 32'd0;
    mem[499] = 32'd0;
    mem[500] = 32'd0;
    mem[501] = 32'd0;
    mem[502] = 32'd0;
    mem[503] = 32'd0;
    mem[504] = 32'd0;
    mem[505] = 32'd0;
    mem[506] = 32'd0;
    mem[507] = 32'd0;
    mem[508] = 32'd0;
    mem[509] = 32'd0;
    mem[510] = 32'd0;
    mem[511] = 32'd0;
  end
  always @(posedge clk) begin
    if (mem_w_en)
      mem[mem_w_addr] <= mem_w_data;
  end
  reg [31:0] _0_;
  always @(posedge clk) begin
    _0_ <= mem[mem_r_addr];
  end
  assign mem_r_data = _0_;
  assign r_data = mem_r_data;
  assign mem_r_addr = r_addr;
  assign mem_r_en = 1'h1;
  assign mem_w_data = w_data;
  assign mem_w_addr = w_addr;
  assign mem_w_en = w_en;
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.store_filter_values_dp_2" *)
(* generator = "Amaranth" *)
module store_filter_values_dp_2(w_en, w_addr, w_data, r_addr, r_data, clk);
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:215" *)
  wire [8:0] mem_r_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:215" *)
  wire [31:0] mem_r_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:215" *)
  wire mem_r_en;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:214" *)
  wire [8:0] mem_w_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:214" *)
  wire [31:0] mem_w_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:214" *)
  wire mem_w_en;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:209" *)
  input [8:0] r_addr;
  wire [8:0] r_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:210" *)
  output [31:0] r_data;
  wire [31:0] r_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:207" *)
  input [8:0] w_addr;
  wire [8:0] w_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:208" *)
  input [31:0] w_data;
  wire [31:0] w_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:206" *)
  input w_en;
  wire w_en;
  reg [31:0] mem [511:0];
  initial begin
    mem[0] = 32'd0;
    mem[1] = 32'd0;
    mem[2] = 32'd0;
    mem[3] = 32'd0;
    mem[4] = 32'd0;
    mem[5] = 32'd0;
    mem[6] = 32'd0;
    mem[7] = 32'd0;
    mem[8] = 32'd0;
    mem[9] = 32'd0;
    mem[10] = 32'd0;
    mem[11] = 32'd0;
    mem[12] = 32'd0;
    mem[13] = 32'd0;
    mem[14] = 32'd0;
    mem[15] = 32'd0;
    mem[16] = 32'd0;
    mem[17] = 32'd0;
    mem[18] = 32'd0;
    mem[19] = 32'd0;
    mem[20] = 32'd0;
    mem[21] = 32'd0;
    mem[22] = 32'd0;
    mem[23] = 32'd0;
    mem[24] = 32'd0;
    mem[25] = 32'd0;
    mem[26] = 32'd0;
    mem[27] = 32'd0;
    mem[28] = 32'd0;
    mem[29] = 32'd0;
    mem[30] = 32'd0;
    mem[31] = 32'd0;
    mem[32] = 32'd0;
    mem[33] = 32'd0;
    mem[34] = 32'd0;
    mem[35] = 32'd0;
    mem[36] = 32'd0;
    mem[37] = 32'd0;
    mem[38] = 32'd0;
    mem[39] = 32'd0;
    mem[40] = 32'd0;
    mem[41] = 32'd0;
    mem[42] = 32'd0;
    mem[43] = 32'd0;
    mem[44] = 32'd0;
    mem[45] = 32'd0;
    mem[46] = 32'd0;
    mem[47] = 32'd0;
    mem[48] = 32'd0;
    mem[49] = 32'd0;
    mem[50] = 32'd0;
    mem[51] = 32'd0;
    mem[52] = 32'd0;
    mem[53] = 32'd0;
    mem[54] = 32'd0;
    mem[55] = 32'd0;
    mem[56] = 32'd0;
    mem[57] = 32'd0;
    mem[58] = 32'd0;
    mem[59] = 32'd0;
    mem[60] = 32'd0;
    mem[61] = 32'd0;
    mem[62] = 32'd0;
    mem[63] = 32'd0;
    mem[64] = 32'd0;
    mem[65] = 32'd0;
    mem[66] = 32'd0;
    mem[67] = 32'd0;
    mem[68] = 32'd0;
    mem[69] = 32'd0;
    mem[70] = 32'd0;
    mem[71] = 32'd0;
    mem[72] = 32'd0;
    mem[73] = 32'd0;
    mem[74] = 32'd0;
    mem[75] = 32'd0;
    mem[76] = 32'd0;
    mem[77] = 32'd0;
    mem[78] = 32'd0;
    mem[79] = 32'd0;
    mem[80] = 32'd0;
    mem[81] = 32'd0;
    mem[82] = 32'd0;
    mem[83] = 32'd0;
    mem[84] = 32'd0;
    mem[85] = 32'd0;
    mem[86] = 32'd0;
    mem[87] = 32'd0;
    mem[88] = 32'd0;
    mem[89] = 32'd0;
    mem[90] = 32'd0;
    mem[91] = 32'd0;
    mem[92] = 32'd0;
    mem[93] = 32'd0;
    mem[94] = 32'd0;
    mem[95] = 32'd0;
    mem[96] = 32'd0;
    mem[97] = 32'd0;
    mem[98] = 32'd0;
    mem[99] = 32'd0;
    mem[100] = 32'd0;
    mem[101] = 32'd0;
    mem[102] = 32'd0;
    mem[103] = 32'd0;
    mem[104] = 32'd0;
    mem[105] = 32'd0;
    mem[106] = 32'd0;
    mem[107] = 32'd0;
    mem[108] = 32'd0;
    mem[109] = 32'd0;
    mem[110] = 32'd0;
    mem[111] = 32'd0;
    mem[112] = 32'd0;
    mem[113] = 32'd0;
    mem[114] = 32'd0;
    mem[115] = 32'd0;
    mem[116] = 32'd0;
    mem[117] = 32'd0;
    mem[118] = 32'd0;
    mem[119] = 32'd0;
    mem[120] = 32'd0;
    mem[121] = 32'd0;
    mem[122] = 32'd0;
    mem[123] = 32'd0;
    mem[124] = 32'd0;
    mem[125] = 32'd0;
    mem[126] = 32'd0;
    mem[127] = 32'd0;
    mem[128] = 32'd0;
    mem[129] = 32'd0;
    mem[130] = 32'd0;
    mem[131] = 32'd0;
    mem[132] = 32'd0;
    mem[133] = 32'd0;
    mem[134] = 32'd0;
    mem[135] = 32'd0;
    mem[136] = 32'd0;
    mem[137] = 32'd0;
    mem[138] = 32'd0;
    mem[139] = 32'd0;
    mem[140] = 32'd0;
    mem[141] = 32'd0;
    mem[142] = 32'd0;
    mem[143] = 32'd0;
    mem[144] = 32'd0;
    mem[145] = 32'd0;
    mem[146] = 32'd0;
    mem[147] = 32'd0;
    mem[148] = 32'd0;
    mem[149] = 32'd0;
    mem[150] = 32'd0;
    mem[151] = 32'd0;
    mem[152] = 32'd0;
    mem[153] = 32'd0;
    mem[154] = 32'd0;
    mem[155] = 32'd0;
    mem[156] = 32'd0;
    mem[157] = 32'd0;
    mem[158] = 32'd0;
    mem[159] = 32'd0;
    mem[160] = 32'd0;
    mem[161] = 32'd0;
    mem[162] = 32'd0;
    mem[163] = 32'd0;
    mem[164] = 32'd0;
    mem[165] = 32'd0;
    mem[166] = 32'd0;
    mem[167] = 32'd0;
    mem[168] = 32'd0;
    mem[169] = 32'd0;
    mem[170] = 32'd0;
    mem[171] = 32'd0;
    mem[172] = 32'd0;
    mem[173] = 32'd0;
    mem[174] = 32'd0;
    mem[175] = 32'd0;
    mem[176] = 32'd0;
    mem[177] = 32'd0;
    mem[178] = 32'd0;
    mem[179] = 32'd0;
    mem[180] = 32'd0;
    mem[181] = 32'd0;
    mem[182] = 32'd0;
    mem[183] = 32'd0;
    mem[184] = 32'd0;
    mem[185] = 32'd0;
    mem[186] = 32'd0;
    mem[187] = 32'd0;
    mem[188] = 32'd0;
    mem[189] = 32'd0;
    mem[190] = 32'd0;
    mem[191] = 32'd0;
    mem[192] = 32'd0;
    mem[193] = 32'd0;
    mem[194] = 32'd0;
    mem[195] = 32'd0;
    mem[196] = 32'd0;
    mem[197] = 32'd0;
    mem[198] = 32'd0;
    mem[199] = 32'd0;
    mem[200] = 32'd0;
    mem[201] = 32'd0;
    mem[202] = 32'd0;
    mem[203] = 32'd0;
    mem[204] = 32'd0;
    mem[205] = 32'd0;
    mem[206] = 32'd0;
    mem[207] = 32'd0;
    mem[208] = 32'd0;
    mem[209] = 32'd0;
    mem[210] = 32'd0;
    mem[211] = 32'd0;
    mem[212] = 32'd0;
    mem[213] = 32'd0;
    mem[214] = 32'd0;
    mem[215] = 32'd0;
    mem[216] = 32'd0;
    mem[217] = 32'd0;
    mem[218] = 32'd0;
    mem[219] = 32'd0;
    mem[220] = 32'd0;
    mem[221] = 32'd0;
    mem[222] = 32'd0;
    mem[223] = 32'd0;
    mem[224] = 32'd0;
    mem[225] = 32'd0;
    mem[226] = 32'd0;
    mem[227] = 32'd0;
    mem[228] = 32'd0;
    mem[229] = 32'd0;
    mem[230] = 32'd0;
    mem[231] = 32'd0;
    mem[232] = 32'd0;
    mem[233] = 32'd0;
    mem[234] = 32'd0;
    mem[235] = 32'd0;
    mem[236] = 32'd0;
    mem[237] = 32'd0;
    mem[238] = 32'd0;
    mem[239] = 32'd0;
    mem[240] = 32'd0;
    mem[241] = 32'd0;
    mem[242] = 32'd0;
    mem[243] = 32'd0;
    mem[244] = 32'd0;
    mem[245] = 32'd0;
    mem[246] = 32'd0;
    mem[247] = 32'd0;
    mem[248] = 32'd0;
    mem[249] = 32'd0;
    mem[250] = 32'd0;
    mem[251] = 32'd0;
    mem[252] = 32'd0;
    mem[253] = 32'd0;
    mem[254] = 32'd0;
    mem[255] = 32'd0;
    mem[256] = 32'd0;
    mem[257] = 32'd0;
    mem[258] = 32'd0;
    mem[259] = 32'd0;
    mem[260] = 32'd0;
    mem[261] = 32'd0;
    mem[262] = 32'd0;
    mem[263] = 32'd0;
    mem[264] = 32'd0;
    mem[265] = 32'd0;
    mem[266] = 32'd0;
    mem[267] = 32'd0;
    mem[268] = 32'd0;
    mem[269] = 32'd0;
    mem[270] = 32'd0;
    mem[271] = 32'd0;
    mem[272] = 32'd0;
    mem[273] = 32'd0;
    mem[274] = 32'd0;
    mem[275] = 32'd0;
    mem[276] = 32'd0;
    mem[277] = 32'd0;
    mem[278] = 32'd0;
    mem[279] = 32'd0;
    mem[280] = 32'd0;
    mem[281] = 32'd0;
    mem[282] = 32'd0;
    mem[283] = 32'd0;
    mem[284] = 32'd0;
    mem[285] = 32'd0;
    mem[286] = 32'd0;
    mem[287] = 32'd0;
    mem[288] = 32'd0;
    mem[289] = 32'd0;
    mem[290] = 32'd0;
    mem[291] = 32'd0;
    mem[292] = 32'd0;
    mem[293] = 32'd0;
    mem[294] = 32'd0;
    mem[295] = 32'd0;
    mem[296] = 32'd0;
    mem[297] = 32'd0;
    mem[298] = 32'd0;
    mem[299] = 32'd0;
    mem[300] = 32'd0;
    mem[301] = 32'd0;
    mem[302] = 32'd0;
    mem[303] = 32'd0;
    mem[304] = 32'd0;
    mem[305] = 32'd0;
    mem[306] = 32'd0;
    mem[307] = 32'd0;
    mem[308] = 32'd0;
    mem[309] = 32'd0;
    mem[310] = 32'd0;
    mem[311] = 32'd0;
    mem[312] = 32'd0;
    mem[313] = 32'd0;
    mem[314] = 32'd0;
    mem[315] = 32'd0;
    mem[316] = 32'd0;
    mem[317] = 32'd0;
    mem[318] = 32'd0;
    mem[319] = 32'd0;
    mem[320] = 32'd0;
    mem[321] = 32'd0;
    mem[322] = 32'd0;
    mem[323] = 32'd0;
    mem[324] = 32'd0;
    mem[325] = 32'd0;
    mem[326] = 32'd0;
    mem[327] = 32'd0;
    mem[328] = 32'd0;
    mem[329] = 32'd0;
    mem[330] = 32'd0;
    mem[331] = 32'd0;
    mem[332] = 32'd0;
    mem[333] = 32'd0;
    mem[334] = 32'd0;
    mem[335] = 32'd0;
    mem[336] = 32'd0;
    mem[337] = 32'd0;
    mem[338] = 32'd0;
    mem[339] = 32'd0;
    mem[340] = 32'd0;
    mem[341] = 32'd0;
    mem[342] = 32'd0;
    mem[343] = 32'd0;
    mem[344] = 32'd0;
    mem[345] = 32'd0;
    mem[346] = 32'd0;
    mem[347] = 32'd0;
    mem[348] = 32'd0;
    mem[349] = 32'd0;
    mem[350] = 32'd0;
    mem[351] = 32'd0;
    mem[352] = 32'd0;
    mem[353] = 32'd0;
    mem[354] = 32'd0;
    mem[355] = 32'd0;
    mem[356] = 32'd0;
    mem[357] = 32'd0;
    mem[358] = 32'd0;
    mem[359] = 32'd0;
    mem[360] = 32'd0;
    mem[361] = 32'd0;
    mem[362] = 32'd0;
    mem[363] = 32'd0;
    mem[364] = 32'd0;
    mem[365] = 32'd0;
    mem[366] = 32'd0;
    mem[367] = 32'd0;
    mem[368] = 32'd0;
    mem[369] = 32'd0;
    mem[370] = 32'd0;
    mem[371] = 32'd0;
    mem[372] = 32'd0;
    mem[373] = 32'd0;
    mem[374] = 32'd0;
    mem[375] = 32'd0;
    mem[376] = 32'd0;
    mem[377] = 32'd0;
    mem[378] = 32'd0;
    mem[379] = 32'd0;
    mem[380] = 32'd0;
    mem[381] = 32'd0;
    mem[382] = 32'd0;
    mem[383] = 32'd0;
    mem[384] = 32'd0;
    mem[385] = 32'd0;
    mem[386] = 32'd0;
    mem[387] = 32'd0;
    mem[388] = 32'd0;
    mem[389] = 32'd0;
    mem[390] = 32'd0;
    mem[391] = 32'd0;
    mem[392] = 32'd0;
    mem[393] = 32'd0;
    mem[394] = 32'd0;
    mem[395] = 32'd0;
    mem[396] = 32'd0;
    mem[397] = 32'd0;
    mem[398] = 32'd0;
    mem[399] = 32'd0;
    mem[400] = 32'd0;
    mem[401] = 32'd0;
    mem[402] = 32'd0;
    mem[403] = 32'd0;
    mem[404] = 32'd0;
    mem[405] = 32'd0;
    mem[406] = 32'd0;
    mem[407] = 32'd0;
    mem[408] = 32'd0;
    mem[409] = 32'd0;
    mem[410] = 32'd0;
    mem[411] = 32'd0;
    mem[412] = 32'd0;
    mem[413] = 32'd0;
    mem[414] = 32'd0;
    mem[415] = 32'd0;
    mem[416] = 32'd0;
    mem[417] = 32'd0;
    mem[418] = 32'd0;
    mem[419] = 32'd0;
    mem[420] = 32'd0;
    mem[421] = 32'd0;
    mem[422] = 32'd0;
    mem[423] = 32'd0;
    mem[424] = 32'd0;
    mem[425] = 32'd0;
    mem[426] = 32'd0;
    mem[427] = 32'd0;
    mem[428] = 32'd0;
    mem[429] = 32'd0;
    mem[430] = 32'd0;
    mem[431] = 32'd0;
    mem[432] = 32'd0;
    mem[433] = 32'd0;
    mem[434] = 32'd0;
    mem[435] = 32'd0;
    mem[436] = 32'd0;
    mem[437] = 32'd0;
    mem[438] = 32'd0;
    mem[439] = 32'd0;
    mem[440] = 32'd0;
    mem[441] = 32'd0;
    mem[442] = 32'd0;
    mem[443] = 32'd0;
    mem[444] = 32'd0;
    mem[445] = 32'd0;
    mem[446] = 32'd0;
    mem[447] = 32'd0;
    mem[448] = 32'd0;
    mem[449] = 32'd0;
    mem[450] = 32'd0;
    mem[451] = 32'd0;
    mem[452] = 32'd0;
    mem[453] = 32'd0;
    mem[454] = 32'd0;
    mem[455] = 32'd0;
    mem[456] = 32'd0;
    mem[457] = 32'd0;
    mem[458] = 32'd0;
    mem[459] = 32'd0;
    mem[460] = 32'd0;
    mem[461] = 32'd0;
    mem[462] = 32'd0;
    mem[463] = 32'd0;
    mem[464] = 32'd0;
    mem[465] = 32'd0;
    mem[466] = 32'd0;
    mem[467] = 32'd0;
    mem[468] = 32'd0;
    mem[469] = 32'd0;
    mem[470] = 32'd0;
    mem[471] = 32'd0;
    mem[472] = 32'd0;
    mem[473] = 32'd0;
    mem[474] = 32'd0;
    mem[475] = 32'd0;
    mem[476] = 32'd0;
    mem[477] = 32'd0;
    mem[478] = 32'd0;
    mem[479] = 32'd0;
    mem[480] = 32'd0;
    mem[481] = 32'd0;
    mem[482] = 32'd0;
    mem[483] = 32'd0;
    mem[484] = 32'd0;
    mem[485] = 32'd0;
    mem[486] = 32'd0;
    mem[487] = 32'd0;
    mem[488] = 32'd0;
    mem[489] = 32'd0;
    mem[490] = 32'd0;
    mem[491] = 32'd0;
    mem[492] = 32'd0;
    mem[493] = 32'd0;
    mem[494] = 32'd0;
    mem[495] = 32'd0;
    mem[496] = 32'd0;
    mem[497] = 32'd0;
    mem[498] = 32'd0;
    mem[499] = 32'd0;
    mem[500] = 32'd0;
    mem[501] = 32'd0;
    mem[502] = 32'd0;
    mem[503] = 32'd0;
    mem[504] = 32'd0;
    mem[505] = 32'd0;
    mem[506] = 32'd0;
    mem[507] = 32'd0;
    mem[508] = 32'd0;
    mem[509] = 32'd0;
    mem[510] = 32'd0;
    mem[511] = 32'd0;
  end
  always @(posedge clk) begin
    if (mem_w_en)
      mem[mem_w_addr] <= mem_w_data;
  end
  reg [31:0] _0_;
  always @(posedge clk) begin
    _0_ <= mem[mem_r_addr];
  end
  assign mem_r_data = _0_;
  assign r_data = mem_r_data;
  assign mem_r_addr = r_addr;
  assign mem_r_en = 1'h1;
  assign mem_w_data = w_data;
  assign mem_w_addr = w_addr;
  assign mem_w_en = w_en;
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.store_filter_values_dp_3" *)
(* generator = "Amaranth" *)
module store_filter_values_dp_3(w_en, w_addr, w_data, r_addr, r_data, clk);
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:215" *)
  wire [8:0] mem_r_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:215" *)
  wire [31:0] mem_r_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:215" *)
  wire mem_r_en;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:214" *)
  wire [8:0] mem_w_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:214" *)
  wire [31:0] mem_w_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:214" *)
  wire mem_w_en;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:209" *)
  input [8:0] r_addr;
  wire [8:0] r_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:210" *)
  output [31:0] r_data;
  wire [31:0] r_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:207" *)
  input [8:0] w_addr;
  wire [8:0] w_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:208" *)
  input [31:0] w_data;
  wire [31:0] w_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:206" *)
  input w_en;
  wire w_en;
  reg [31:0] mem [511:0];
  initial begin
    mem[0] = 32'd0;
    mem[1] = 32'd0;
    mem[2] = 32'd0;
    mem[3] = 32'd0;
    mem[4] = 32'd0;
    mem[5] = 32'd0;
    mem[6] = 32'd0;
    mem[7] = 32'd0;
    mem[8] = 32'd0;
    mem[9] = 32'd0;
    mem[10] = 32'd0;
    mem[11] = 32'd0;
    mem[12] = 32'd0;
    mem[13] = 32'd0;
    mem[14] = 32'd0;
    mem[15] = 32'd0;
    mem[16] = 32'd0;
    mem[17] = 32'd0;
    mem[18] = 32'd0;
    mem[19] = 32'd0;
    mem[20] = 32'd0;
    mem[21] = 32'd0;
    mem[22] = 32'd0;
    mem[23] = 32'd0;
    mem[24] = 32'd0;
    mem[25] = 32'd0;
    mem[26] = 32'd0;
    mem[27] = 32'd0;
    mem[28] = 32'd0;
    mem[29] = 32'd0;
    mem[30] = 32'd0;
    mem[31] = 32'd0;
    mem[32] = 32'd0;
    mem[33] = 32'd0;
    mem[34] = 32'd0;
    mem[35] = 32'd0;
    mem[36] = 32'd0;
    mem[37] = 32'd0;
    mem[38] = 32'd0;
    mem[39] = 32'd0;
    mem[40] = 32'd0;
    mem[41] = 32'd0;
    mem[42] = 32'd0;
    mem[43] = 32'd0;
    mem[44] = 32'd0;
    mem[45] = 32'd0;
    mem[46] = 32'd0;
    mem[47] = 32'd0;
    mem[48] = 32'd0;
    mem[49] = 32'd0;
    mem[50] = 32'd0;
    mem[51] = 32'd0;
    mem[52] = 32'd0;
    mem[53] = 32'd0;
    mem[54] = 32'd0;
    mem[55] = 32'd0;
    mem[56] = 32'd0;
    mem[57] = 32'd0;
    mem[58] = 32'd0;
    mem[59] = 32'd0;
    mem[60] = 32'd0;
    mem[61] = 32'd0;
    mem[62] = 32'd0;
    mem[63] = 32'd0;
    mem[64] = 32'd0;
    mem[65] = 32'd0;
    mem[66] = 32'd0;
    mem[67] = 32'd0;
    mem[68] = 32'd0;
    mem[69] = 32'd0;
    mem[70] = 32'd0;
    mem[71] = 32'd0;
    mem[72] = 32'd0;
    mem[73] = 32'd0;
    mem[74] = 32'd0;
    mem[75] = 32'd0;
    mem[76] = 32'd0;
    mem[77] = 32'd0;
    mem[78] = 32'd0;
    mem[79] = 32'd0;
    mem[80] = 32'd0;
    mem[81] = 32'd0;
    mem[82] = 32'd0;
    mem[83] = 32'd0;
    mem[84] = 32'd0;
    mem[85] = 32'd0;
    mem[86] = 32'd0;
    mem[87] = 32'd0;
    mem[88] = 32'd0;
    mem[89] = 32'd0;
    mem[90] = 32'd0;
    mem[91] = 32'd0;
    mem[92] = 32'd0;
    mem[93] = 32'd0;
    mem[94] = 32'd0;
    mem[95] = 32'd0;
    mem[96] = 32'd0;
    mem[97] = 32'd0;
    mem[98] = 32'd0;
    mem[99] = 32'd0;
    mem[100] = 32'd0;
    mem[101] = 32'd0;
    mem[102] = 32'd0;
    mem[103] = 32'd0;
    mem[104] = 32'd0;
    mem[105] = 32'd0;
    mem[106] = 32'd0;
    mem[107] = 32'd0;
    mem[108] = 32'd0;
    mem[109] = 32'd0;
    mem[110] = 32'd0;
    mem[111] = 32'd0;
    mem[112] = 32'd0;
    mem[113] = 32'd0;
    mem[114] = 32'd0;
    mem[115] = 32'd0;
    mem[116] = 32'd0;
    mem[117] = 32'd0;
    mem[118] = 32'd0;
    mem[119] = 32'd0;
    mem[120] = 32'd0;
    mem[121] = 32'd0;
    mem[122] = 32'd0;
    mem[123] = 32'd0;
    mem[124] = 32'd0;
    mem[125] = 32'd0;
    mem[126] = 32'd0;
    mem[127] = 32'd0;
    mem[128] = 32'd0;
    mem[129] = 32'd0;
    mem[130] = 32'd0;
    mem[131] = 32'd0;
    mem[132] = 32'd0;
    mem[133] = 32'd0;
    mem[134] = 32'd0;
    mem[135] = 32'd0;
    mem[136] = 32'd0;
    mem[137] = 32'd0;
    mem[138] = 32'd0;
    mem[139] = 32'd0;
    mem[140] = 32'd0;
    mem[141] = 32'd0;
    mem[142] = 32'd0;
    mem[143] = 32'd0;
    mem[144] = 32'd0;
    mem[145] = 32'd0;
    mem[146] = 32'd0;
    mem[147] = 32'd0;
    mem[148] = 32'd0;
    mem[149] = 32'd0;
    mem[150] = 32'd0;
    mem[151] = 32'd0;
    mem[152] = 32'd0;
    mem[153] = 32'd0;
    mem[154] = 32'd0;
    mem[155] = 32'd0;
    mem[156] = 32'd0;
    mem[157] = 32'd0;
    mem[158] = 32'd0;
    mem[159] = 32'd0;
    mem[160] = 32'd0;
    mem[161] = 32'd0;
    mem[162] = 32'd0;
    mem[163] = 32'd0;
    mem[164] = 32'd0;
    mem[165] = 32'd0;
    mem[166] = 32'd0;
    mem[167] = 32'd0;
    mem[168] = 32'd0;
    mem[169] = 32'd0;
    mem[170] = 32'd0;
    mem[171] = 32'd0;
    mem[172] = 32'd0;
    mem[173] = 32'd0;
    mem[174] = 32'd0;
    mem[175] = 32'd0;
    mem[176] = 32'd0;
    mem[177] = 32'd0;
    mem[178] = 32'd0;
    mem[179] = 32'd0;
    mem[180] = 32'd0;
    mem[181] = 32'd0;
    mem[182] = 32'd0;
    mem[183] = 32'd0;
    mem[184] = 32'd0;
    mem[185] = 32'd0;
    mem[186] = 32'd0;
    mem[187] = 32'd0;
    mem[188] = 32'd0;
    mem[189] = 32'd0;
    mem[190] = 32'd0;
    mem[191] = 32'd0;
    mem[192] = 32'd0;
    mem[193] = 32'd0;
    mem[194] = 32'd0;
    mem[195] = 32'd0;
    mem[196] = 32'd0;
    mem[197] = 32'd0;
    mem[198] = 32'd0;
    mem[199] = 32'd0;
    mem[200] = 32'd0;
    mem[201] = 32'd0;
    mem[202] = 32'd0;
    mem[203] = 32'd0;
    mem[204] = 32'd0;
    mem[205] = 32'd0;
    mem[206] = 32'd0;
    mem[207] = 32'd0;
    mem[208] = 32'd0;
    mem[209] = 32'd0;
    mem[210] = 32'd0;
    mem[211] = 32'd0;
    mem[212] = 32'd0;
    mem[213] = 32'd0;
    mem[214] = 32'd0;
    mem[215] = 32'd0;
    mem[216] = 32'd0;
    mem[217] = 32'd0;
    mem[218] = 32'd0;
    mem[219] = 32'd0;
    mem[220] = 32'd0;
    mem[221] = 32'd0;
    mem[222] = 32'd0;
    mem[223] = 32'd0;
    mem[224] = 32'd0;
    mem[225] = 32'd0;
    mem[226] = 32'd0;
    mem[227] = 32'd0;
    mem[228] = 32'd0;
    mem[229] = 32'd0;
    mem[230] = 32'd0;
    mem[231] = 32'd0;
    mem[232] = 32'd0;
    mem[233] = 32'd0;
    mem[234] = 32'd0;
    mem[235] = 32'd0;
    mem[236] = 32'd0;
    mem[237] = 32'd0;
    mem[238] = 32'd0;
    mem[239] = 32'd0;
    mem[240] = 32'd0;
    mem[241] = 32'd0;
    mem[242] = 32'd0;
    mem[243] = 32'd0;
    mem[244] = 32'd0;
    mem[245] = 32'd0;
    mem[246] = 32'd0;
    mem[247] = 32'd0;
    mem[248] = 32'd0;
    mem[249] = 32'd0;
    mem[250] = 32'd0;
    mem[251] = 32'd0;
    mem[252] = 32'd0;
    mem[253] = 32'd0;
    mem[254] = 32'd0;
    mem[255] = 32'd0;
    mem[256] = 32'd0;
    mem[257] = 32'd0;
    mem[258] = 32'd0;
    mem[259] = 32'd0;
    mem[260] = 32'd0;
    mem[261] = 32'd0;
    mem[262] = 32'd0;
    mem[263] = 32'd0;
    mem[264] = 32'd0;
    mem[265] = 32'd0;
    mem[266] = 32'd0;
    mem[267] = 32'd0;
    mem[268] = 32'd0;
    mem[269] = 32'd0;
    mem[270] = 32'd0;
    mem[271] = 32'd0;
    mem[272] = 32'd0;
    mem[273] = 32'd0;
    mem[274] = 32'd0;
    mem[275] = 32'd0;
    mem[276] = 32'd0;
    mem[277] = 32'd0;
    mem[278] = 32'd0;
    mem[279] = 32'd0;
    mem[280] = 32'd0;
    mem[281] = 32'd0;
    mem[282] = 32'd0;
    mem[283] = 32'd0;
    mem[284] = 32'd0;
    mem[285] = 32'd0;
    mem[286] = 32'd0;
    mem[287] = 32'd0;
    mem[288] = 32'd0;
    mem[289] = 32'd0;
    mem[290] = 32'd0;
    mem[291] = 32'd0;
    mem[292] = 32'd0;
    mem[293] = 32'd0;
    mem[294] = 32'd0;
    mem[295] = 32'd0;
    mem[296] = 32'd0;
    mem[297] = 32'd0;
    mem[298] = 32'd0;
    mem[299] = 32'd0;
    mem[300] = 32'd0;
    mem[301] = 32'd0;
    mem[302] = 32'd0;
    mem[303] = 32'd0;
    mem[304] = 32'd0;
    mem[305] = 32'd0;
    mem[306] = 32'd0;
    mem[307] = 32'd0;
    mem[308] = 32'd0;
    mem[309] = 32'd0;
    mem[310] = 32'd0;
    mem[311] = 32'd0;
    mem[312] = 32'd0;
    mem[313] = 32'd0;
    mem[314] = 32'd0;
    mem[315] = 32'd0;
    mem[316] = 32'd0;
    mem[317] = 32'd0;
    mem[318] = 32'd0;
    mem[319] = 32'd0;
    mem[320] = 32'd0;
    mem[321] = 32'd0;
    mem[322] = 32'd0;
    mem[323] = 32'd0;
    mem[324] = 32'd0;
    mem[325] = 32'd0;
    mem[326] = 32'd0;
    mem[327] = 32'd0;
    mem[328] = 32'd0;
    mem[329] = 32'd0;
    mem[330] = 32'd0;
    mem[331] = 32'd0;
    mem[332] = 32'd0;
    mem[333] = 32'd0;
    mem[334] = 32'd0;
    mem[335] = 32'd0;
    mem[336] = 32'd0;
    mem[337] = 32'd0;
    mem[338] = 32'd0;
    mem[339] = 32'd0;
    mem[340] = 32'd0;
    mem[341] = 32'd0;
    mem[342] = 32'd0;
    mem[343] = 32'd0;
    mem[344] = 32'd0;
    mem[345] = 32'd0;
    mem[346] = 32'd0;
    mem[347] = 32'd0;
    mem[348] = 32'd0;
    mem[349] = 32'd0;
    mem[350] = 32'd0;
    mem[351] = 32'd0;
    mem[352] = 32'd0;
    mem[353] = 32'd0;
    mem[354] = 32'd0;
    mem[355] = 32'd0;
    mem[356] = 32'd0;
    mem[357] = 32'd0;
    mem[358] = 32'd0;
    mem[359] = 32'd0;
    mem[360] = 32'd0;
    mem[361] = 32'd0;
    mem[362] = 32'd0;
    mem[363] = 32'd0;
    mem[364] = 32'd0;
    mem[365] = 32'd0;
    mem[366] = 32'd0;
    mem[367] = 32'd0;
    mem[368] = 32'd0;
    mem[369] = 32'd0;
    mem[370] = 32'd0;
    mem[371] = 32'd0;
    mem[372] = 32'd0;
    mem[373] = 32'd0;
    mem[374] = 32'd0;
    mem[375] = 32'd0;
    mem[376] = 32'd0;
    mem[377] = 32'd0;
    mem[378] = 32'd0;
    mem[379] = 32'd0;
    mem[380] = 32'd0;
    mem[381] = 32'd0;
    mem[382] = 32'd0;
    mem[383] = 32'd0;
    mem[384] = 32'd0;
    mem[385] = 32'd0;
    mem[386] = 32'd0;
    mem[387] = 32'd0;
    mem[388] = 32'd0;
    mem[389] = 32'd0;
    mem[390] = 32'd0;
    mem[391] = 32'd0;
    mem[392] = 32'd0;
    mem[393] = 32'd0;
    mem[394] = 32'd0;
    mem[395] = 32'd0;
    mem[396] = 32'd0;
    mem[397] = 32'd0;
    mem[398] = 32'd0;
    mem[399] = 32'd0;
    mem[400] = 32'd0;
    mem[401] = 32'd0;
    mem[402] = 32'd0;
    mem[403] = 32'd0;
    mem[404] = 32'd0;
    mem[405] = 32'd0;
    mem[406] = 32'd0;
    mem[407] = 32'd0;
    mem[408] = 32'd0;
    mem[409] = 32'd0;
    mem[410] = 32'd0;
    mem[411] = 32'd0;
    mem[412] = 32'd0;
    mem[413] = 32'd0;
    mem[414] = 32'd0;
    mem[415] = 32'd0;
    mem[416] = 32'd0;
    mem[417] = 32'd0;
    mem[418] = 32'd0;
    mem[419] = 32'd0;
    mem[420] = 32'd0;
    mem[421] = 32'd0;
    mem[422] = 32'd0;
    mem[423] = 32'd0;
    mem[424] = 32'd0;
    mem[425] = 32'd0;
    mem[426] = 32'd0;
    mem[427] = 32'd0;
    mem[428] = 32'd0;
    mem[429] = 32'd0;
    mem[430] = 32'd0;
    mem[431] = 32'd0;
    mem[432] = 32'd0;
    mem[433] = 32'd0;
    mem[434] = 32'd0;
    mem[435] = 32'd0;
    mem[436] = 32'd0;
    mem[437] = 32'd0;
    mem[438] = 32'd0;
    mem[439] = 32'd0;
    mem[440] = 32'd0;
    mem[441] = 32'd0;
    mem[442] = 32'd0;
    mem[443] = 32'd0;
    mem[444] = 32'd0;
    mem[445] = 32'd0;
    mem[446] = 32'd0;
    mem[447] = 32'd0;
    mem[448] = 32'd0;
    mem[449] = 32'd0;
    mem[450] = 32'd0;
    mem[451] = 32'd0;
    mem[452] = 32'd0;
    mem[453] = 32'd0;
    mem[454] = 32'd0;
    mem[455] = 32'd0;
    mem[456] = 32'd0;
    mem[457] = 32'd0;
    mem[458] = 32'd0;
    mem[459] = 32'd0;
    mem[460] = 32'd0;
    mem[461] = 32'd0;
    mem[462] = 32'd0;
    mem[463] = 32'd0;
    mem[464] = 32'd0;
    mem[465] = 32'd0;
    mem[466] = 32'd0;
    mem[467] = 32'd0;
    mem[468] = 32'd0;
    mem[469] = 32'd0;
    mem[470] = 32'd0;
    mem[471] = 32'd0;
    mem[472] = 32'd0;
    mem[473] = 32'd0;
    mem[474] = 32'd0;
    mem[475] = 32'd0;
    mem[476] = 32'd0;
    mem[477] = 32'd0;
    mem[478] = 32'd0;
    mem[479] = 32'd0;
    mem[480] = 32'd0;
    mem[481] = 32'd0;
    mem[482] = 32'd0;
    mem[483] = 32'd0;
    mem[484] = 32'd0;
    mem[485] = 32'd0;
    mem[486] = 32'd0;
    mem[487] = 32'd0;
    mem[488] = 32'd0;
    mem[489] = 32'd0;
    mem[490] = 32'd0;
    mem[491] = 32'd0;
    mem[492] = 32'd0;
    mem[493] = 32'd0;
    mem[494] = 32'd0;
    mem[495] = 32'd0;
    mem[496] = 32'd0;
    mem[497] = 32'd0;
    mem[498] = 32'd0;
    mem[499] = 32'd0;
    mem[500] = 32'd0;
    mem[501] = 32'd0;
    mem[502] = 32'd0;
    mem[503] = 32'd0;
    mem[504] = 32'd0;
    mem[505] = 32'd0;
    mem[506] = 32'd0;
    mem[507] = 32'd0;
    mem[508] = 32'd0;
    mem[509] = 32'd0;
    mem[510] = 32'd0;
    mem[511] = 32'd0;
  end
  always @(posedge clk) begin
    if (mem_w_en)
      mem[mem_w_addr] <= mem_w_data;
  end
  reg [31:0] _0_;
  always @(posedge clk) begin
    _0_ <= mem[mem_r_addr];
  end
  assign mem_r_data = _0_;
  assign r_data = mem_r_data;
  assign mem_r_addr = r_addr;
  assign mem_r_en = 1'h1;
  assign mem_w_data = w_data;
  assign mem_w_addr = w_addr;
  assign mem_w_en = w_en;
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.store_filter_values_set" *)
(* generator = "Amaranth" *)
module store_filter_values_set(clk, restart, \$signal , w_addr, w_data, \$signal$1 , \$signal$2 , \$signal$3 , count, updated, in0, start, done, rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$50  = 0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:88" *)
  wire \$4 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:88" *)
  wire \$6 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:97" *)
  wire [12:0] \$8 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:97" *)
  wire [12:0] \$9 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:61" *)
  output \$signal ;
  reg \$signal ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:61" *)
  output \$signal$1 ;
  reg \$signal$1 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:61" *)
  output \$signal$2 ;
  reg \$signal$2 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:61" *)
  output \$signal$3 ;
  reg \$signal$3 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:65" *)
  output [11:0] count;
  reg [11:0] count = 12'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:65" *)
  reg [11:0] \count$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:46" *)
  output done;
  wire done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:47" *)
  input [31:0] in0;
  wire [31:0] in0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:64" *)
  input restart;
  wire restart;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:45" *)
  input start;
  wire start;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:66" *)
  output updated;
  wire updated;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:62" *)
  output [8:0] w_addr;
  wire [8:0] w_addr;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:63" *)
  output [31:0] w_data;
  reg [31:0] w_data;
  assign \$9  = count + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:97" *) 1'h1;
  always @(posedge clk)
    count <= \count$next ;
  assign \$4  = | (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:88" *) { \$signal$3 , \$signal$2 , \$signal$1 , \$signal  };
  assign \$6  = \$4  | (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:88" *) restart;
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$50 ) begin end
    \count$next  = count;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:90" *)
    casez ({ start, restart })
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:90" */
      2'b?1:
          \count$next  = 12'h000;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:92" */
      2'b1?:
          \count$next  = \$9 [11:0];
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \count$next  = 12'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$50 ) begin end
    \$signal  = 1'h0;
    \$signal$1  = 1'h0;
    \$signal$2  = 1'h0;
    \$signal$3  = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:90" *)
    casez ({ start, restart })
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:90" */
      2'b?1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:92" */
      2'b1?:
          (* full_case = 32'd1 *)
          (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:94" *)
          casez (count[1:0])
            2'h0:
                \$signal  = 1'h1;
            2'h1:
                \$signal$1  = 1'h1;
            2'h2:
                \$signal$2  = 1'h1;
            2'h?:
                \$signal$3  = 1'h1;
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$50 ) begin end
    w_data = 32'd0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:90" *)
    casez ({ start, restart })
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:90" */
      2'b?1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:92" */
      2'b1?:
          w_data = in0;
    endcase
  end
  assign \$8  = \$9 ;
  assign updated = \$6 ;
  assign w_addr = count[10:2];
  assign done = 1'h1;
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.store_output_bias_dp" *)
(* generator = "Amaranth" *)
module store_output_bias_dp(r_addr, w_en, w_addr, w_data, r_data, clk);
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:215" *)
  wire [8:0] mem_r_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:215" *)
  wire [31:0] mem_r_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:215" *)
  wire mem_r_en;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:214" *)
  wire [8:0] mem_w_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:214" *)
  wire [31:0] mem_w_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:214" *)
  wire mem_w_en;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:209" *)
  input [8:0] r_addr;
  wire [8:0] r_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:210" *)
  output [31:0] r_data;
  wire [31:0] r_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:207" *)
  input [8:0] w_addr;
  wire [8:0] w_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:208" *)
  input [31:0] w_data;
  wire [31:0] w_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:206" *)
  input w_en;
  wire w_en;
  reg [31:0] mem [511:0];
  initial begin
    mem[0] = 32'd0;
    mem[1] = 32'd0;
    mem[2] = 32'd0;
    mem[3] = 32'd0;
    mem[4] = 32'd0;
    mem[5] = 32'd0;
    mem[6] = 32'd0;
    mem[7] = 32'd0;
    mem[8] = 32'd0;
    mem[9] = 32'd0;
    mem[10] = 32'd0;
    mem[11] = 32'd0;
    mem[12] = 32'd0;
    mem[13] = 32'd0;
    mem[14] = 32'd0;
    mem[15] = 32'd0;
    mem[16] = 32'd0;
    mem[17] = 32'd0;
    mem[18] = 32'd0;
    mem[19] = 32'd0;
    mem[20] = 32'd0;
    mem[21] = 32'd0;
    mem[22] = 32'd0;
    mem[23] = 32'd0;
    mem[24] = 32'd0;
    mem[25] = 32'd0;
    mem[26] = 32'd0;
    mem[27] = 32'd0;
    mem[28] = 32'd0;
    mem[29] = 32'd0;
    mem[30] = 32'd0;
    mem[31] = 32'd0;
    mem[32] = 32'd0;
    mem[33] = 32'd0;
    mem[34] = 32'd0;
    mem[35] = 32'd0;
    mem[36] = 32'd0;
    mem[37] = 32'd0;
    mem[38] = 32'd0;
    mem[39] = 32'd0;
    mem[40] = 32'd0;
    mem[41] = 32'd0;
    mem[42] = 32'd0;
    mem[43] = 32'd0;
    mem[44] = 32'd0;
    mem[45] = 32'd0;
    mem[46] = 32'd0;
    mem[47] = 32'd0;
    mem[48] = 32'd0;
    mem[49] = 32'd0;
    mem[50] = 32'd0;
    mem[51] = 32'd0;
    mem[52] = 32'd0;
    mem[53] = 32'd0;
    mem[54] = 32'd0;
    mem[55] = 32'd0;
    mem[56] = 32'd0;
    mem[57] = 32'd0;
    mem[58] = 32'd0;
    mem[59] = 32'd0;
    mem[60] = 32'd0;
    mem[61] = 32'd0;
    mem[62] = 32'd0;
    mem[63] = 32'd0;
    mem[64] = 32'd0;
    mem[65] = 32'd0;
    mem[66] = 32'd0;
    mem[67] = 32'd0;
    mem[68] = 32'd0;
    mem[69] = 32'd0;
    mem[70] = 32'd0;
    mem[71] = 32'd0;
    mem[72] = 32'd0;
    mem[73] = 32'd0;
    mem[74] = 32'd0;
    mem[75] = 32'd0;
    mem[76] = 32'd0;
    mem[77] = 32'd0;
    mem[78] = 32'd0;
    mem[79] = 32'd0;
    mem[80] = 32'd0;
    mem[81] = 32'd0;
    mem[82] = 32'd0;
    mem[83] = 32'd0;
    mem[84] = 32'd0;
    mem[85] = 32'd0;
    mem[86] = 32'd0;
    mem[87] = 32'd0;
    mem[88] = 32'd0;
    mem[89] = 32'd0;
    mem[90] = 32'd0;
    mem[91] = 32'd0;
    mem[92] = 32'd0;
    mem[93] = 32'd0;
    mem[94] = 32'd0;
    mem[95] = 32'd0;
    mem[96] = 32'd0;
    mem[97] = 32'd0;
    mem[98] = 32'd0;
    mem[99] = 32'd0;
    mem[100] = 32'd0;
    mem[101] = 32'd0;
    mem[102] = 32'd0;
    mem[103] = 32'd0;
    mem[104] = 32'd0;
    mem[105] = 32'd0;
    mem[106] = 32'd0;
    mem[107] = 32'd0;
    mem[108] = 32'd0;
    mem[109] = 32'd0;
    mem[110] = 32'd0;
    mem[111] = 32'd0;
    mem[112] = 32'd0;
    mem[113] = 32'd0;
    mem[114] = 32'd0;
    mem[115] = 32'd0;
    mem[116] = 32'd0;
    mem[117] = 32'd0;
    mem[118] = 32'd0;
    mem[119] = 32'd0;
    mem[120] = 32'd0;
    mem[121] = 32'd0;
    mem[122] = 32'd0;
    mem[123] = 32'd0;
    mem[124] = 32'd0;
    mem[125] = 32'd0;
    mem[126] = 32'd0;
    mem[127] = 32'd0;
    mem[128] = 32'd0;
    mem[129] = 32'd0;
    mem[130] = 32'd0;
    mem[131] = 32'd0;
    mem[132] = 32'd0;
    mem[133] = 32'd0;
    mem[134] = 32'd0;
    mem[135] = 32'd0;
    mem[136] = 32'd0;
    mem[137] = 32'd0;
    mem[138] = 32'd0;
    mem[139] = 32'd0;
    mem[140] = 32'd0;
    mem[141] = 32'd0;
    mem[142] = 32'd0;
    mem[143] = 32'd0;
    mem[144] = 32'd0;
    mem[145] = 32'd0;
    mem[146] = 32'd0;
    mem[147] = 32'd0;
    mem[148] = 32'd0;
    mem[149] = 32'd0;
    mem[150] = 32'd0;
    mem[151] = 32'd0;
    mem[152] = 32'd0;
    mem[153] = 32'd0;
    mem[154] = 32'd0;
    mem[155] = 32'd0;
    mem[156] = 32'd0;
    mem[157] = 32'd0;
    mem[158] = 32'd0;
    mem[159] = 32'd0;
    mem[160] = 32'd0;
    mem[161] = 32'd0;
    mem[162] = 32'd0;
    mem[163] = 32'd0;
    mem[164] = 32'd0;
    mem[165] = 32'd0;
    mem[166] = 32'd0;
    mem[167] = 32'd0;
    mem[168] = 32'd0;
    mem[169] = 32'd0;
    mem[170] = 32'd0;
    mem[171] = 32'd0;
    mem[172] = 32'd0;
    mem[173] = 32'd0;
    mem[174] = 32'd0;
    mem[175] = 32'd0;
    mem[176] = 32'd0;
    mem[177] = 32'd0;
    mem[178] = 32'd0;
    mem[179] = 32'd0;
    mem[180] = 32'd0;
    mem[181] = 32'd0;
    mem[182] = 32'd0;
    mem[183] = 32'd0;
    mem[184] = 32'd0;
    mem[185] = 32'd0;
    mem[186] = 32'd0;
    mem[187] = 32'd0;
    mem[188] = 32'd0;
    mem[189] = 32'd0;
    mem[190] = 32'd0;
    mem[191] = 32'd0;
    mem[192] = 32'd0;
    mem[193] = 32'd0;
    mem[194] = 32'd0;
    mem[195] = 32'd0;
    mem[196] = 32'd0;
    mem[197] = 32'd0;
    mem[198] = 32'd0;
    mem[199] = 32'd0;
    mem[200] = 32'd0;
    mem[201] = 32'd0;
    mem[202] = 32'd0;
    mem[203] = 32'd0;
    mem[204] = 32'd0;
    mem[205] = 32'd0;
    mem[206] = 32'd0;
    mem[207] = 32'd0;
    mem[208] = 32'd0;
    mem[209] = 32'd0;
    mem[210] = 32'd0;
    mem[211] = 32'd0;
    mem[212] = 32'd0;
    mem[213] = 32'd0;
    mem[214] = 32'd0;
    mem[215] = 32'd0;
    mem[216] = 32'd0;
    mem[217] = 32'd0;
    mem[218] = 32'd0;
    mem[219] = 32'd0;
    mem[220] = 32'd0;
    mem[221] = 32'd0;
    mem[222] = 32'd0;
    mem[223] = 32'd0;
    mem[224] = 32'd0;
    mem[225] = 32'd0;
    mem[226] = 32'd0;
    mem[227] = 32'd0;
    mem[228] = 32'd0;
    mem[229] = 32'd0;
    mem[230] = 32'd0;
    mem[231] = 32'd0;
    mem[232] = 32'd0;
    mem[233] = 32'd0;
    mem[234] = 32'd0;
    mem[235] = 32'd0;
    mem[236] = 32'd0;
    mem[237] = 32'd0;
    mem[238] = 32'd0;
    mem[239] = 32'd0;
    mem[240] = 32'd0;
    mem[241] = 32'd0;
    mem[242] = 32'd0;
    mem[243] = 32'd0;
    mem[244] = 32'd0;
    mem[245] = 32'd0;
    mem[246] = 32'd0;
    mem[247] = 32'd0;
    mem[248] = 32'd0;
    mem[249] = 32'd0;
    mem[250] = 32'd0;
    mem[251] = 32'd0;
    mem[252] = 32'd0;
    mem[253] = 32'd0;
    mem[254] = 32'd0;
    mem[255] = 32'd0;
    mem[256] = 32'd0;
    mem[257] = 32'd0;
    mem[258] = 32'd0;
    mem[259] = 32'd0;
    mem[260] = 32'd0;
    mem[261] = 32'd0;
    mem[262] = 32'd0;
    mem[263] = 32'd0;
    mem[264] = 32'd0;
    mem[265] = 32'd0;
    mem[266] = 32'd0;
    mem[267] = 32'd0;
    mem[268] = 32'd0;
    mem[269] = 32'd0;
    mem[270] = 32'd0;
    mem[271] = 32'd0;
    mem[272] = 32'd0;
    mem[273] = 32'd0;
    mem[274] = 32'd0;
    mem[275] = 32'd0;
    mem[276] = 32'd0;
    mem[277] = 32'd0;
    mem[278] = 32'd0;
    mem[279] = 32'd0;
    mem[280] = 32'd0;
    mem[281] = 32'd0;
    mem[282] = 32'd0;
    mem[283] = 32'd0;
    mem[284] = 32'd0;
    mem[285] = 32'd0;
    mem[286] = 32'd0;
    mem[287] = 32'd0;
    mem[288] = 32'd0;
    mem[289] = 32'd0;
    mem[290] = 32'd0;
    mem[291] = 32'd0;
    mem[292] = 32'd0;
    mem[293] = 32'd0;
    mem[294] = 32'd0;
    mem[295] = 32'd0;
    mem[296] = 32'd0;
    mem[297] = 32'd0;
    mem[298] = 32'd0;
    mem[299] = 32'd0;
    mem[300] = 32'd0;
    mem[301] = 32'd0;
    mem[302] = 32'd0;
    mem[303] = 32'd0;
    mem[304] = 32'd0;
    mem[305] = 32'd0;
    mem[306] = 32'd0;
    mem[307] = 32'd0;
    mem[308] = 32'd0;
    mem[309] = 32'd0;
    mem[310] = 32'd0;
    mem[311] = 32'd0;
    mem[312] = 32'd0;
    mem[313] = 32'd0;
    mem[314] = 32'd0;
    mem[315] = 32'd0;
    mem[316] = 32'd0;
    mem[317] = 32'd0;
    mem[318] = 32'd0;
    mem[319] = 32'd0;
    mem[320] = 32'd0;
    mem[321] = 32'd0;
    mem[322] = 32'd0;
    mem[323] = 32'd0;
    mem[324] = 32'd0;
    mem[325] = 32'd0;
    mem[326] = 32'd0;
    mem[327] = 32'd0;
    mem[328] = 32'd0;
    mem[329] = 32'd0;
    mem[330] = 32'd0;
    mem[331] = 32'd0;
    mem[332] = 32'd0;
    mem[333] = 32'd0;
    mem[334] = 32'd0;
    mem[335] = 32'd0;
    mem[336] = 32'd0;
    mem[337] = 32'd0;
    mem[338] = 32'd0;
    mem[339] = 32'd0;
    mem[340] = 32'd0;
    mem[341] = 32'd0;
    mem[342] = 32'd0;
    mem[343] = 32'd0;
    mem[344] = 32'd0;
    mem[345] = 32'd0;
    mem[346] = 32'd0;
    mem[347] = 32'd0;
    mem[348] = 32'd0;
    mem[349] = 32'd0;
    mem[350] = 32'd0;
    mem[351] = 32'd0;
    mem[352] = 32'd0;
    mem[353] = 32'd0;
    mem[354] = 32'd0;
    mem[355] = 32'd0;
    mem[356] = 32'd0;
    mem[357] = 32'd0;
    mem[358] = 32'd0;
    mem[359] = 32'd0;
    mem[360] = 32'd0;
    mem[361] = 32'd0;
    mem[362] = 32'd0;
    mem[363] = 32'd0;
    mem[364] = 32'd0;
    mem[365] = 32'd0;
    mem[366] = 32'd0;
    mem[367] = 32'd0;
    mem[368] = 32'd0;
    mem[369] = 32'd0;
    mem[370] = 32'd0;
    mem[371] = 32'd0;
    mem[372] = 32'd0;
    mem[373] = 32'd0;
    mem[374] = 32'd0;
    mem[375] = 32'd0;
    mem[376] = 32'd0;
    mem[377] = 32'd0;
    mem[378] = 32'd0;
    mem[379] = 32'd0;
    mem[380] = 32'd0;
    mem[381] = 32'd0;
    mem[382] = 32'd0;
    mem[383] = 32'd0;
    mem[384] = 32'd0;
    mem[385] = 32'd0;
    mem[386] = 32'd0;
    mem[387] = 32'd0;
    mem[388] = 32'd0;
    mem[389] = 32'd0;
    mem[390] = 32'd0;
    mem[391] = 32'd0;
    mem[392] = 32'd0;
    mem[393] = 32'd0;
    mem[394] = 32'd0;
    mem[395] = 32'd0;
    mem[396] = 32'd0;
    mem[397] = 32'd0;
    mem[398] = 32'd0;
    mem[399] = 32'd0;
    mem[400] = 32'd0;
    mem[401] = 32'd0;
    mem[402] = 32'd0;
    mem[403] = 32'd0;
    mem[404] = 32'd0;
    mem[405] = 32'd0;
    mem[406] = 32'd0;
    mem[407] = 32'd0;
    mem[408] = 32'd0;
    mem[409] = 32'd0;
    mem[410] = 32'd0;
    mem[411] = 32'd0;
    mem[412] = 32'd0;
    mem[413] = 32'd0;
    mem[414] = 32'd0;
    mem[415] = 32'd0;
    mem[416] = 32'd0;
    mem[417] = 32'd0;
    mem[418] = 32'd0;
    mem[419] = 32'd0;
    mem[420] = 32'd0;
    mem[421] = 32'd0;
    mem[422] = 32'd0;
    mem[423] = 32'd0;
    mem[424] = 32'd0;
    mem[425] = 32'd0;
    mem[426] = 32'd0;
    mem[427] = 32'd0;
    mem[428] = 32'd0;
    mem[429] = 32'd0;
    mem[430] = 32'd0;
    mem[431] = 32'd0;
    mem[432] = 32'd0;
    mem[433] = 32'd0;
    mem[434] = 32'd0;
    mem[435] = 32'd0;
    mem[436] = 32'd0;
    mem[437] = 32'd0;
    mem[438] = 32'd0;
    mem[439] = 32'd0;
    mem[440] = 32'd0;
    mem[441] = 32'd0;
    mem[442] = 32'd0;
    mem[443] = 32'd0;
    mem[444] = 32'd0;
    mem[445] = 32'd0;
    mem[446] = 32'd0;
    mem[447] = 32'd0;
    mem[448] = 32'd0;
    mem[449] = 32'd0;
    mem[450] = 32'd0;
    mem[451] = 32'd0;
    mem[452] = 32'd0;
    mem[453] = 32'd0;
    mem[454] = 32'd0;
    mem[455] = 32'd0;
    mem[456] = 32'd0;
    mem[457] = 32'd0;
    mem[458] = 32'd0;
    mem[459] = 32'd0;
    mem[460] = 32'd0;
    mem[461] = 32'd0;
    mem[462] = 32'd0;
    mem[463] = 32'd0;
    mem[464] = 32'd0;
    mem[465] = 32'd0;
    mem[466] = 32'd0;
    mem[467] = 32'd0;
    mem[468] = 32'd0;
    mem[469] = 32'd0;
    mem[470] = 32'd0;
    mem[471] = 32'd0;
    mem[472] = 32'd0;
    mem[473] = 32'd0;
    mem[474] = 32'd0;
    mem[475] = 32'd0;
    mem[476] = 32'd0;
    mem[477] = 32'd0;
    mem[478] = 32'd0;
    mem[479] = 32'd0;
    mem[480] = 32'd0;
    mem[481] = 32'd0;
    mem[482] = 32'd0;
    mem[483] = 32'd0;
    mem[484] = 32'd0;
    mem[485] = 32'd0;
    mem[486] = 32'd0;
    mem[487] = 32'd0;
    mem[488] = 32'd0;
    mem[489] = 32'd0;
    mem[490] = 32'd0;
    mem[491] = 32'd0;
    mem[492] = 32'd0;
    mem[493] = 32'd0;
    mem[494] = 32'd0;
    mem[495] = 32'd0;
    mem[496] = 32'd0;
    mem[497] = 32'd0;
    mem[498] = 32'd0;
    mem[499] = 32'd0;
    mem[500] = 32'd0;
    mem[501] = 32'd0;
    mem[502] = 32'd0;
    mem[503] = 32'd0;
    mem[504] = 32'd0;
    mem[505] = 32'd0;
    mem[506] = 32'd0;
    mem[507] = 32'd0;
    mem[508] = 32'd0;
    mem[509] = 32'd0;
    mem[510] = 32'd0;
    mem[511] = 32'd0;
  end
  always @(posedge clk) begin
    if (mem_w_en)
      mem[mem_w_addr] <= mem_w_data;
  end
  reg [31:0] _0_;
  always @(posedge clk) begin
    _0_ <= mem[mem_r_addr];
  end
  assign mem_r_data = _0_;
  assign r_data = mem_r_data;
  assign mem_r_addr = r_addr;
  assign mem_r_en = 1'h1;
  assign mem_w_data = w_data;
  assign mem_w_addr = w_addr;
  assign mem_w_en = w_en;
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.store_output_bias_inc" *)
(* generator = "Amaranth" *)
module store_output_bias_inc(clk, restart, limit, r_addr, next, rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$51  = 0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:141" *)
  wire [9:0] \$1 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:141" *)
  wire [9:0] \$2 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:141" *)
  wire [9:0] \$4 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:141" *)
  wire [9:0] \$5 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:141" *)
  wire \$7 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:132" *)
  reg [8:0] last_addr = 9'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:132" *)
  reg [8:0] \last_addr$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:125" *)
  input [8:0] limit;
  wire [8:0] limit;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:124" *)
  input next;
  wire next;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:126" *)
  output [8:0] r_addr;
  reg [8:0] r_addr;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:123" *)
  input restart;
  wire restart;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  always @(posedge clk)
    last_addr <= \last_addr$next ;
  assign \$2  = last_addr + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:141" *) 1'h1;
  assign \$5  = limit - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:141" *) 1'h1;
  assign \$7  = last_addr >= (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:141" *) \$5 ;
  assign \$4  = \$7  ? (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:141" *) 10'h000 : \$2 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$51 ) begin end
    \last_addr$next  = r_addr;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \last_addr$next  = 9'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$51 ) begin end
    r_addr = last_addr;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:137" *)
    casez ({ next, restart })
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:137" */
      2'b?1:
          r_addr = 9'h000;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:139" */
      2'b1?:
          r_addr = \$4 [8:0];
    endcase
  end
  assign \$1  = \$4 ;
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.store_output_bias_set" *)
(* generator = "Amaranth" *)
module store_output_bias_set(clk, restart, count, \$signal , w_addr, w_data, in0, start, done, rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$52  = 0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:88" *)
  wire \$1 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:88" *)
  wire \$3 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:97" *)
  wire [10:0] \$5 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:97" *)
  wire [10:0] \$6 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:61" *)
  output \$signal ;
  reg \$signal ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:65" *)
  output [9:0] count;
  reg [9:0] count = 10'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:65" *)
  reg [9:0] \count$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:46" *)
  output done;
  wire done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:47" *)
  input [31:0] in0;
  wire [31:0] in0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:64" *)
  input restart;
  wire restart;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:45" *)
  input start;
  wire start;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:66" *)
  wire updated;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:62" *)
  output [8:0] w_addr;
  wire [8:0] w_addr;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:63" *)
  output [31:0] w_data;
  reg [31:0] w_data;
  assign \$3  = \$1  | (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:88" *) restart;
  assign \$6  = count + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:97" *) 1'h1;
  always @(posedge clk)
    count <= \count$next ;
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$52 ) begin end
    \count$next  = count;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:90" *)
    casez ({ start, restart })
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:90" */
      2'b?1:
          \count$next  = 10'h000;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:92" */
      2'b1?:
          \count$next  = \$6 [9:0];
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \count$next  = 10'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$52 ) begin end
    \$signal  = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:90" *)
    casez ({ start, restart })
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:90" */
      2'b?1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:92" */
      2'b1?:
          \$signal  = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$52 ) begin end
    w_data = 32'd0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:90" *)
    casez ({ start, restart })
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:90" */
      2'b?1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:92" */
      2'b1?:
          w_data = in0;
    endcase
  end
  assign \$5  = \$6 ;
  assign updated = \$3 ;
  assign w_addr = count[8:0];
  assign done = 1'h1;
  assign \$1  = \$signal ;
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.store_output_multiplier_dp" *)
(* generator = "Amaranth" *)
module store_output_multiplier_dp(r_addr, w_en, w_addr, w_data, r_data, clk);
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:215" *)
  wire [8:0] mem_r_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:215" *)
  wire [31:0] mem_r_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:215" *)
  wire mem_r_en;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:214" *)
  wire [8:0] mem_w_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:214" *)
  wire [31:0] mem_w_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:214" *)
  wire mem_w_en;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:209" *)
  input [8:0] r_addr;
  wire [8:0] r_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:210" *)
  output [31:0] r_data;
  wire [31:0] r_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:207" *)
  input [8:0] w_addr;
  wire [8:0] w_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:208" *)
  input [31:0] w_data;
  wire [31:0] w_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:206" *)
  input w_en;
  wire w_en;
  reg [31:0] mem [511:0];
  initial begin
    mem[0] = 32'd0;
    mem[1] = 32'd0;
    mem[2] = 32'd0;
    mem[3] = 32'd0;
    mem[4] = 32'd0;
    mem[5] = 32'd0;
    mem[6] = 32'd0;
    mem[7] = 32'd0;
    mem[8] = 32'd0;
    mem[9] = 32'd0;
    mem[10] = 32'd0;
    mem[11] = 32'd0;
    mem[12] = 32'd0;
    mem[13] = 32'd0;
    mem[14] = 32'd0;
    mem[15] = 32'd0;
    mem[16] = 32'd0;
    mem[17] = 32'd0;
    mem[18] = 32'd0;
    mem[19] = 32'd0;
    mem[20] = 32'd0;
    mem[21] = 32'd0;
    mem[22] = 32'd0;
    mem[23] = 32'd0;
    mem[24] = 32'd0;
    mem[25] = 32'd0;
    mem[26] = 32'd0;
    mem[27] = 32'd0;
    mem[28] = 32'd0;
    mem[29] = 32'd0;
    mem[30] = 32'd0;
    mem[31] = 32'd0;
    mem[32] = 32'd0;
    mem[33] = 32'd0;
    mem[34] = 32'd0;
    mem[35] = 32'd0;
    mem[36] = 32'd0;
    mem[37] = 32'd0;
    mem[38] = 32'd0;
    mem[39] = 32'd0;
    mem[40] = 32'd0;
    mem[41] = 32'd0;
    mem[42] = 32'd0;
    mem[43] = 32'd0;
    mem[44] = 32'd0;
    mem[45] = 32'd0;
    mem[46] = 32'd0;
    mem[47] = 32'd0;
    mem[48] = 32'd0;
    mem[49] = 32'd0;
    mem[50] = 32'd0;
    mem[51] = 32'd0;
    mem[52] = 32'd0;
    mem[53] = 32'd0;
    mem[54] = 32'd0;
    mem[55] = 32'd0;
    mem[56] = 32'd0;
    mem[57] = 32'd0;
    mem[58] = 32'd0;
    mem[59] = 32'd0;
    mem[60] = 32'd0;
    mem[61] = 32'd0;
    mem[62] = 32'd0;
    mem[63] = 32'd0;
    mem[64] = 32'd0;
    mem[65] = 32'd0;
    mem[66] = 32'd0;
    mem[67] = 32'd0;
    mem[68] = 32'd0;
    mem[69] = 32'd0;
    mem[70] = 32'd0;
    mem[71] = 32'd0;
    mem[72] = 32'd0;
    mem[73] = 32'd0;
    mem[74] = 32'd0;
    mem[75] = 32'd0;
    mem[76] = 32'd0;
    mem[77] = 32'd0;
    mem[78] = 32'd0;
    mem[79] = 32'd0;
    mem[80] = 32'd0;
    mem[81] = 32'd0;
    mem[82] = 32'd0;
    mem[83] = 32'd0;
    mem[84] = 32'd0;
    mem[85] = 32'd0;
    mem[86] = 32'd0;
    mem[87] = 32'd0;
    mem[88] = 32'd0;
    mem[89] = 32'd0;
    mem[90] = 32'd0;
    mem[91] = 32'd0;
    mem[92] = 32'd0;
    mem[93] = 32'd0;
    mem[94] = 32'd0;
    mem[95] = 32'd0;
    mem[96] = 32'd0;
    mem[97] = 32'd0;
    mem[98] = 32'd0;
    mem[99] = 32'd0;
    mem[100] = 32'd0;
    mem[101] = 32'd0;
    mem[102] = 32'd0;
    mem[103] = 32'd0;
    mem[104] = 32'd0;
    mem[105] = 32'd0;
    mem[106] = 32'd0;
    mem[107] = 32'd0;
    mem[108] = 32'd0;
    mem[109] = 32'd0;
    mem[110] = 32'd0;
    mem[111] = 32'd0;
    mem[112] = 32'd0;
    mem[113] = 32'd0;
    mem[114] = 32'd0;
    mem[115] = 32'd0;
    mem[116] = 32'd0;
    mem[117] = 32'd0;
    mem[118] = 32'd0;
    mem[119] = 32'd0;
    mem[120] = 32'd0;
    mem[121] = 32'd0;
    mem[122] = 32'd0;
    mem[123] = 32'd0;
    mem[124] = 32'd0;
    mem[125] = 32'd0;
    mem[126] = 32'd0;
    mem[127] = 32'd0;
    mem[128] = 32'd0;
    mem[129] = 32'd0;
    mem[130] = 32'd0;
    mem[131] = 32'd0;
    mem[132] = 32'd0;
    mem[133] = 32'd0;
    mem[134] = 32'd0;
    mem[135] = 32'd0;
    mem[136] = 32'd0;
    mem[137] = 32'd0;
    mem[138] = 32'd0;
    mem[139] = 32'd0;
    mem[140] = 32'd0;
    mem[141] = 32'd0;
    mem[142] = 32'd0;
    mem[143] = 32'd0;
    mem[144] = 32'd0;
    mem[145] = 32'd0;
    mem[146] = 32'd0;
    mem[147] = 32'd0;
    mem[148] = 32'd0;
    mem[149] = 32'd0;
    mem[150] = 32'd0;
    mem[151] = 32'd0;
    mem[152] = 32'd0;
    mem[153] = 32'd0;
    mem[154] = 32'd0;
    mem[155] = 32'd0;
    mem[156] = 32'd0;
    mem[157] = 32'd0;
    mem[158] = 32'd0;
    mem[159] = 32'd0;
    mem[160] = 32'd0;
    mem[161] = 32'd0;
    mem[162] = 32'd0;
    mem[163] = 32'd0;
    mem[164] = 32'd0;
    mem[165] = 32'd0;
    mem[166] = 32'd0;
    mem[167] = 32'd0;
    mem[168] = 32'd0;
    mem[169] = 32'd0;
    mem[170] = 32'd0;
    mem[171] = 32'd0;
    mem[172] = 32'd0;
    mem[173] = 32'd0;
    mem[174] = 32'd0;
    mem[175] = 32'd0;
    mem[176] = 32'd0;
    mem[177] = 32'd0;
    mem[178] = 32'd0;
    mem[179] = 32'd0;
    mem[180] = 32'd0;
    mem[181] = 32'd0;
    mem[182] = 32'd0;
    mem[183] = 32'd0;
    mem[184] = 32'd0;
    mem[185] = 32'd0;
    mem[186] = 32'd0;
    mem[187] = 32'd0;
    mem[188] = 32'd0;
    mem[189] = 32'd0;
    mem[190] = 32'd0;
    mem[191] = 32'd0;
    mem[192] = 32'd0;
    mem[193] = 32'd0;
    mem[194] = 32'd0;
    mem[195] = 32'd0;
    mem[196] = 32'd0;
    mem[197] = 32'd0;
    mem[198] = 32'd0;
    mem[199] = 32'd0;
    mem[200] = 32'd0;
    mem[201] = 32'd0;
    mem[202] = 32'd0;
    mem[203] = 32'd0;
    mem[204] = 32'd0;
    mem[205] = 32'd0;
    mem[206] = 32'd0;
    mem[207] = 32'd0;
    mem[208] = 32'd0;
    mem[209] = 32'd0;
    mem[210] = 32'd0;
    mem[211] = 32'd0;
    mem[212] = 32'd0;
    mem[213] = 32'd0;
    mem[214] = 32'd0;
    mem[215] = 32'd0;
    mem[216] = 32'd0;
    mem[217] = 32'd0;
    mem[218] = 32'd0;
    mem[219] = 32'd0;
    mem[220] = 32'd0;
    mem[221] = 32'd0;
    mem[222] = 32'd0;
    mem[223] = 32'd0;
    mem[224] = 32'd0;
    mem[225] = 32'd0;
    mem[226] = 32'd0;
    mem[227] = 32'd0;
    mem[228] = 32'd0;
    mem[229] = 32'd0;
    mem[230] = 32'd0;
    mem[231] = 32'd0;
    mem[232] = 32'd0;
    mem[233] = 32'd0;
    mem[234] = 32'd0;
    mem[235] = 32'd0;
    mem[236] = 32'd0;
    mem[237] = 32'd0;
    mem[238] = 32'd0;
    mem[239] = 32'd0;
    mem[240] = 32'd0;
    mem[241] = 32'd0;
    mem[242] = 32'd0;
    mem[243] = 32'd0;
    mem[244] = 32'd0;
    mem[245] = 32'd0;
    mem[246] = 32'd0;
    mem[247] = 32'd0;
    mem[248] = 32'd0;
    mem[249] = 32'd0;
    mem[250] = 32'd0;
    mem[251] = 32'd0;
    mem[252] = 32'd0;
    mem[253] = 32'd0;
    mem[254] = 32'd0;
    mem[255] = 32'd0;
    mem[256] = 32'd0;
    mem[257] = 32'd0;
    mem[258] = 32'd0;
    mem[259] = 32'd0;
    mem[260] = 32'd0;
    mem[261] = 32'd0;
    mem[262] = 32'd0;
    mem[263] = 32'd0;
    mem[264] = 32'd0;
    mem[265] = 32'd0;
    mem[266] = 32'd0;
    mem[267] = 32'd0;
    mem[268] = 32'd0;
    mem[269] = 32'd0;
    mem[270] = 32'd0;
    mem[271] = 32'd0;
    mem[272] = 32'd0;
    mem[273] = 32'd0;
    mem[274] = 32'd0;
    mem[275] = 32'd0;
    mem[276] = 32'd0;
    mem[277] = 32'd0;
    mem[278] = 32'd0;
    mem[279] = 32'd0;
    mem[280] = 32'd0;
    mem[281] = 32'd0;
    mem[282] = 32'd0;
    mem[283] = 32'd0;
    mem[284] = 32'd0;
    mem[285] = 32'd0;
    mem[286] = 32'd0;
    mem[287] = 32'd0;
    mem[288] = 32'd0;
    mem[289] = 32'd0;
    mem[290] = 32'd0;
    mem[291] = 32'd0;
    mem[292] = 32'd0;
    mem[293] = 32'd0;
    mem[294] = 32'd0;
    mem[295] = 32'd0;
    mem[296] = 32'd0;
    mem[297] = 32'd0;
    mem[298] = 32'd0;
    mem[299] = 32'd0;
    mem[300] = 32'd0;
    mem[301] = 32'd0;
    mem[302] = 32'd0;
    mem[303] = 32'd0;
    mem[304] = 32'd0;
    mem[305] = 32'd0;
    mem[306] = 32'd0;
    mem[307] = 32'd0;
    mem[308] = 32'd0;
    mem[309] = 32'd0;
    mem[310] = 32'd0;
    mem[311] = 32'd0;
    mem[312] = 32'd0;
    mem[313] = 32'd0;
    mem[314] = 32'd0;
    mem[315] = 32'd0;
    mem[316] = 32'd0;
    mem[317] = 32'd0;
    mem[318] = 32'd0;
    mem[319] = 32'd0;
    mem[320] = 32'd0;
    mem[321] = 32'd0;
    mem[322] = 32'd0;
    mem[323] = 32'd0;
    mem[324] = 32'd0;
    mem[325] = 32'd0;
    mem[326] = 32'd0;
    mem[327] = 32'd0;
    mem[328] = 32'd0;
    mem[329] = 32'd0;
    mem[330] = 32'd0;
    mem[331] = 32'd0;
    mem[332] = 32'd0;
    mem[333] = 32'd0;
    mem[334] = 32'd0;
    mem[335] = 32'd0;
    mem[336] = 32'd0;
    mem[337] = 32'd0;
    mem[338] = 32'd0;
    mem[339] = 32'd0;
    mem[340] = 32'd0;
    mem[341] = 32'd0;
    mem[342] = 32'd0;
    mem[343] = 32'd0;
    mem[344] = 32'd0;
    mem[345] = 32'd0;
    mem[346] = 32'd0;
    mem[347] = 32'd0;
    mem[348] = 32'd0;
    mem[349] = 32'd0;
    mem[350] = 32'd0;
    mem[351] = 32'd0;
    mem[352] = 32'd0;
    mem[353] = 32'd0;
    mem[354] = 32'd0;
    mem[355] = 32'd0;
    mem[356] = 32'd0;
    mem[357] = 32'd0;
    mem[358] = 32'd0;
    mem[359] = 32'd0;
    mem[360] = 32'd0;
    mem[361] = 32'd0;
    mem[362] = 32'd0;
    mem[363] = 32'd0;
    mem[364] = 32'd0;
    mem[365] = 32'd0;
    mem[366] = 32'd0;
    mem[367] = 32'd0;
    mem[368] = 32'd0;
    mem[369] = 32'd0;
    mem[370] = 32'd0;
    mem[371] = 32'd0;
    mem[372] = 32'd0;
    mem[373] = 32'd0;
    mem[374] = 32'd0;
    mem[375] = 32'd0;
    mem[376] = 32'd0;
    mem[377] = 32'd0;
    mem[378] = 32'd0;
    mem[379] = 32'd0;
    mem[380] = 32'd0;
    mem[381] = 32'd0;
    mem[382] = 32'd0;
    mem[383] = 32'd0;
    mem[384] = 32'd0;
    mem[385] = 32'd0;
    mem[386] = 32'd0;
    mem[387] = 32'd0;
    mem[388] = 32'd0;
    mem[389] = 32'd0;
    mem[390] = 32'd0;
    mem[391] = 32'd0;
    mem[392] = 32'd0;
    mem[393] = 32'd0;
    mem[394] = 32'd0;
    mem[395] = 32'd0;
    mem[396] = 32'd0;
    mem[397] = 32'd0;
    mem[398] = 32'd0;
    mem[399] = 32'd0;
    mem[400] = 32'd0;
    mem[401] = 32'd0;
    mem[402] = 32'd0;
    mem[403] = 32'd0;
    mem[404] = 32'd0;
    mem[405] = 32'd0;
    mem[406] = 32'd0;
    mem[407] = 32'd0;
    mem[408] = 32'd0;
    mem[409] = 32'd0;
    mem[410] = 32'd0;
    mem[411] = 32'd0;
    mem[412] = 32'd0;
    mem[413] = 32'd0;
    mem[414] = 32'd0;
    mem[415] = 32'd0;
    mem[416] = 32'd0;
    mem[417] = 32'd0;
    mem[418] = 32'd0;
    mem[419] = 32'd0;
    mem[420] = 32'd0;
    mem[421] = 32'd0;
    mem[422] = 32'd0;
    mem[423] = 32'd0;
    mem[424] = 32'd0;
    mem[425] = 32'd0;
    mem[426] = 32'd0;
    mem[427] = 32'd0;
    mem[428] = 32'd0;
    mem[429] = 32'd0;
    mem[430] = 32'd0;
    mem[431] = 32'd0;
    mem[432] = 32'd0;
    mem[433] = 32'd0;
    mem[434] = 32'd0;
    mem[435] = 32'd0;
    mem[436] = 32'd0;
    mem[437] = 32'd0;
    mem[438] = 32'd0;
    mem[439] = 32'd0;
    mem[440] = 32'd0;
    mem[441] = 32'd0;
    mem[442] = 32'd0;
    mem[443] = 32'd0;
    mem[444] = 32'd0;
    mem[445] = 32'd0;
    mem[446] = 32'd0;
    mem[447] = 32'd0;
    mem[448] = 32'd0;
    mem[449] = 32'd0;
    mem[450] = 32'd0;
    mem[451] = 32'd0;
    mem[452] = 32'd0;
    mem[453] = 32'd0;
    mem[454] = 32'd0;
    mem[455] = 32'd0;
    mem[456] = 32'd0;
    mem[457] = 32'd0;
    mem[458] = 32'd0;
    mem[459] = 32'd0;
    mem[460] = 32'd0;
    mem[461] = 32'd0;
    mem[462] = 32'd0;
    mem[463] = 32'd0;
    mem[464] = 32'd0;
    mem[465] = 32'd0;
    mem[466] = 32'd0;
    mem[467] = 32'd0;
    mem[468] = 32'd0;
    mem[469] = 32'd0;
    mem[470] = 32'd0;
    mem[471] = 32'd0;
    mem[472] = 32'd0;
    mem[473] = 32'd0;
    mem[474] = 32'd0;
    mem[475] = 32'd0;
    mem[476] = 32'd0;
    mem[477] = 32'd0;
    mem[478] = 32'd0;
    mem[479] = 32'd0;
    mem[480] = 32'd0;
    mem[481] = 32'd0;
    mem[482] = 32'd0;
    mem[483] = 32'd0;
    mem[484] = 32'd0;
    mem[485] = 32'd0;
    mem[486] = 32'd0;
    mem[487] = 32'd0;
    mem[488] = 32'd0;
    mem[489] = 32'd0;
    mem[490] = 32'd0;
    mem[491] = 32'd0;
    mem[492] = 32'd0;
    mem[493] = 32'd0;
    mem[494] = 32'd0;
    mem[495] = 32'd0;
    mem[496] = 32'd0;
    mem[497] = 32'd0;
    mem[498] = 32'd0;
    mem[499] = 32'd0;
    mem[500] = 32'd0;
    mem[501] = 32'd0;
    mem[502] = 32'd0;
    mem[503] = 32'd0;
    mem[504] = 32'd0;
    mem[505] = 32'd0;
    mem[506] = 32'd0;
    mem[507] = 32'd0;
    mem[508] = 32'd0;
    mem[509] = 32'd0;
    mem[510] = 32'd0;
    mem[511] = 32'd0;
  end
  always @(posedge clk) begin
    if (mem_w_en)
      mem[mem_w_addr] <= mem_w_data;
  end
  reg [31:0] _0_;
  always @(posedge clk) begin
    _0_ <= mem[mem_r_addr];
  end
  assign mem_r_data = _0_;
  assign r_data = mem_r_data;
  assign mem_r_addr = r_addr;
  assign mem_r_en = 1'h1;
  assign mem_w_data = w_data;
  assign mem_w_addr = w_addr;
  assign mem_w_en = w_en;
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.store_output_multiplier_inc" *)
(* generator = "Amaranth" *)
module store_output_multiplier_inc(clk, restart, limit, r_addr, next, rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$53  = 0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:141" *)
  wire [9:0] \$1 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:141" *)
  wire [9:0] \$2 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:141" *)
  wire [9:0] \$4 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:141" *)
  wire [9:0] \$5 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:141" *)
  wire \$7 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:132" *)
  reg [8:0] last_addr = 9'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:132" *)
  reg [8:0] \last_addr$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:125" *)
  input [8:0] limit;
  wire [8:0] limit;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:124" *)
  input next;
  wire next;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:126" *)
  output [8:0] r_addr;
  reg [8:0] r_addr;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:123" *)
  input restart;
  wire restart;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  always @(posedge clk)
    last_addr <= \last_addr$next ;
  assign \$2  = last_addr + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:141" *) 1'h1;
  assign \$5  = limit - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:141" *) 1'h1;
  assign \$7  = last_addr >= (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:141" *) \$5 ;
  assign \$4  = \$7  ? (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:141" *) 10'h000 : \$2 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$53 ) begin end
    \last_addr$next  = r_addr;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \last_addr$next  = 9'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$53 ) begin end
    r_addr = last_addr;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:137" *)
    casez ({ next, restart })
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:137" */
      2'b?1:
          r_addr = 9'h000;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:139" */
      2'b1?:
          r_addr = \$4 [8:0];
    endcase
  end
  assign \$1  = \$4 ;
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.store_output_multiplier_set" *)
(* generator = "Amaranth" *)
module store_output_multiplier_set(clk, restart, count, \$signal , w_addr, w_data, in0, start, done, rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$54  = 0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:88" *)
  wire \$1 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:88" *)
  wire \$3 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:97" *)
  wire [10:0] \$5 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:97" *)
  wire [10:0] \$6 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:61" *)
  output \$signal ;
  reg \$signal ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:65" *)
  output [9:0] count;
  reg [9:0] count = 10'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:65" *)
  reg [9:0] \count$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:46" *)
  output done;
  wire done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:47" *)
  input [31:0] in0;
  wire [31:0] in0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:64" *)
  input restart;
  wire restart;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:45" *)
  input start;
  wire start;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:66" *)
  wire updated;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:62" *)
  output [8:0] w_addr;
  wire [8:0] w_addr;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:63" *)
  output [31:0] w_data;
  reg [31:0] w_data;
  assign \$3  = \$1  | (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:88" *) restart;
  assign \$6  = count + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:97" *) 1'h1;
  always @(posedge clk)
    count <= \count$next ;
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$54 ) begin end
    \count$next  = count;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:90" *)
    casez ({ start, restart })
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:90" */
      2'b?1:
          \count$next  = 10'h000;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:92" */
      2'b1?:
          \count$next  = \$6 [9:0];
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \count$next  = 10'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$54 ) begin end
    \$signal  = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:90" *)
    casez ({ start, restart })
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:90" */
      2'b?1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:92" */
      2'b1?:
          \$signal  = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$54 ) begin end
    w_data = 32'd0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:90" *)
    casez ({ start, restart })
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:90" */
      2'b?1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:92" */
      2'b1?:
          w_data = in0;
    endcase
  end
  assign \$5  = \$6 ;
  assign updated = \$3 ;
  assign w_addr = count[8:0];
  assign done = 1'h1;
  assign \$1  = \$signal ;
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.store_output_shift_dp" *)
(* generator = "Amaranth" *)
module store_output_shift_dp(r_addr, w_en, w_addr, w_data, r_data, clk);
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:215" *)
  wire [8:0] mem_r_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:215" *)
  wire [31:0] mem_r_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:215" *)
  wire mem_r_en;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:214" *)
  wire [8:0] mem_w_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:214" *)
  wire [31:0] mem_w_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:214" *)
  wire mem_w_en;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:209" *)
  input [8:0] r_addr;
  wire [8:0] r_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:210" *)
  output [31:0] r_data;
  wire [31:0] r_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:207" *)
  input [8:0] w_addr;
  wire [8:0] w_addr;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:208" *)
  input [31:0] w_data;
  wire [31:0] w_data;
  (* src = "/home/cx/CFU-Playground/python/amaranth_cfu/util.py:206" *)
  input w_en;
  wire w_en;
  reg [31:0] mem [511:0];
  initial begin
    mem[0] = 32'd0;
    mem[1] = 32'd0;
    mem[2] = 32'd0;
    mem[3] = 32'd0;
    mem[4] = 32'd0;
    mem[5] = 32'd0;
    mem[6] = 32'd0;
    mem[7] = 32'd0;
    mem[8] = 32'd0;
    mem[9] = 32'd0;
    mem[10] = 32'd0;
    mem[11] = 32'd0;
    mem[12] = 32'd0;
    mem[13] = 32'd0;
    mem[14] = 32'd0;
    mem[15] = 32'd0;
    mem[16] = 32'd0;
    mem[17] = 32'd0;
    mem[18] = 32'd0;
    mem[19] = 32'd0;
    mem[20] = 32'd0;
    mem[21] = 32'd0;
    mem[22] = 32'd0;
    mem[23] = 32'd0;
    mem[24] = 32'd0;
    mem[25] = 32'd0;
    mem[26] = 32'd0;
    mem[27] = 32'd0;
    mem[28] = 32'd0;
    mem[29] = 32'd0;
    mem[30] = 32'd0;
    mem[31] = 32'd0;
    mem[32] = 32'd0;
    mem[33] = 32'd0;
    mem[34] = 32'd0;
    mem[35] = 32'd0;
    mem[36] = 32'd0;
    mem[37] = 32'd0;
    mem[38] = 32'd0;
    mem[39] = 32'd0;
    mem[40] = 32'd0;
    mem[41] = 32'd0;
    mem[42] = 32'd0;
    mem[43] = 32'd0;
    mem[44] = 32'd0;
    mem[45] = 32'd0;
    mem[46] = 32'd0;
    mem[47] = 32'd0;
    mem[48] = 32'd0;
    mem[49] = 32'd0;
    mem[50] = 32'd0;
    mem[51] = 32'd0;
    mem[52] = 32'd0;
    mem[53] = 32'd0;
    mem[54] = 32'd0;
    mem[55] = 32'd0;
    mem[56] = 32'd0;
    mem[57] = 32'd0;
    mem[58] = 32'd0;
    mem[59] = 32'd0;
    mem[60] = 32'd0;
    mem[61] = 32'd0;
    mem[62] = 32'd0;
    mem[63] = 32'd0;
    mem[64] = 32'd0;
    mem[65] = 32'd0;
    mem[66] = 32'd0;
    mem[67] = 32'd0;
    mem[68] = 32'd0;
    mem[69] = 32'd0;
    mem[70] = 32'd0;
    mem[71] = 32'd0;
    mem[72] = 32'd0;
    mem[73] = 32'd0;
    mem[74] = 32'd0;
    mem[75] = 32'd0;
    mem[76] = 32'd0;
    mem[77] = 32'd0;
    mem[78] = 32'd0;
    mem[79] = 32'd0;
    mem[80] = 32'd0;
    mem[81] = 32'd0;
    mem[82] = 32'd0;
    mem[83] = 32'd0;
    mem[84] = 32'd0;
    mem[85] = 32'd0;
    mem[86] = 32'd0;
    mem[87] = 32'd0;
    mem[88] = 32'd0;
    mem[89] = 32'd0;
    mem[90] = 32'd0;
    mem[91] = 32'd0;
    mem[92] = 32'd0;
    mem[93] = 32'd0;
    mem[94] = 32'd0;
    mem[95] = 32'd0;
    mem[96] = 32'd0;
    mem[97] = 32'd0;
    mem[98] = 32'd0;
    mem[99] = 32'd0;
    mem[100] = 32'd0;
    mem[101] = 32'd0;
    mem[102] = 32'd0;
    mem[103] = 32'd0;
    mem[104] = 32'd0;
    mem[105] = 32'd0;
    mem[106] = 32'd0;
    mem[107] = 32'd0;
    mem[108] = 32'd0;
    mem[109] = 32'd0;
    mem[110] = 32'd0;
    mem[111] = 32'd0;
    mem[112] = 32'd0;
    mem[113] = 32'd0;
    mem[114] = 32'd0;
    mem[115] = 32'd0;
    mem[116] = 32'd0;
    mem[117] = 32'd0;
    mem[118] = 32'd0;
    mem[119] = 32'd0;
    mem[120] = 32'd0;
    mem[121] = 32'd0;
    mem[122] = 32'd0;
    mem[123] = 32'd0;
    mem[124] = 32'd0;
    mem[125] = 32'd0;
    mem[126] = 32'd0;
    mem[127] = 32'd0;
    mem[128] = 32'd0;
    mem[129] = 32'd0;
    mem[130] = 32'd0;
    mem[131] = 32'd0;
    mem[132] = 32'd0;
    mem[133] = 32'd0;
    mem[134] = 32'd0;
    mem[135] = 32'd0;
    mem[136] = 32'd0;
    mem[137] = 32'd0;
    mem[138] = 32'd0;
    mem[139] = 32'd0;
    mem[140] = 32'd0;
    mem[141] = 32'd0;
    mem[142] = 32'd0;
    mem[143] = 32'd0;
    mem[144] = 32'd0;
    mem[145] = 32'd0;
    mem[146] = 32'd0;
    mem[147] = 32'd0;
    mem[148] = 32'd0;
    mem[149] = 32'd0;
    mem[150] = 32'd0;
    mem[151] = 32'd0;
    mem[152] = 32'd0;
    mem[153] = 32'd0;
    mem[154] = 32'd0;
    mem[155] = 32'd0;
    mem[156] = 32'd0;
    mem[157] = 32'd0;
    mem[158] = 32'd0;
    mem[159] = 32'd0;
    mem[160] = 32'd0;
    mem[161] = 32'd0;
    mem[162] = 32'd0;
    mem[163] = 32'd0;
    mem[164] = 32'd0;
    mem[165] = 32'd0;
    mem[166] = 32'd0;
    mem[167] = 32'd0;
    mem[168] = 32'd0;
    mem[169] = 32'd0;
    mem[170] = 32'd0;
    mem[171] = 32'd0;
    mem[172] = 32'd0;
    mem[173] = 32'd0;
    mem[174] = 32'd0;
    mem[175] = 32'd0;
    mem[176] = 32'd0;
    mem[177] = 32'd0;
    mem[178] = 32'd0;
    mem[179] = 32'd0;
    mem[180] = 32'd0;
    mem[181] = 32'd0;
    mem[182] = 32'd0;
    mem[183] = 32'd0;
    mem[184] = 32'd0;
    mem[185] = 32'd0;
    mem[186] = 32'd0;
    mem[187] = 32'd0;
    mem[188] = 32'd0;
    mem[189] = 32'd0;
    mem[190] = 32'd0;
    mem[191] = 32'd0;
    mem[192] = 32'd0;
    mem[193] = 32'd0;
    mem[194] = 32'd0;
    mem[195] = 32'd0;
    mem[196] = 32'd0;
    mem[197] = 32'd0;
    mem[198] = 32'd0;
    mem[199] = 32'd0;
    mem[200] = 32'd0;
    mem[201] = 32'd0;
    mem[202] = 32'd0;
    mem[203] = 32'd0;
    mem[204] = 32'd0;
    mem[205] = 32'd0;
    mem[206] = 32'd0;
    mem[207] = 32'd0;
    mem[208] = 32'd0;
    mem[209] = 32'd0;
    mem[210] = 32'd0;
    mem[211] = 32'd0;
    mem[212] = 32'd0;
    mem[213] = 32'd0;
    mem[214] = 32'd0;
    mem[215] = 32'd0;
    mem[216] = 32'd0;
    mem[217] = 32'd0;
    mem[218] = 32'd0;
    mem[219] = 32'd0;
    mem[220] = 32'd0;
    mem[221] = 32'd0;
    mem[222] = 32'd0;
    mem[223] = 32'd0;
    mem[224] = 32'd0;
    mem[225] = 32'd0;
    mem[226] = 32'd0;
    mem[227] = 32'd0;
    mem[228] = 32'd0;
    mem[229] = 32'd0;
    mem[230] = 32'd0;
    mem[231] = 32'd0;
    mem[232] = 32'd0;
    mem[233] = 32'd0;
    mem[234] = 32'd0;
    mem[235] = 32'd0;
    mem[236] = 32'd0;
    mem[237] = 32'd0;
    mem[238] = 32'd0;
    mem[239] = 32'd0;
    mem[240] = 32'd0;
    mem[241] = 32'd0;
    mem[242] = 32'd0;
    mem[243] = 32'd0;
    mem[244] = 32'd0;
    mem[245] = 32'd0;
    mem[246] = 32'd0;
    mem[247] = 32'd0;
    mem[248] = 32'd0;
    mem[249] = 32'd0;
    mem[250] = 32'd0;
    mem[251] = 32'd0;
    mem[252] = 32'd0;
    mem[253] = 32'd0;
    mem[254] = 32'd0;
    mem[255] = 32'd0;
    mem[256] = 32'd0;
    mem[257] = 32'd0;
    mem[258] = 32'd0;
    mem[259] = 32'd0;
    mem[260] = 32'd0;
    mem[261] = 32'd0;
    mem[262] = 32'd0;
    mem[263] = 32'd0;
    mem[264] = 32'd0;
    mem[265] = 32'd0;
    mem[266] = 32'd0;
    mem[267] = 32'd0;
    mem[268] = 32'd0;
    mem[269] = 32'd0;
    mem[270] = 32'd0;
    mem[271] = 32'd0;
    mem[272] = 32'd0;
    mem[273] = 32'd0;
    mem[274] = 32'd0;
    mem[275] = 32'd0;
    mem[276] = 32'd0;
    mem[277] = 32'd0;
    mem[278] = 32'd0;
    mem[279] = 32'd0;
    mem[280] = 32'd0;
    mem[281] = 32'd0;
    mem[282] = 32'd0;
    mem[283] = 32'd0;
    mem[284] = 32'd0;
    mem[285] = 32'd0;
    mem[286] = 32'd0;
    mem[287] = 32'd0;
    mem[288] = 32'd0;
    mem[289] = 32'd0;
    mem[290] = 32'd0;
    mem[291] = 32'd0;
    mem[292] = 32'd0;
    mem[293] = 32'd0;
    mem[294] = 32'd0;
    mem[295] = 32'd0;
    mem[296] = 32'd0;
    mem[297] = 32'd0;
    mem[298] = 32'd0;
    mem[299] = 32'd0;
    mem[300] = 32'd0;
    mem[301] = 32'd0;
    mem[302] = 32'd0;
    mem[303] = 32'd0;
    mem[304] = 32'd0;
    mem[305] = 32'd0;
    mem[306] = 32'd0;
    mem[307] = 32'd0;
    mem[308] = 32'd0;
    mem[309] = 32'd0;
    mem[310] = 32'd0;
    mem[311] = 32'd0;
    mem[312] = 32'd0;
    mem[313] = 32'd0;
    mem[314] = 32'd0;
    mem[315] = 32'd0;
    mem[316] = 32'd0;
    mem[317] = 32'd0;
    mem[318] = 32'd0;
    mem[319] = 32'd0;
    mem[320] = 32'd0;
    mem[321] = 32'd0;
    mem[322] = 32'd0;
    mem[323] = 32'd0;
    mem[324] = 32'd0;
    mem[325] = 32'd0;
    mem[326] = 32'd0;
    mem[327] = 32'd0;
    mem[328] = 32'd0;
    mem[329] = 32'd0;
    mem[330] = 32'd0;
    mem[331] = 32'd0;
    mem[332] = 32'd0;
    mem[333] = 32'd0;
    mem[334] = 32'd0;
    mem[335] = 32'd0;
    mem[336] = 32'd0;
    mem[337] = 32'd0;
    mem[338] = 32'd0;
    mem[339] = 32'd0;
    mem[340] = 32'd0;
    mem[341] = 32'd0;
    mem[342] = 32'd0;
    mem[343] = 32'd0;
    mem[344] = 32'd0;
    mem[345] = 32'd0;
    mem[346] = 32'd0;
    mem[347] = 32'd0;
    mem[348] = 32'd0;
    mem[349] = 32'd0;
    mem[350] = 32'd0;
    mem[351] = 32'd0;
    mem[352] = 32'd0;
    mem[353] = 32'd0;
    mem[354] = 32'd0;
    mem[355] = 32'd0;
    mem[356] = 32'd0;
    mem[357] = 32'd0;
    mem[358] = 32'd0;
    mem[359] = 32'd0;
    mem[360] = 32'd0;
    mem[361] = 32'd0;
    mem[362] = 32'd0;
    mem[363] = 32'd0;
    mem[364] = 32'd0;
    mem[365] = 32'd0;
    mem[366] = 32'd0;
    mem[367] = 32'd0;
    mem[368] = 32'd0;
    mem[369] = 32'd0;
    mem[370] = 32'd0;
    mem[371] = 32'd0;
    mem[372] = 32'd0;
    mem[373] = 32'd0;
    mem[374] = 32'd0;
    mem[375] = 32'd0;
    mem[376] = 32'd0;
    mem[377] = 32'd0;
    mem[378] = 32'd0;
    mem[379] = 32'd0;
    mem[380] = 32'd0;
    mem[381] = 32'd0;
    mem[382] = 32'd0;
    mem[383] = 32'd0;
    mem[384] = 32'd0;
    mem[385] = 32'd0;
    mem[386] = 32'd0;
    mem[387] = 32'd0;
    mem[388] = 32'd0;
    mem[389] = 32'd0;
    mem[390] = 32'd0;
    mem[391] = 32'd0;
    mem[392] = 32'd0;
    mem[393] = 32'd0;
    mem[394] = 32'd0;
    mem[395] = 32'd0;
    mem[396] = 32'd0;
    mem[397] = 32'd0;
    mem[398] = 32'd0;
    mem[399] = 32'd0;
    mem[400] = 32'd0;
    mem[401] = 32'd0;
    mem[402] = 32'd0;
    mem[403] = 32'd0;
    mem[404] = 32'd0;
    mem[405] = 32'd0;
    mem[406] = 32'd0;
    mem[407] = 32'd0;
    mem[408] = 32'd0;
    mem[409] = 32'd0;
    mem[410] = 32'd0;
    mem[411] = 32'd0;
    mem[412] = 32'd0;
    mem[413] = 32'd0;
    mem[414] = 32'd0;
    mem[415] = 32'd0;
    mem[416] = 32'd0;
    mem[417] = 32'd0;
    mem[418] = 32'd0;
    mem[419] = 32'd0;
    mem[420] = 32'd0;
    mem[421] = 32'd0;
    mem[422] = 32'd0;
    mem[423] = 32'd0;
    mem[424] = 32'd0;
    mem[425] = 32'd0;
    mem[426] = 32'd0;
    mem[427] = 32'd0;
    mem[428] = 32'd0;
    mem[429] = 32'd0;
    mem[430] = 32'd0;
    mem[431] = 32'd0;
    mem[432] = 32'd0;
    mem[433] = 32'd0;
    mem[434] = 32'd0;
    mem[435] = 32'd0;
    mem[436] = 32'd0;
    mem[437] = 32'd0;
    mem[438] = 32'd0;
    mem[439] = 32'd0;
    mem[440] = 32'd0;
    mem[441] = 32'd0;
    mem[442] = 32'd0;
    mem[443] = 32'd0;
    mem[444] = 32'd0;
    mem[445] = 32'd0;
    mem[446] = 32'd0;
    mem[447] = 32'd0;
    mem[448] = 32'd0;
    mem[449] = 32'd0;
    mem[450] = 32'd0;
    mem[451] = 32'd0;
    mem[452] = 32'd0;
    mem[453] = 32'd0;
    mem[454] = 32'd0;
    mem[455] = 32'd0;
    mem[456] = 32'd0;
    mem[457] = 32'd0;
    mem[458] = 32'd0;
    mem[459] = 32'd0;
    mem[460] = 32'd0;
    mem[461] = 32'd0;
    mem[462] = 32'd0;
    mem[463] = 32'd0;
    mem[464] = 32'd0;
    mem[465] = 32'd0;
    mem[466] = 32'd0;
    mem[467] = 32'd0;
    mem[468] = 32'd0;
    mem[469] = 32'd0;
    mem[470] = 32'd0;
    mem[471] = 32'd0;
    mem[472] = 32'd0;
    mem[473] = 32'd0;
    mem[474] = 32'd0;
    mem[475] = 32'd0;
    mem[476] = 32'd0;
    mem[477] = 32'd0;
    mem[478] = 32'd0;
    mem[479] = 32'd0;
    mem[480] = 32'd0;
    mem[481] = 32'd0;
    mem[482] = 32'd0;
    mem[483] = 32'd0;
    mem[484] = 32'd0;
    mem[485] = 32'd0;
    mem[486] = 32'd0;
    mem[487] = 32'd0;
    mem[488] = 32'd0;
    mem[489] = 32'd0;
    mem[490] = 32'd0;
    mem[491] = 32'd0;
    mem[492] = 32'd0;
    mem[493] = 32'd0;
    mem[494] = 32'd0;
    mem[495] = 32'd0;
    mem[496] = 32'd0;
    mem[497] = 32'd0;
    mem[498] = 32'd0;
    mem[499] = 32'd0;
    mem[500] = 32'd0;
    mem[501] = 32'd0;
    mem[502] = 32'd0;
    mem[503] = 32'd0;
    mem[504] = 32'd0;
    mem[505] = 32'd0;
    mem[506] = 32'd0;
    mem[507] = 32'd0;
    mem[508] = 32'd0;
    mem[509] = 32'd0;
    mem[510] = 32'd0;
    mem[511] = 32'd0;
  end
  always @(posedge clk) begin
    if (mem_w_en)
      mem[mem_w_addr] <= mem_w_data;
  end
  reg [31:0] _0_;
  always @(posedge clk) begin
    _0_ <= mem[mem_r_addr];
  end
  assign mem_r_data = _0_;
  assign r_data = mem_r_data;
  assign mem_r_addr = r_addr;
  assign mem_r_en = 1'h1;
  assign mem_w_data = w_data;
  assign mem_w_addr = w_addr;
  assign mem_w_en = w_en;
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.store_output_shift_inc" *)
(* generator = "Amaranth" *)
module store_output_shift_inc(clk, restart, limit, r_addr, next, rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$55  = 0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:141" *)
  wire [9:0] \$1 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:141" *)
  wire [9:0] \$2 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:141" *)
  wire [9:0] \$4 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:141" *)
  wire [9:0] \$5 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:141" *)
  wire \$7 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:132" *)
  reg [8:0] last_addr = 9'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:132" *)
  reg [8:0] \last_addr$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:125" *)
  input [8:0] limit;
  wire [8:0] limit;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:124" *)
  input next;
  wire next;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:126" *)
  output [8:0] r_addr;
  reg [8:0] r_addr;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:123" *)
  input restart;
  wire restart;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  always @(posedge clk)
    last_addr <= \last_addr$next ;
  assign \$2  = last_addr + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:141" *) 1'h1;
  assign \$5  = limit - (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:141" *) 1'h1;
  assign \$7  = last_addr >= (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:141" *) \$5 ;
  assign \$4  = \$7  ? (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:141" *) 10'h000 : \$2 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$55 ) begin end
    \last_addr$next  = r_addr;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \last_addr$next  = 9'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$55 ) begin end
    r_addr = last_addr;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:137" *)
    casez ({ next, restart })
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:137" */
      2'b?1:
          r_addr = 9'h000;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:139" */
      2'b1?:
          r_addr = \$4 [8:0];
    endcase
  end
  assign \$1  = \$4 ;
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.store_output_shift_set" *)
(* generator = "Amaranth" *)
module store_output_shift_set(clk, restart, count, \$signal , w_addr, w_data, in0, start, done, rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$56  = 0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:88" *)
  wire \$1 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:88" *)
  wire \$3 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:97" *)
  wire [10:0] \$5 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:97" *)
  wire [10:0] \$6 ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:61" *)
  output \$signal ;
  reg \$signal ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:65" *)
  output [9:0] count;
  reg [9:0] count = 10'h000;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:65" *)
  reg [9:0] \count$next ;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:46" *)
  output done;
  wire done;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:47" *)
  input [31:0] in0;
  wire [31:0] in0;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:64" *)
  input restart;
  wire restart;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/registerfile.py:45" *)
  input start;
  wire start;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:66" *)
  wire updated;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:62" *)
  output [8:0] w_addr;
  wire [8:0] w_addr;
  (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:63" *)
  output [31:0] w_data;
  reg [31:0] w_data;
  assign \$3  = \$1  | (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:88" *) restart;
  assign \$6  = count + (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:97" *) 1'h1;
  always @(posedge clk)
    count <= \count$next ;
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$56 ) begin end
    \count$next  = count;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:90" *)
    casez ({ start, restart })
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:90" */
      2'b?1:
          \count$next  = 10'h000;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:92" */
      2'b1?:
          \count$next  = \$6 [9:0];
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \count$next  = 10'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$56 ) begin end
    \$signal  = 1'h0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:90" *)
    casez ({ start, restart })
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:90" */
      2'b?1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:92" */
      2'b1?:
          \$signal  = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$56 ) begin end
    w_data = 32'd0;
    (* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:90" *)
    casez ({ start, restart })
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:90" */
      2'b?1:
          /* empty */;
      /* src = "/home/cx/CFU-Playground/proj/WinoFPGA/gateware/store.py:92" */
      2'b1?:
          w_data = in0;
    endcase
  end
  assign \$5  = \$6 ;
  assign updated = \$3 ;
  assign w_addr = count[8:0];
  assign done = 1'h1;
  assign \$1  = \$signal ;
endmodule

(* \amaranth.hierarchy  = "Cfu.fn0.FIFO.unbuffered" *)
(* generator = "Amaranth" *)
module unbuffered(clk, w_data, w_en, w_rdy, r_data, r_en, r_rdy, level, rst);
  reg \$auto$verilog_backend.cc:2097:dump_module$57  = 0;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:93" *)
  wire [9:0] \$10 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:93" *)
  wire [9:0] \$11 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:93" *)
  wire [9:0] \$13 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:93" *)
  wire \$14 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:140" *)
  wire \$17 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:93" *)
  wire [9:0] \$19 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:134" *)
  wire \$2 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:93" *)
  wire [9:0] \$20 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:93" *)
  wire [9:0] \$22 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:93" *)
  wire \$23 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:141" *)
  wire \$26 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:167" *)
  wire \$28 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:140" *)
  wire \$29 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:167" *)
  wire \$32 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:168" *)
  wire [9:0] \$34 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:168" *)
  wire [9:0] \$35 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:140" *)
  wire \$37 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:169" *)
  wire \$39 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:135" *)
  wire \$4 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:141" *)
  wire \$40 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:169" *)
  wire \$43 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:170" *)
  wire [9:0] \$45 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:170" *)
  wire [9:0] \$46 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:153" *)
  wire \$6 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:141" *)
  wire \$8 ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:148" *)
  reg [8:0] consume = 9'h000;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:148" *)
  reg [8:0] \consume$next ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:122" *)
  output [8:0] level;
  reg [8:0] level = 9'h000;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:122" *)
  reg [8:0] \level$next ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:147" *)
  reg [8:0] produce = 9'h000;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:147" *)
  reg [8:0] \produce$next ;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:83" *)
  output [31:0] r_data;
  wire [31:0] r_data;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:85" *)
  input r_en;
  wire r_en;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:86" *)
  wire [8:0] r_level;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:84" *)
  output r_rdy;
  wire r_rdy;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:146" *)
  wire [8:0] storage_r_addr;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:146" *)
  wire [31:0] storage_r_data;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:146" *)
  wire storage_r_en;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:144" *)
  wire [8:0] storage_w_addr;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:144" *)
  wire [31:0] storage_w_data;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:144" *)
  wire storage_w_en;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:78" *)
  input [31:0] w_data;
  wire [31:0] w_data;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:80" *)
  input w_en;
  wire w_en;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:81" *)
  wire [8:0] w_level;
  (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:79" *)
  output w_rdy;
  wire w_rdy;
  reg [31:0] storage [510:0];
  initial begin
    storage[0] = 32'd0;
    storage[1] = 32'd0;
    storage[2] = 32'd0;
    storage[3] = 32'd0;
    storage[4] = 32'd0;
    storage[5] = 32'd0;
    storage[6] = 32'd0;
    storage[7] = 32'd0;
    storage[8] = 32'd0;
    storage[9] = 32'd0;
    storage[10] = 32'd0;
    storage[11] = 32'd0;
    storage[12] = 32'd0;
    storage[13] = 32'd0;
    storage[14] = 32'd0;
    storage[15] = 32'd0;
    storage[16] = 32'd0;
    storage[17] = 32'd0;
    storage[18] = 32'd0;
    storage[19] = 32'd0;
    storage[20] = 32'd0;
    storage[21] = 32'd0;
    storage[22] = 32'd0;
    storage[23] = 32'd0;
    storage[24] = 32'd0;
    storage[25] = 32'd0;
    storage[26] = 32'd0;
    storage[27] = 32'd0;
    storage[28] = 32'd0;
    storage[29] = 32'd0;
    storage[30] = 32'd0;
    storage[31] = 32'd0;
    storage[32] = 32'd0;
    storage[33] = 32'd0;
    storage[34] = 32'd0;
    storage[35] = 32'd0;
    storage[36] = 32'd0;
    storage[37] = 32'd0;
    storage[38] = 32'd0;
    storage[39] = 32'd0;
    storage[40] = 32'd0;
    storage[41] = 32'd0;
    storage[42] = 32'd0;
    storage[43] = 32'd0;
    storage[44] = 32'd0;
    storage[45] = 32'd0;
    storage[46] = 32'd0;
    storage[47] = 32'd0;
    storage[48] = 32'd0;
    storage[49] = 32'd0;
    storage[50] = 32'd0;
    storage[51] = 32'd0;
    storage[52] = 32'd0;
    storage[53] = 32'd0;
    storage[54] = 32'd0;
    storage[55] = 32'd0;
    storage[56] = 32'd0;
    storage[57] = 32'd0;
    storage[58] = 32'd0;
    storage[59] = 32'd0;
    storage[60] = 32'd0;
    storage[61] = 32'd0;
    storage[62] = 32'd0;
    storage[63] = 32'd0;
    storage[64] = 32'd0;
    storage[65] = 32'd0;
    storage[66] = 32'd0;
    storage[67] = 32'd0;
    storage[68] = 32'd0;
    storage[69] = 32'd0;
    storage[70] = 32'd0;
    storage[71] = 32'd0;
    storage[72] = 32'd0;
    storage[73] = 32'd0;
    storage[74] = 32'd0;
    storage[75] = 32'd0;
    storage[76] = 32'd0;
    storage[77] = 32'd0;
    storage[78] = 32'd0;
    storage[79] = 32'd0;
    storage[80] = 32'd0;
    storage[81] = 32'd0;
    storage[82] = 32'd0;
    storage[83] = 32'd0;
    storage[84] = 32'd0;
    storage[85] = 32'd0;
    storage[86] = 32'd0;
    storage[87] = 32'd0;
    storage[88] = 32'd0;
    storage[89] = 32'd0;
    storage[90] = 32'd0;
    storage[91] = 32'd0;
    storage[92] = 32'd0;
    storage[93] = 32'd0;
    storage[94] = 32'd0;
    storage[95] = 32'd0;
    storage[96] = 32'd0;
    storage[97] = 32'd0;
    storage[98] = 32'd0;
    storage[99] = 32'd0;
    storage[100] = 32'd0;
    storage[101] = 32'd0;
    storage[102] = 32'd0;
    storage[103] = 32'd0;
    storage[104] = 32'd0;
    storage[105] = 32'd0;
    storage[106] = 32'd0;
    storage[107] = 32'd0;
    storage[108] = 32'd0;
    storage[109] = 32'd0;
    storage[110] = 32'd0;
    storage[111] = 32'd0;
    storage[112] = 32'd0;
    storage[113] = 32'd0;
    storage[114] = 32'd0;
    storage[115] = 32'd0;
    storage[116] = 32'd0;
    storage[117] = 32'd0;
    storage[118] = 32'd0;
    storage[119] = 32'd0;
    storage[120] = 32'd0;
    storage[121] = 32'd0;
    storage[122] = 32'd0;
    storage[123] = 32'd0;
    storage[124] = 32'd0;
    storage[125] = 32'd0;
    storage[126] = 32'd0;
    storage[127] = 32'd0;
    storage[128] = 32'd0;
    storage[129] = 32'd0;
    storage[130] = 32'd0;
    storage[131] = 32'd0;
    storage[132] = 32'd0;
    storage[133] = 32'd0;
    storage[134] = 32'd0;
    storage[135] = 32'd0;
    storage[136] = 32'd0;
    storage[137] = 32'd0;
    storage[138] = 32'd0;
    storage[139] = 32'd0;
    storage[140] = 32'd0;
    storage[141] = 32'd0;
    storage[142] = 32'd0;
    storage[143] = 32'd0;
    storage[144] = 32'd0;
    storage[145] = 32'd0;
    storage[146] = 32'd0;
    storage[147] = 32'd0;
    storage[148] = 32'd0;
    storage[149] = 32'd0;
    storage[150] = 32'd0;
    storage[151] = 32'd0;
    storage[152] = 32'd0;
    storage[153] = 32'd0;
    storage[154] = 32'd0;
    storage[155] = 32'd0;
    storage[156] = 32'd0;
    storage[157] = 32'd0;
    storage[158] = 32'd0;
    storage[159] = 32'd0;
    storage[160] = 32'd0;
    storage[161] = 32'd0;
    storage[162] = 32'd0;
    storage[163] = 32'd0;
    storage[164] = 32'd0;
    storage[165] = 32'd0;
    storage[166] = 32'd0;
    storage[167] = 32'd0;
    storage[168] = 32'd0;
    storage[169] = 32'd0;
    storage[170] = 32'd0;
    storage[171] = 32'd0;
    storage[172] = 32'd0;
    storage[173] = 32'd0;
    storage[174] = 32'd0;
    storage[175] = 32'd0;
    storage[176] = 32'd0;
    storage[177] = 32'd0;
    storage[178] = 32'd0;
    storage[179] = 32'd0;
    storage[180] = 32'd0;
    storage[181] = 32'd0;
    storage[182] = 32'd0;
    storage[183] = 32'd0;
    storage[184] = 32'd0;
    storage[185] = 32'd0;
    storage[186] = 32'd0;
    storage[187] = 32'd0;
    storage[188] = 32'd0;
    storage[189] = 32'd0;
    storage[190] = 32'd0;
    storage[191] = 32'd0;
    storage[192] = 32'd0;
    storage[193] = 32'd0;
    storage[194] = 32'd0;
    storage[195] = 32'd0;
    storage[196] = 32'd0;
    storage[197] = 32'd0;
    storage[198] = 32'd0;
    storage[199] = 32'd0;
    storage[200] = 32'd0;
    storage[201] = 32'd0;
    storage[202] = 32'd0;
    storage[203] = 32'd0;
    storage[204] = 32'd0;
    storage[205] = 32'd0;
    storage[206] = 32'd0;
    storage[207] = 32'd0;
    storage[208] = 32'd0;
    storage[209] = 32'd0;
    storage[210] = 32'd0;
    storage[211] = 32'd0;
    storage[212] = 32'd0;
    storage[213] = 32'd0;
    storage[214] = 32'd0;
    storage[215] = 32'd0;
    storage[216] = 32'd0;
    storage[217] = 32'd0;
    storage[218] = 32'd0;
    storage[219] = 32'd0;
    storage[220] = 32'd0;
    storage[221] = 32'd0;
    storage[222] = 32'd0;
    storage[223] = 32'd0;
    storage[224] = 32'd0;
    storage[225] = 32'd0;
    storage[226] = 32'd0;
    storage[227] = 32'd0;
    storage[228] = 32'd0;
    storage[229] = 32'd0;
    storage[230] = 32'd0;
    storage[231] = 32'd0;
    storage[232] = 32'd0;
    storage[233] = 32'd0;
    storage[234] = 32'd0;
    storage[235] = 32'd0;
    storage[236] = 32'd0;
    storage[237] = 32'd0;
    storage[238] = 32'd0;
    storage[239] = 32'd0;
    storage[240] = 32'd0;
    storage[241] = 32'd0;
    storage[242] = 32'd0;
    storage[243] = 32'd0;
    storage[244] = 32'd0;
    storage[245] = 32'd0;
    storage[246] = 32'd0;
    storage[247] = 32'd0;
    storage[248] = 32'd0;
    storage[249] = 32'd0;
    storage[250] = 32'd0;
    storage[251] = 32'd0;
    storage[252] = 32'd0;
    storage[253] = 32'd0;
    storage[254] = 32'd0;
    storage[255] = 32'd0;
    storage[256] = 32'd0;
    storage[257] = 32'd0;
    storage[258] = 32'd0;
    storage[259] = 32'd0;
    storage[260] = 32'd0;
    storage[261] = 32'd0;
    storage[262] = 32'd0;
    storage[263] = 32'd0;
    storage[264] = 32'd0;
    storage[265] = 32'd0;
    storage[266] = 32'd0;
    storage[267] = 32'd0;
    storage[268] = 32'd0;
    storage[269] = 32'd0;
    storage[270] = 32'd0;
    storage[271] = 32'd0;
    storage[272] = 32'd0;
    storage[273] = 32'd0;
    storage[274] = 32'd0;
    storage[275] = 32'd0;
    storage[276] = 32'd0;
    storage[277] = 32'd0;
    storage[278] = 32'd0;
    storage[279] = 32'd0;
    storage[280] = 32'd0;
    storage[281] = 32'd0;
    storage[282] = 32'd0;
    storage[283] = 32'd0;
    storage[284] = 32'd0;
    storage[285] = 32'd0;
    storage[286] = 32'd0;
    storage[287] = 32'd0;
    storage[288] = 32'd0;
    storage[289] = 32'd0;
    storage[290] = 32'd0;
    storage[291] = 32'd0;
    storage[292] = 32'd0;
    storage[293] = 32'd0;
    storage[294] = 32'd0;
    storage[295] = 32'd0;
    storage[296] = 32'd0;
    storage[297] = 32'd0;
    storage[298] = 32'd0;
    storage[299] = 32'd0;
    storage[300] = 32'd0;
    storage[301] = 32'd0;
    storage[302] = 32'd0;
    storage[303] = 32'd0;
    storage[304] = 32'd0;
    storage[305] = 32'd0;
    storage[306] = 32'd0;
    storage[307] = 32'd0;
    storage[308] = 32'd0;
    storage[309] = 32'd0;
    storage[310] = 32'd0;
    storage[311] = 32'd0;
    storage[312] = 32'd0;
    storage[313] = 32'd0;
    storage[314] = 32'd0;
    storage[315] = 32'd0;
    storage[316] = 32'd0;
    storage[317] = 32'd0;
    storage[318] = 32'd0;
    storage[319] = 32'd0;
    storage[320] = 32'd0;
    storage[321] = 32'd0;
    storage[322] = 32'd0;
    storage[323] = 32'd0;
    storage[324] = 32'd0;
    storage[325] = 32'd0;
    storage[326] = 32'd0;
    storage[327] = 32'd0;
    storage[328] = 32'd0;
    storage[329] = 32'd0;
    storage[330] = 32'd0;
    storage[331] = 32'd0;
    storage[332] = 32'd0;
    storage[333] = 32'd0;
    storage[334] = 32'd0;
    storage[335] = 32'd0;
    storage[336] = 32'd0;
    storage[337] = 32'd0;
    storage[338] = 32'd0;
    storage[339] = 32'd0;
    storage[340] = 32'd0;
    storage[341] = 32'd0;
    storage[342] = 32'd0;
    storage[343] = 32'd0;
    storage[344] = 32'd0;
    storage[345] = 32'd0;
    storage[346] = 32'd0;
    storage[347] = 32'd0;
    storage[348] = 32'd0;
    storage[349] = 32'd0;
    storage[350] = 32'd0;
    storage[351] = 32'd0;
    storage[352] = 32'd0;
    storage[353] = 32'd0;
    storage[354] = 32'd0;
    storage[355] = 32'd0;
    storage[356] = 32'd0;
    storage[357] = 32'd0;
    storage[358] = 32'd0;
    storage[359] = 32'd0;
    storage[360] = 32'd0;
    storage[361] = 32'd0;
    storage[362] = 32'd0;
    storage[363] = 32'd0;
    storage[364] = 32'd0;
    storage[365] = 32'd0;
    storage[366] = 32'd0;
    storage[367] = 32'd0;
    storage[368] = 32'd0;
    storage[369] = 32'd0;
    storage[370] = 32'd0;
    storage[371] = 32'd0;
    storage[372] = 32'd0;
    storage[373] = 32'd0;
    storage[374] = 32'd0;
    storage[375] = 32'd0;
    storage[376] = 32'd0;
    storage[377] = 32'd0;
    storage[378] = 32'd0;
    storage[379] = 32'd0;
    storage[380] = 32'd0;
    storage[381] = 32'd0;
    storage[382] = 32'd0;
    storage[383] = 32'd0;
    storage[384] = 32'd0;
    storage[385] = 32'd0;
    storage[386] = 32'd0;
    storage[387] = 32'd0;
    storage[388] = 32'd0;
    storage[389] = 32'd0;
    storage[390] = 32'd0;
    storage[391] = 32'd0;
    storage[392] = 32'd0;
    storage[393] = 32'd0;
    storage[394] = 32'd0;
    storage[395] = 32'd0;
    storage[396] = 32'd0;
    storage[397] = 32'd0;
    storage[398] = 32'd0;
    storage[399] = 32'd0;
    storage[400] = 32'd0;
    storage[401] = 32'd0;
    storage[402] = 32'd0;
    storage[403] = 32'd0;
    storage[404] = 32'd0;
    storage[405] = 32'd0;
    storage[406] = 32'd0;
    storage[407] = 32'd0;
    storage[408] = 32'd0;
    storage[409] = 32'd0;
    storage[410] = 32'd0;
    storage[411] = 32'd0;
    storage[412] = 32'd0;
    storage[413] = 32'd0;
    storage[414] = 32'd0;
    storage[415] = 32'd0;
    storage[416] = 32'd0;
    storage[417] = 32'd0;
    storage[418] = 32'd0;
    storage[419] = 32'd0;
    storage[420] = 32'd0;
    storage[421] = 32'd0;
    storage[422] = 32'd0;
    storage[423] = 32'd0;
    storage[424] = 32'd0;
    storage[425] = 32'd0;
    storage[426] = 32'd0;
    storage[427] = 32'd0;
    storage[428] = 32'd0;
    storage[429] = 32'd0;
    storage[430] = 32'd0;
    storage[431] = 32'd0;
    storage[432] = 32'd0;
    storage[433] = 32'd0;
    storage[434] = 32'd0;
    storage[435] = 32'd0;
    storage[436] = 32'd0;
    storage[437] = 32'd0;
    storage[438] = 32'd0;
    storage[439] = 32'd0;
    storage[440] = 32'd0;
    storage[441] = 32'd0;
    storage[442] = 32'd0;
    storage[443] = 32'd0;
    storage[444] = 32'd0;
    storage[445] = 32'd0;
    storage[446] = 32'd0;
    storage[447] = 32'd0;
    storage[448] = 32'd0;
    storage[449] = 32'd0;
    storage[450] = 32'd0;
    storage[451] = 32'd0;
    storage[452] = 32'd0;
    storage[453] = 32'd0;
    storage[454] = 32'd0;
    storage[455] = 32'd0;
    storage[456] = 32'd0;
    storage[457] = 32'd0;
    storage[458] = 32'd0;
    storage[459] = 32'd0;
    storage[460] = 32'd0;
    storage[461] = 32'd0;
    storage[462] = 32'd0;
    storage[463] = 32'd0;
    storage[464] = 32'd0;
    storage[465] = 32'd0;
    storage[466] = 32'd0;
    storage[467] = 32'd0;
    storage[468] = 32'd0;
    storage[469] = 32'd0;
    storage[470] = 32'd0;
    storage[471] = 32'd0;
    storage[472] = 32'd0;
    storage[473] = 32'd0;
    storage[474] = 32'd0;
    storage[475] = 32'd0;
    storage[476] = 32'd0;
    storage[477] = 32'd0;
    storage[478] = 32'd0;
    storage[479] = 32'd0;
    storage[480] = 32'd0;
    storage[481] = 32'd0;
    storage[482] = 32'd0;
    storage[483] = 32'd0;
    storage[484] = 32'd0;
    storage[485] = 32'd0;
    storage[486] = 32'd0;
    storage[487] = 32'd0;
    storage[488] = 32'd0;
    storage[489] = 32'd0;
    storage[490] = 32'd0;
    storage[491] = 32'd0;
    storage[492] = 32'd0;
    storage[493] = 32'd0;
    storage[494] = 32'd0;
    storage[495] = 32'd0;
    storage[496] = 32'd0;
    storage[497] = 32'd0;
    storage[498] = 32'd0;
    storage[499] = 32'd0;
    storage[500] = 32'd0;
    storage[501] = 32'd0;
    storage[502] = 32'd0;
    storage[503] = 32'd0;
    storage[504] = 32'd0;
    storage[505] = 32'd0;
    storage[506] = 32'd0;
    storage[507] = 32'd0;
    storage[508] = 32'd0;
    storage[509] = 32'd0;
    storage[510] = 32'd0;
  end
  always @(posedge clk) begin
    if (storage_w_en)
      storage[storage_w_addr] <= storage_w_data;
  end
  reg [31:0] _0_;
  always @(posedge clk) begin
    if (storage_r_en) begin
      _0_ <= storage[storage_r_addr];
    end
  end
  assign storage_r_data = _0_;
  assign \$11  = produce + (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:93" *) 1'h1;
  assign \$14  = produce == (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:93" *) 9'h1fe;
  assign \$13  = \$14  ? (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:93" *) 10'h000 : \$11 ;
  assign \$17  = r_rdy & (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:140" *) r_en;
  assign \$20  = consume + (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:93" *) 1'h1;
  assign \$23  = consume == (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:93" *) 9'h1fe;
  assign \$22  = \$23  ? (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:93" *) 10'h000 : \$20 ;
  assign \$26  = w_rdy & (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:141" *) w_en;
  assign \$2  = level != (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:134" *) 9'h1ff;
  assign \$29  = r_rdy & (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:140" *) r_en;
  assign \$28  = ~ (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:167" *) \$29 ;
  assign \$32  = \$26  & (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:167" *) \$28 ;
  assign \$35  = level + (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:168" *) 1'h1;
  assign \$37  = r_rdy & (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:140" *) r_en;
  assign \$40  = w_rdy & (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:141" *) w_en;
  assign \$39  = ~ (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:169" *) \$40 ;
  assign \$43  = \$37  & (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:169" *) \$39 ;
  assign \$46  = level - (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:170" *) 1'h1;
  always @(posedge clk)
    produce <= \produce$next ;
  always @(posedge clk)
    consume <= \consume$next ;
  assign \$4  = | (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:135" *) level;
  always @(posedge clk)
    level <= \level$next ;
  assign \$6  = w_en & (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:153" *) w_rdy;
  assign \$8  = w_rdy & (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:141" *) w_en;
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$57 ) begin end
    \consume$next  = consume;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:164" *)
    casez (\$17 )
      /* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:164" */
      1'h1:
          \consume$next  = \$22 [8:0];
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \consume$next  = 9'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$57 ) begin end
    \level$next  = level;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:167" *)
    casez (\$32 )
      /* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:167" */
      1'h1:
          \level$next  = \$35 [8:0];
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:169" *)
    casez (\$43 )
      /* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:169" */
      1'h1:
          \level$next  = \$46 [8:0];
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \level$next  = 9'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$57 ) begin end
    \produce$next  = produce;
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:155" *)
    casez (\$8 )
      /* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/lib/fifo.py:155" */
      1'h1:
          \produce$next  = \$13 [8:0];
    endcase
    (* src = "/home/cx/CFU-Playground/third_party/python/amaranth/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \produce$next  = 9'h000;
    endcase
  end
  assign \$10  = \$13 ;
  assign \$19  = \$22 ;
  assign \$34  = \$35 ;
  assign \$45  = \$46 ;
  assign storage_r_en = r_en;
  assign r_data = storage_r_data;
  assign storage_r_addr = consume;
  assign storage_w_en = \$6 ;
  assign storage_w_data = w_data;
  assign storage_w_addr = produce;
  assign r_level = level;
  assign w_level = level;
  assign r_rdy = \$4 ;
  assign w_rdy = \$2 ;
endmodule
